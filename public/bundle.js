var fsDnd=function(t){var e={};function i(l){if(e[l])return e[l].exports;var n=e[l]={i:l,l:!1,exports:{}};return t[l].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=t,i.c=e,i.d=function(t,e,l){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:l})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var l=Object.create(null);if(i.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(l,n,function(e){return t[e]}.bind(null,n));return l},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="public",i(i.s=6)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(Buffer) {/* unused harmony export Filestack */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _filestack$init; });\n/* unused harmony export version */\n/* unused harmony export EAlignOptions */\n/* unused harmony export EAlignFacesOptions */\n/* unused harmony export EFitOptions */\n/* unused harmony export EBlurMode */\n/* unused harmony export EShapeType */\n/* unused harmony export ENoiseType */\n/* unused harmony export EStyleType */\n/* unused harmony export EColorspaceType */\n/* unused harmony export ECropfacesType */\n/* unused harmony export EVideoTypes */\n/* unused harmony export EUrlscreenshotAgent */\n/* unused harmony export EUrlscreenshotMode */\n/* unused harmony export EUrlscreenshotOrientation */\n/* unused harmony export EVideoLocations */\n/* unused harmony export EVideoAccess */\n/* unused harmony export EVideoAccessMode */\n/* unused harmony export transform */\n/* unused harmony export Align */\n/* unused harmony export FitOptions */\n/* unused harmony export BlurMode */\n/* unused harmony export ShapeType */\n/* unused harmony export NoiseType */\n/* unused harmony export StyleType */\n/* unused harmony export ColorspaceType */\n/* unused harmony export CropfacesType */\n/* unused harmony export VideoTypes */\n/* unused harmony export URLScreenshotAgent */\n/* unused harmony export URLScreenshotMode */\n/* unused harmony export URLScreenshotOrientation */\n/* unused harmony export Locations */\n/* unused harmony export VideoAccess */\n/* unused harmony export VideoAccessMode */\n/* unused harmony export EnhancePreset */\n/* unused harmony export Filelink */\n/* unused harmony export FilestackErrorType */\n/* unused harmony export FsHttpMethod */\n/* unused harmony export FsRequest */\n/* unused harmony export FsRequestErrorCode */\n/* unused harmony export FsRequestError */\n/* unused harmony export FsCancelToken */\n/* unused harmony export resolveCdnUrl */\n/* unused harmony export resolveHost */\n/* unused harmony export removeEmpty */\n/* unused harmony export uniqueTime */\n/* unused harmony export uniqueId */\n/* unused harmony export extensionToMime */\n/* unused harmony export sanitizeName */\n/* unused harmony export filterObject */\n/* unused harmony export cleanUpCallbacks */\n/* unused harmony export md5 */\n/* unused harmony export b64 */\n/* unused harmony export getVersion */\n/* unused harmony export isMobile */\n/* unused harmony export isFacebook */\n/* unused harmony export TransformSchema */\n/* unused harmony export getSecurity */\n/* unused harmony export validateWebhookSignature */\n/* unused harmony export Client */\n/* unused harmony export FilestackError */\n/* unused harmony export PickerDisplayMode */\n/* unused harmony export getMimetype */\n/* unused harmony export PrefetchEvents */\n/*!\n * MIT License\n * \n * Copyright (c) 2020 Filestack\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\nvar filestack=function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=49)}([function(e,t,n){"use strict";n.d(t,"c",(function(){return r})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return p}));\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function r(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var o=function(){return(o=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function a(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function s(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((i=i.apply(e,t||[])).next())}))}function s(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}function c(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,r,o=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(i=o.next()).done;)a.push(i.value)}catch(e){r={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return a}function p(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(c(arguments[t]));return e}},function(e,t,n){"use strict";n.r(t),n.d(t,"resolveCdnUrl",(function(){return y})),n.d(t,"resolveHost",(function(){return v})),n.d(t,"removeEmpty",(function(){return g})),n.d(t,"uniqueTime",(function(){return b})),n.d(t,"uniqueId",(function(){return x})),n.d(t,"getMimetype",(function(){return k})),n.d(t,"extensionToMime",(function(){return w})),n.d(t,"sanitizeName",(function(){return _})),n.d(t,"filterObject",(function(){return j})),n.d(t,"cleanUpCallbacks",(function(){return O})),n.d(t,"md5",(function(){return u})),n.d(t,"b64",(function(){return f})),n.d(t,"getVersion",(function(){return d})),n.d(t,"isMobile",(function(){return m})),n.d(t,"isFacebook",(function(){return h}));var i,r=n(0),o={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma","es"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","msp","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/ktx":["ktx"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"application/font-ttf":"ttf","application/vnd.ms-fontobject":"eot","application/font-otf":"otf","text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard","vcr"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"],"application/prs.cww":["cww"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.keynote":["keynote","key"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.numbers":["numbers"],"application/vnd.apple.pages":["pages"],"application/vnd.apple.key":["key"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.citationstyles.style+xml":["csl"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["*stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["*dmg"],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":["*bdoc"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["*deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["*iso"],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":["*exe"],"application/x-msdownload":["*exe","*dll","com","bat","*msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["*wmf","*wmz","*emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":["*prc","*pdb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":["*m4a"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":["*ra"],"audio/x-wav":["*wav"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"image/prs.btif":["btif"],"image/prs.pti":["pti"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.airzip.accelerator.azv":["azv"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["*sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.microsoft.icon":["ico"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.tencent.tap":["tap"],"image/vnd.valve.source.texture":["vtf"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/vnd.zbrush.pcx":["pcx"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["*ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":["*bmp"],"image/x-pcx":["*pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/vnd.wfa.wsc":["wsc"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.opengex":["ogex"],"model/vnd.parasolid.transmit.binary":["x_b"],"model/vnd.parasolid.transmit.text":["x_t"],"model/vnd.usdz+zip":["usdz"],"model/vnd.valve.source.compiled-map":["bsp"],"model/vnd.vtu":["vtu"],"text/prs.lines.tag":["dsc"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":["*org"],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"],"application/x-msi":"msi","application/x-ms":"ms","application/vnd.geo+json":"geojson","application/vnd.debian.binary-package":"deb","application/font-woff":"woff","application/font-woff2":"woff2","application/x-font-ttf":["ttc","ttf"],"font/opentype":"otf","application/x-bb-appworld":"bbaw","application/x-cd-image":"iso","application/x-opera-extension":"oex","application/x-ms-dos-executable":"exe","text/vnd.rim.location.xloc":"xloc","application/x-desktop":"desktop","application/x-typescript":"ts","application/x-java-archive":"jar","application/x-sharedlib":"so"},a=n(14),s=n.n(a),c=n(25),p=n(26),l=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i,u=function(e){return btoa(p.ArrayBuffer.hash(e,!0))},f=function(e,t){void 0===t&&(t=!1);var n=btoa(e);return t?n.replace(/\\//g,"_").replace(/\\+/g,"-"):n},d=function(){return"JS-3.20.0"},m=function(){return navigator&&navigator.userAgent&&l.test(navigator.userAgent)},h=function(){return navigator&&navigator.userAgent&&/\\[FB.*;/i.test(navigator.userAgent)},y=function(e,t){var n=e.urls.cdnUrl;if(t&&(0===t.indexOf("src:")||0===t.indexOf("http"))){if(!e.apikey)throw new Error("Api key is required when storage alias is provided");return n+"/"+e.apikey}return n},v=function(e,t){if(!t)return e;var n=/filestackapi.com|filestackcontent.com/i;return Object.keys(e).forEach((function(i){e[i]=e[i].replace(n,t)})),e},g=function(e){var t=Object(r.a)({},e);return Object.keys(t).forEach((function(e){return!t[e]&&"boolean"!=typeof t[e]&&delete t[e]})),t},b=function(){var e=Date.now();return i=e===i?e+1:e},x=function(e){return void 0===e&&(e=10),new Array(e).join().replace(/(.|$)/g,(function(){return(36*Math.random()|0).toString(36)[Math.random()<.5?"toString":"toUpperCase"]()}))},k=function(e,t){var n=s()(e);if(n&&-1===["text/plain","application/octet-stream","application/x-ms","application/x-msi","application/zip"].indexOf(n.mime))return n.mime;if(t&&t.indexOf(".")>-1){var i=w(t);if(i)return i}try{if(c(e))return"text/plain"}catch(e){console.warn("Additional mimetype checks (text/plain) are currently not supported for browsers")}return n?n.mime:"application/octet-stream"},w=function(e){if(e&&0!==e.length){if(2===e.split("/").length)return e;e.indexOf(".")>-1&&(e=e.split(".").pop());for(var t=Object.keys(o),n=t.length,i=0;i<n;i++)if(o[t[i]].indexOf(e)>-1)return t[i]}},_=function(e,t){if(void 0===t&&(t=!0),"boolean"==typeof t&&!t)return e;var n,i="boolean"!=typeof t&&t.replacement?t.replacement:"-",r="boolean"!=typeof t&&t.exclude?t.exclude:["\\\\","{","}","|","%","`",\'"\',"\'","~","[","]","#","|","^","<",">"];if(!e||0===e.length)return"undefined";var o=e.split(".");return o.length>1&&(n=o.pop()),o.join(".").split("").map((function(e){return r.indexOf(e)>-1?i:e})).join("")+(n?"."+n:"")},j=function(e,t){return t&&0!==t.length?0===Object.keys(e).length?e:Object.keys(e).filter((function(e){return t.indexOf(e)>-1})).reduce((function(t,n){var i;return Object(r.a)(Object(r.a)({},t),((i={})[n]=e[n],i))}),{}):e},O=function e(t){return t&&0!==Object.keys(t).length?(Object.keys(t).forEach((function(n){"function"==typeof t[n]&&(t[n]=void 0),t[n]===Object(t[n])&&(t[n]=e(t[n]))})),t):t}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var i,r=n(0);!function(e){e.ABORTED="ABORTED",e.NETWORK="NETWORK",e.TIMEOUT="TIMEDOUT",e.SERVER="SERVER",e.REQUEST="REQUEST",e.OTHER="OTHER",e.REDIRECT="REDIRECT"}(i||(i={}));var o=function(e){function t(t,n,i,r){var o,a,s,c=this.constructor,p=e.call(this,t)||this;return p.config=n,p.response=i,p.code=r,o=p,a=c.prototype,(s=Object.setPrototypeOf)?s(o,a):o.__proto__=a,p}return Object(r.c)(t,e),t}(Error)},function(e,t,n){(function(i){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}t.log=function(){var e;return"object"===("undefined"==typeof console?"undefined":r(console))&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;var n="color: "+this.color;t.splice(1,0,n,"color: inherit");var i=0,r=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(i++,"%c"===e&&(r=i))})),t.splice(r,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}!e&&void 0!==i&&"env"in i&&(e=i.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=n(38)(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}).call(this,n(24))},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"d",(function(){return c})),n.d(t,"b",(function(){return p})),n.d(t,"h",(function(){return l})),n.d(t,"e",(function(){return u})),n.d(t,"i",(function(){return f})),n.d(t,"c",(function(){return i})),n.d(t,"g",(function(){return r}));var i=function(){return!1},r=function(){return!1};function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var a=function(e){return"[object ArrayBuffer]"===Object.prototype.toString.call(e)},s=function(e){return null!==e&&"object"===o(e)},c=function(e){return"[object File]"===Object.prototype.toString.call(e)},p=function(e){return"[object Blob]"===Object.prototype.toString.call(e)},l=function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},u=function(e){return"undefined"!=typeof FormData&&e instanceof FormData},f=function(e){return e.replace(/^\\s*/,"").replace(/\\s*$/,"")}},function(e,t,n){"use strict";var i;n.d(t,"a",(function(){return i})),function(e){e.GET="GET",e.DELETE="DELETE",e.HEAD="HEAD",e.PURGE="PURGE",e.OPTIONS="OPTIONS",e.POST="POST",e.PUT="PUT",e.PATH="PATH"}(i||(i={}))},function(e,t,n){"use strict";(function(e,i){n.d(t,"b",(function(){return r})),n.d(t,"d",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"f",(function(){return c})),n.d(t,"a",(function(){return p})),n.d(t,"e",(function(){return l}));n(11),n(16);function r(e,t){return e.require(t)}function o(){return"[object process]"===Object.prototype.toString.call(void 0!==e?e:0)}var a={};function s(){return o()?i:"undefined"!=typeof window?window:"undefined"!=typeof self?self:a}function c(){var e=s(),t=e.crypto||e.msCrypto;if(void 0!==t&&t.getRandomValues){var n=new Uint16Array(8);t.getRandomValues(n),n[3]=4095&n[3]|16384,n[4]=16383&n[4]|32768;var i=function(e){for(var t=e.toString(16);t.length<4;)t="0"+t;return t};return i(n[0])+i(n[1])+i(n[2])+i(n[3])+i(n[4])+i(n[5])+i(n[6])+i(n[7])}return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}function p(e){var t=s();if(!("console"in t))return e();var n=t.console,i={};["debug","info","warn","error","log","assert"].forEach((function(e){e in t.console&&n[e].__sentry_original__&&(i[e]=n[e],n[e]=n[e].__sentry_original__)}));var r=e();return Object.keys(i).forEach((function(e){n[e]=i[e]})),r}function l(){return(new Date).getTime()/1e3}}).call(this,n(24),n(19))},function(e,t,n){"use strict";var i=":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD",r="["+i+"][:A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*",o=new RegExp("^"+r+"$");t.isExist=function(e){return void 0!==e},t.isEmptyObject=function(e){return 0===Object.keys(e).length},t.merge=function(e,t,n){if(t)for(var i=Object.keys(t),r=i.length,o=0;o<r;o++)e[i[o]]="strict"===n?[t[i[o]]]:t[i[o]]},t.getValue=function(e){return t.isExist(e)?e:""},t.buildOptions=function(e,t,n){var i={};if(!e)return t;for(var r=0;r<n.length;r++)void 0!==e[n[r]]?i[n[r]]=e[n[r]]:i[n[r]]=t[n[r]];return i},t.isName=function(e){var t=o.exec(e);return!(null==t)},t.getAllMatches=function(e,t){for(var n=[],i=t.exec(e);i;){for(var r=[],o=i.length,a=0;a<o;a++)r.push(i[a]);n.push(r),i=t.exec(e)}return n},t.nameRegexp=r},function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty,r="~";function o(){}function a(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function s(e,t,n,i,o){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new a(n,i||e,o),c=r?r+t:t;return e._events[c]?e._events[c].fn?e._events[c]=[e._events[c],s]:e._events[c].push(s):(e._events[c]=s,e._eventsCount++),e}function c(e,t){0==--e._eventsCount?e._events=new o:delete e._events[t]}function p(){this._events=new o,this._eventsCount=0}Object.create&&(o.prototype=Object.create(null),(new o).__proto__||(r=!1)),p.prototype.eventNames=function(){var e,t,n=[];if(0===this._eventsCount)return n;for(t in e=this._events)i.call(e,t)&&n.push(r?t.slice(1):t);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(e)):n},p.prototype.listeners=function(e){var t=r?r+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var i=0,o=n.length,a=new Array(o);i<o;i++)a[i]=n[i].fn;return a},p.prototype.listenerCount=function(e){var t=r?r+e:e,n=this._events[t];return n?n.fn?1:n.length:0},p.prototype.emit=function(e,t,n,i,o,a){var s=r?r+e:e;if(!this._events[s])return!1;var c,p,l=this._events[s],u=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),u){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,t),!0;case 3:return l.fn.call(l.context,t,n),!0;case 4:return l.fn.call(l.context,t,n,i),!0;case 5:return l.fn.call(l.context,t,n,i,o),!0;case 6:return l.fn.call(l.context,t,n,i,o,a),!0}for(p=1,c=new Array(u-1);p<u;p++)c[p-1]=arguments[p];l.fn.apply(l.context,c)}else{var f,d=l.length;for(p=0;p<d;p++)switch(l[p].once&&this.removeListener(e,l[p].fn,void 0,!0),u){case 1:l[p].fn.call(l[p].context);break;case 2:l[p].fn.call(l[p].context,t);break;case 3:l[p].fn.call(l[p].context,t,n);break;case 4:l[p].fn.call(l[p].context,t,n,i);break;default:if(!c)for(f=1,c=new Array(u-1);f<u;f++)c[f-1]=arguments[f];l[p].fn.apply(l[p].context,c)}}return!0},p.prototype.on=function(e,t,n){return s(this,e,t,n,!1)},p.prototype.once=function(e,t,n){return s(this,e,t,n,!0)},p.prototype.removeListener=function(e,t,n,i){var o=r?r+e:e;if(!this._events[o])return this;if(!t)return c(this,o),this;var a=this._events[o];if(a.fn)a.fn!==t||i&&!a.once||n&&a.context!==n||c(this,o);else{for(var s=0,p=[],l=a.length;s<l;s++)(a[s].fn!==t||i&&!a[s].once||n&&a[s].context!==n)&&p.push(a[s]);p.length?this._events[o]=1===p.length?p[0]:p:c(this,o)}return this},p.prototype.removeAllListeners=function(e){var t;return e?(t=r?r+e:e,this._events[t]&&c(this,t)):(this._events=new o,this._eventsCount=0),this},p.prototype.off=p.prototype.removeListener,p.prototype.addListener=p.prototype.on,p.prefixed=r,p.EventEmitter=p,e.exports=p},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"d",(function(){return d})),n.d(t,"c",(function(){return h})),n.d(t,"a",(function(){return v})),n.d(t,"e",(function(){return b.a}));var i=n(4),r=["expires","from","host","if-modified-since","if-unmodified-since","age","authorization","content-length","content-type","etag","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],o=function(e){var t,n,o,a={};return e?(e.split("\\n").forEach((function(e){o=e.indexOf(":"),t=Object(i.i)(e.substr(0,o)).toLowerCase(),n=Object(i.i)(e.substr(o+1)),t&&(a[t]&&r.indexOf(t)>=0||(a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n))})),a):a},a=function(e,t,n,i){void 0===i&&(i=!1);var r=s(t);return e||(e={}),void 0===(e=JSON.parse(JSON.stringify(e)))[t]&&void 0===e[r]?e[r]=n:i&&(delete e[t],e[r]=n),e},s=function(e){var t={"content-md5":"Content-MD5",dnt:"DNT",etag:"ETag","last-event-id":"Last-Event-ID",tcn:"TCN",te:"TE","www-authenticate":"WWW-Authenticate","x-dnsprefetch-control":"X-DNSPrefetch-Control"}[e.toLowerCase()];return t||e.split("-").map((function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})).join("-")},c=n(0),p=n(1),l=n(21),u=n(3),f=n.n(u)()("fs:request:data"),d=function(e){return e=m(e),Object(i.e)(e.data)||Object(i.c)(e.data)||Object(i.g)(e.data)||Object(i.d)(e.data)||Object(i.b)(e.data)||Object(i.a)(e.data)||(Object(i.h)(e.data)?(e.headers=a(e.headers,"content-type","application/x-www-form-urlencoded;charset=utf-8"),e.data=e.data.toString()):Object(i.f)(e.data)&&(e.headers=a(e.headers,"content-type","application/json",!0),e.data=JSON.stringify(e.data))),e},m=function(e){return e.filestackHeaders?(e.headers=a(e.headers,"filestack-source",Object(p.getVersion)()),e.headers=a(e.headers,"filestack-trace-id",Math.floor(Date.now()/1e3)+"-"+Object(p.uniqueId)()),e.headers=a(e.headers,"filestack-trace-span","jssdk-"+Object(p.uniqueId)()),e):e},h=function(e){return Object(c.b)(void 0,void 0,void 0,(function(){var t,n;return Object(c.d)(this,(function(r){if(!e.headers||!e.headers["content-type"])return[2,Promise.resolve(e)];if(t=e.headers["content-type"],/application\\/json/.test(t))try{e.data=JSON.parse(e.data)}catch(t){f("Cannot parse response %O - %O",e.data,e.headers)}else/text\\/(plain|html)/.test(t)?Object(i.c)(e.data)&&(e.data=y(e.data)):/application\\/xml/.test(t)&&(n=e.data,Object(i.c)(e.data)&&(n=y(e.data)),!0===l.validate(n)&&(e.data=l.parse(n,{ignoreAttributes:!0,trimValues:!0})));return[2,Promise.resolve(e)]}))}))};function y(e){for(var t=new Uint16Array(e),n=t.length,i="",r=Math.pow(2,16)-1,o=0;o<n;o+=r)o+r>n&&(r=n-o),i+=String.fromCharCode.apply(null,t.subarray(o,o+r));return i}var v=function(e,t){if(!t)return e;var n=g(t),i=e.indexOf("#");return-1!==i&&(e=e.slice(0,i)),e+(-1===e.indexOf("?")?"?":"&")+n},g=function(e){return Object.keys(e).filter((function(t){return t&&void 0!==e[t]})).map((function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])})).join("&")},b=n(13)},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(18),o=t.ValidationError=function(e,t,n,i,r,o){i&&(this.property=i),e&&(this.message=e),n&&(n.id?this.schema=n.id:this.schema=n),t&&(this.instance=t),this.name=r,this.argument=o,this.stack=this.toString()};o.prototype.toString=function(){return this.property+" "+this.message};var a=t.ValidatorResult=function(e,t,n,i){this.instance=e,this.schema=t,this.propertyPath=i.propertyPath,this.errors=[],this.throwError=n&&n.throwError,this.disableFormat=n&&!0===n.disableFormat};function s(e,t){return t+": "+e.toString()+"\\n"}a.prototype.addError=function(e){var t;if("string"==typeof e)t=new o(e,this.instance,this.schema,this.propertyPath);else{if(!e)throw new Error("Missing error detail");if(!e.message)throw new Error("Missing error message");if(!e.name)throw new Error("Missing validator type");t=new o(e.message,this.instance,this.schema,this.propertyPath,e.name,e.argument)}if(this.throwError)throw t;return this.errors.push(t),t},a.prototype.importErrors=function(e){"string"==typeof e||e&&e.validatorType?this.addError(e):e&&e.errors&&Array.prototype.push.apply(this.errors,e.errors)},a.prototype.toString=function(e){return this.errors.map(s).join("")},Object.defineProperty(a.prototype,"valid",{get:function(){return!this.errors.length}});var c=t.SchemaError=function e(t,n){this.message=t,this.schema=n,Error.call(this,t),Error.captureStackTrace(this,e)};c.prototype=Object.create(Error.prototype,{constructor:{value:c,enumerable:!1},name:{value:"SchemaError",enumerable:!1}});var p=t.SchemaContext=function(e,t,n,i,r){this.schema=e,this.options=t,this.propertyPath=n,this.base=i,this.schemas=r};p.prototype.resolve=function(e){return r.resolve(this.base,e)},p.prototype.makeChild=function(e,t){var n=void 0===t?this.propertyPath:this.propertyPath+u(t),i=r.resolve(this.base,e.id||""),o=new p(e,this.options,n,i,Object.create(this.schemas));return e.id&&!o.schemas[i]&&(o.schemas[i]=e),o};var l=t.FORMAT_REGEXPS={"date-time":/^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,date:/^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,time:/^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,email:/^(?:[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,"ip-address":/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,ipv6:/^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,uri:/^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,color:/^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,hostname:/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,"host-name":/^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,alpha:/^[a-zA-Z]+$/,alphanumeric:/^[a-zA-Z0-9]+$/,"utc-millisec":function(e){return"string"==typeof e&&parseFloat(e)===parseInt(e,10)&&!isNaN(e)},regex:function(e){var t=!0;try{new RegExp(e)}catch(e){t=!1}return t},style:/\\s*(.+?):\\s*([^;]+);?/,phone:/^\\+(?:[0-9] ?){6,14}[0-9]$/};l.regexp=l.regex,l.pattern=l.regex,l.ipv4=l["ip-address"],t.isFormat=function(e,t,n){if("string"==typeof e&&void 0!==l[t]){if(l[t]instanceof RegExp)return l[t].test(e);if("function"==typeof l[t])return l[t](e)}else if(n&&n.customFormats&&"function"==typeof n.customFormats[t])return n.customFormats[t](e);return!0};var u=t.makeSuffix=function(e){return(e=e.toString()).match(/[.\\s\\[\\]]/)||e.match(/^[\\d]/)?e.match(/^\\d+$/)?"["+e+"]":"["+JSON.stringify(e)+"]":"."+e};function f(e,t,n,r){"object"===i(n)?t[r]=h(e[r],n):-1===e.indexOf(n)&&t.push(n)}function d(e,t,n){t[n]=e[n]}function m(e,t,n,r){"object"===i(t[r])&&t[r]&&e[r]?n[r]=h(e[r],t[r]):n[r]=t[r]}function h(e,t){var n=Array.isArray(t),r=n&&[]||{};return n?(e=e||[],r=r.concat(e),t.forEach(f.bind(null,e,r))):(e&&"object"===i(e)&&Object.keys(e).forEach(d.bind(null,e,r)),Object.keys(t).forEach(m.bind(null,e,t,r))),r}function y(e){return"/"+encodeURIComponent(e).replace(/~/g,"%7E")}t.deepCompareStrict=function e(t,n){if(i(t)!==i(n))return!1;if(t instanceof Array)return n instanceof Array&&(t.length===n.length&&t.every((function(i,r){return e(t[r],n[r])})));if("object"===i(t)){if(!t||!n)return t===n;var r=Object.keys(t),o=Object.keys(n);return r.length===o.length&&r.every((function(i){return e(t[i],n[i])}))}return t===n},e.exports.deepMerge=h,t.objectGetPath=function(e,t){for(var n,i=t.split("/").slice(1);"string"==typeof(n=i.shift());){var r=decodeURIComponent(n.replace(/~0/,"~").replace(/~1/g,"/"));if(!(r in e))return;e=e[r]}return e},t.encodePath=function(e){return e.map(y).join("")},t.getDecimalPlaces=function(e){var t=0;if(isNaN(e))return t;"number"!=typeof e&&(e=Number(e));var n=e.toString().split("e");if(2===n.length){if("-"!==n[1][0])return t;t=Number(n[1].slice(1))}var i=n[0].split(".");return 2===i.length&&(t+=i[1].length),t}},function(e,t,n){"use strict";function i(e){return"[object String]"===Object.prototype.toString.call(e)}function r(e){return"[object RegExp]"===Object.prototype.toString.call(e)}function o(e){return Boolean(e&&e.then&&"function"==typeof e.then)}n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return o}))},function(e,t,n){"use strict";var i=n(7),r=n(7).buildOptions,o=n(42),a=1,s=2,c=3,p=4,l="<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)".replace(/NAME/g,i.nameRegexp);!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt),!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);var u={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,ignoreNameSpace:!1,allowBooleanAttributes:!1,parseNodeValue:!0,parseAttributeValue:!1,arrayMode:!1,trimValues:!0,cdataTagName:!1,cdataPositionChar:"\\\\c",tagValueProcessor:function(e,t){return e},attrValueProcessor:function(e,t){return e},stopNodes:[]};t.defaultOptions=u;var f=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","arrayMode","trimValues","cdataTagName","cdataPositionChar","tagValueProcessor","attrValueProcessor","parseTrueNumberOnly","stopNodes"];t.props=f;function d(e,t,n){var i=e[7]||n,r=e[12];return r&&(t.trimValues&&(r=r.trim()),r=y(r=t.tagValueProcessor(r,i),t.parseNodeValue,t.parseTrueNumberOnly)),r}function m(e){return"]]>"===e[4]?p:"/"===e[10]?s:void 0!==e[8]&&"/"===e[8].substr(e[8].length-1)?c:a}function h(e,t){if(t.ignoreNameSpace){var n=e.split(":"),i="/"===e.charAt(0)?"/":"";if("xmlns"===n[0])return"";2===n.length&&(e=i+n[1])}return e}function y(e,t,n){var r;return t&&"string"==typeof e?(""===e.trim()||isNaN(e)?r="true"===e||"false"!==e&&e:(-1!==e.indexOf("0x")?r=Number.parseInt(e,16):-1!==e.indexOf(".")?(r=Number.parseFloat(e),e=e.replace(/0+$/,"")):r=Number.parseInt(e,10),n&&(r=String(r)===e?r:e)),r):i.isExist(e)?e:""}var v=new RegExp("([^\\\\s=]+)\\\\s*(=\\\\s*([\'\\"])(.*?)\\\\3)?","g");function g(e,t){if(!t.ignoreAttributes&&"string"==typeof e){e=e.replace(/\\r?\\n/g," ");for(var n=i.getAllMatches(e,v),r=n.length,o={},a=0;a<r;a++){var s=h(n[a][1],t);s.length&&(void 0!==n[a][4]?(t.trimValues&&(n[a][4]=n[a][4].trim()),n[a][4]=t.attrValueProcessor(n[a][4],s),o[t.attributeNamePrefix+s]=y(n[a][4],t.parseAttributeValue,t.parseTrueNumberOnly)):t.allowBooleanAttributes&&(o[t.attributeNamePrefix+s]=!0))}if(!Object.keys(o).length)return;if(t.attrNodeName){var c={};return c[t.attrNodeName]=o,c}return o}}t.getTraversalObj=function(e,t){t=r(t,u,f),e=e.replace(/\x3c!--[\\s\\S]*?--\x3e/g,"");for(var n=new o("!xml"),a=n,h=new RegExp(l,"g"),y=h.exec(e),v=h.exec(e);y;){var b=m(y);if(b===s)a.parent&&y[12]&&(a.parent.val=i.getValue(a.parent.val)+""+d(y,t,a.parent.tagname)),t.stopNodes.length&&t.stopNodes.includes(a.tagname)&&(a.child=[],null==a.attrsMap&&(a.attrsMap={}),a.val=e.substr(a.startIndex+1,y.index-a.startIndex-1)),a=a.parent;else if(b===p)if(t.cdataTagName){var x=new o(t.cdataTagName,a,y[3]);x.attrsMap=g(y[8],t),a.addChild(x),a.val=i.getValue(a.val)+t.cdataPositionChar,y[12]&&(a.val+=d(y,t))}else a.val=(a.val||"")+(y[3]||"")+d(y,t);else if(b===c){a&&y[12]&&(a.val=i.getValue(a.val)+""+d(y,t));var k=new o(t.ignoreNameSpace?y[7]:y[5],a,"");y[8]&&y[8].length>0&&(y[8]=y[8].substr(0,y[8].length-1)),k.attrsMap=g(y[8],t),a.addChild(k)}else{var w=new o(t.ignoreNameSpace?y[7]:y[5],a,d(y,t));t.stopNodes.length&&t.stopNodes.includes(w.tagname)&&(w.startIndex=y.index+y[1].length),w.attrsMap=g(y[8],t),a.addChild(w),a=w}y=v,v=h.exec(e)}return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(2),r=n(3),o=n.n(r)()("fs:request:shouldRetry"),a=function(e){switch(o("Checking error for retry. Code: %n, type: %s",e.response?e.response.status:"Malformed response",e.code),e.code){case i.b.NETWORK:case i.b.SERVER:case i.b.TIMEOUT:return!0;case i.b.ABORTED:return!1}return!!e.response&&(500<=e.response.status&&e.response.status<=599)}},function(module,exports,__webpack_require__){"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}var toBytes=function(e){return _toConsumableArray(e).map((function(e){return e.charCodeAt(0)}))},xpiZipFilename=toBytes("META-INF/mozilla.rsa"),oxmlContentTypes=toBytes("[Content_Types].xml"),oxmlRels=toBytes("_rels/.rels");function readUInt64LE(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=e[t],i=1,r=0;++r<8;)i*=256,n+=e[t+r]*i;return n}var fileType=function(e){if(!(e instanceof Uint8Array||e instanceof ArrayBuffer||Buffer.isBuffer(e)))throw new TypeError("Expected the `input` argument to be of type `Uint8Array` or `Buffer` or `ArrayBuffer`, got `".concat(_typeof(e),"`"));var t=e instanceof Uint8Array?e:new Uint8Array(e);if(!(t&&t.length>1))return null;var n=function(e,n){n=Object.assign({offset:0},n);for(var i=0;i<e.length;i++)if(n.mask){if(e[i]!==(n.mask[i]&t[i+n.offset]))return!1}else if(e[i]!==t[i+n.offset])return!1;return!0},i=function(e,t){return n(toBytes(e),t)};if(n([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(n([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(n([71,73,70]))return{ext:"gif",mime:"image/gif"};if(n([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(n([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((n([73,73,42,0])||n([77,77,0,42]))&&n([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n([73,73,42,0])||n([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(n([66,77]))return{ext:"bmp",mime:"image/bmp"};if(n([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(n([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(n([80,75,3,4])){if(n([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(n(xpiZipFilename,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(i("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(i("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(i("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};var r=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e.findIndex((function(e,n,i){return n>=t&&80===i[n]&&75===i[n+1]&&3===i[n+2]&&4===i[n+3]}))},o=0,a=!1,s=null;do{var c=o+30;if(a||(a=n(oxmlContentTypes,{offset:c})||n(oxmlRels,{offset:c})),s||(i("word/",{offset:c})?s={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:i("ppt/",{offset:c})?s={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:i("xl/",{offset:c})&&(s={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),a&&s)return s;o=r(t,c)}while(o>=0);if(s)return s}if(n([80,75])&&(3===t[2]||5===t[2]||7===t[2])&&(4===t[3]||6===t[3]||8===t[3]))return{ext:"zip",mime:"application/zip"};if(n([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(n([82,97,114,33,26,7])&&(0===t[6]||1===t[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(n([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(n([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(n([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(n([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(n([51,103,112,53])||n([0,0,0])&&n([102,116,121,112],{offset:4})&&(n([109,112,52,49],{offset:8})||n([109,112,52,50],{offset:8})||n([105,115,111,109],{offset:8})||n([105,115,111,50],{offset:8})||n([109,109,112,52],{offset:8})||n([77,52,86],{offset:8})||n([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(n([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(n([26,69,223,163])){var p=t.subarray(4,4100),l=p.findIndex((function(e,t,n){return 66===n[t]&&130===n[t+1]}));if(-1!==l){var u=l+3,f=function(e){return _toConsumableArray(e).every((function(e,t){return p[u+t]===e.charCodeAt(0)}))};if(f("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(f("webm"))return{ext:"webm",mime:"video/webm"}}}if(n([0,0,0,20,102,116,121,112,113,116,32,32])||n([102,114,101,101],{offset:4})||n([102,116,121,112,113,116,32,32],{offset:4})||n([109,100,97,116],{offset:4})||n([109,111,111,118],{offset:4})||n([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(n([82,73,70,70])){if(n([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(n([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(n([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(n([48,38,178,117,142,102,207,17,166,217])){var d=30;do{var m=readUInt64LE(t,d+16);if(n([145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101],{offset:d})){if(n([64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43],{offset:d+24}))return{ext:"wma",mime:"audio/x-ms-wma"};if(n([192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43],{offset:d+24}))return{ext:"wmv",mime:"video/x-ms-asf"};break}d+=m}while(d+24<=t.length);return{ext:"asf",mime:"application/vnd.ms-asf"}}if(n([0,0,1,186])||n([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(n([102,116,121,112,51,103],{offset:4}))return{ext:"3gp",mime:"video/3gpp"};for(var h=0;h<2&&h<t.length-16;h++){if(n([73,68,51],{offset:h})||n([255,226],{offset:h,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(n([255,228],{offset:h,mask:[255,228]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,248],{offset:h,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,240],{offset:h,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(n([102,116,121,112,77,52,65],{offset:4}))return{ext:"m4a",mime:"audio/mp4"};if(n([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(n([79,103,103,83]))return n([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:n([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:n([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:n([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:n([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(n([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(n([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(n([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(n([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(n([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(n([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((67===t[0]||70===t[0])&&n([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(n([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(n([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(n([119,79,70,70])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(n([119,79,70,50])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(n([76,80],{offset:34})&&(n([0,0,1],{offset:8})||n([1,0,2],{offset:8})||n([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(n([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(n([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(n([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(n([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(n([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(n([37,33]))return{ext:"ps",mime:"application/postscript"};if(n([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(n([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(n([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(n([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(n([77,83,67,70])||n([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(n([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(n([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(n([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(n([31,160])||n([31,157]))return{ext:"Z",mime:"application/x-compress"};if(n([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(n([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(n([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(n([71],{offset:4})&&(n([71],{offset:192})||n([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(n([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(n([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(n([0,0,0,12,106,80,32,32,13,10,135,10])){if(n([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(n([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(n([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(n([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}if(n([70,79,82,77]))return{ext:"aif",mime:"audio/aiff"};if(i("<?xml "))return{ext:"xml",mime:"application/xml"};if(n([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(n([102,116,121,112],{offset:4})){if(n([109,105,102,49],{offset:8}))return{ext:"heic",mime:"image/heif"};if(n([109,115,102,49],{offset:8}))return{ext:"heic",mime:"image/heif-sequence"};if(n([104,101,105,99],{offset:8})||n([104,101,105,120],{offset:8}))return{ext:"heic",mime:"image/heic"};if(n([104,101,118,99],{offset:8})||n([104,101,118,120],{offset:8}))return{ext:"heic",mime:"image/heic-sequence"}}return n([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:n([68,73,67,77],{offset:128})?{ext:"dcm",mime:"application/dicom"}:n([77,80,43])||n([77,80,67,75])?{ext:"mpc",mime:"audio/x-musepack"}:n([66,69,71,73,78,58])?{ext:"ics",mime:"text/calendar"}:n([103,108,84,70,2,0,0,0])?{ext:"glb",mime:"model/gltf-binary"}:n([212,195,178,161])||n([161,178,195,212])?{ext:"pcap",mime:"application/vnd.tcpdump.pcap"}:null};module.exports=fileType,module.exports.default=fileType,Object.defineProperty(fileType,"minimumBytes",{value:4100}),module.exports.stream=function(readableStream){return new Promise((function(resolve,reject){var stream=eval("require")("stream");readableStream.once("readable",(function(){var e=new stream.PassThrough,t=readableStream.read(module.exports.minimumBytes)||readableStream.read();try{e.fileType=fileType(t)}catch(e){reject(e)}readableStream.unshift(t),stream.pipeline?resolve(stream.pipeline(readableStream,e,(function(){}))):resolve(readableStream.pipe(e))}))}))}},function(e,t,n){"use strict";var i=e.exports.Validator=n(31);e.exports.ValidatorResult=n(10).ValidatorResult,e.exports.ValidationError=n(10).ValidationError,e.exports.SchemaError=n(10).SchemaError,e.exports.SchemaScanResult=n(20).SchemaScanResult,e.exports.scan=n(20).scan,e.exports.validate=function(e,t,n){return(new i).validate(e,t,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(11);function i(e,t){var n=e,i=n.length;if(i<=150)return n;t>i&&(t=i);var r=Math.max(t-60,0);r<5&&(r=0);var o=Math.min(r+140,i);return o>i-5&&(o=i),o===i&&(r=Math.max(o-140,0)),n=n.slice(r,o),r>0&&(n="\'{snip} "+n),o<i&&(n+=" {snip}"),n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i,r=n(0),o=n(11);!function(e){e.PENDING="PENDING",e.RESOLVED="RESOLVED",e.REJECTED="REJECTED"}(i||(i={}));var a=function(){function e(e){var t=this;this._state=i.PENDING,this._handlers=[],this._resolve=function(e){t._setResult(i.RESOLVED,e)},this._reject=function(e){t._setResult(i.REJECTED,e)},this._setResult=function(e,n){t._state===i.PENDING&&(Object(o.c)(n)?n.then(t._resolve,t._reject):(t._state=e,t._value=n,t._executeHandlers()))},this._attachHandler=function(e){t._handlers=t._handlers.concat(e),t._executeHandlers()},this._executeHandlers=function(){t._state!==i.PENDING&&(t._state===i.REJECTED?t._handlers.forEach((function(e){e.onrejected&&e.onrejected(t._value)})):t._handlers.forEach((function(e){e.onfulfilled&&e.onfulfilled(t._value)})),t._handlers=[])};try{e(this._resolve,this._reject)}catch(e){this._reject(e)}}return e.prototype.toString=function(){return"[object SyncPromise]"},e.resolve=function(t){return new e((function(e){e(t)}))},e.reject=function(t){return new e((function(e,n){n(t)}))},e.all=function(t){return new e((function(n,i){if(Array.isArray(t))if(0!==t.length){var r=t.length,o=[];t.forEach((function(t,a){e.resolve(t).then((function(e){o[a]=e,0===(r-=1)&&n(o)})).then(null,i)}))}else n([]);else i(new TypeError("Promise.all requires an array as input."))}))},e.prototype.then=function(t,n){var i=this;return new e((function(e,r){i._attachHandler({onfulfilled:function(n){if(t)try{return void e(t(n))}catch(e){return void r(e)}else e(n)},onrejected:function(t){if(n)try{return void e(n(t))}catch(e){return void r(e)}else r(t)}})}))},e.prototype.catch=function(e){return this.then((function(e){return e}),e)},e.prototype.finally=function(t){var n=this;return new e((function(e,i){var r,o;return n.then((function(e){o=!1,r=e,t&&t()}),(function(e){o=!0,r=e,t&&t()})).then((function(){o?i(r):e(r)}))}))},e}(),s=n(6),c=function(){function e(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._user={},this._tags={},this._extra={},this._context={}}return e.prototype.addScopeListener=function(e){this._scopeListeners.push(e)},e.prototype.addEventProcessor=function(e){return this._eventProcessors.push(e),this},e.prototype._notifyScopeListeners=function(){var e=this;this._notifyingListeners||(this._notifyingListeners=!0,setTimeout((function(){e._scopeListeners.forEach((function(t){t(e)})),e._notifyingListeners=!1})))},e.prototype._notifyEventProcessors=function(e,t,n,i){var s=this;return void 0===i&&(i=0),new a((function(a,c){var p=e[i];if(null===t||"function"!=typeof p)a(t);else{var l=p(r.a({},t),n);Object(o.c)(l)?l.then((function(t){return s._notifyEventProcessors(e,t,n,i+1).then(a)})).then(null,c):s._notifyEventProcessors(e,l,n,i+1).then(a).then(null,c)}}))},e.prototype.setUser=function(e){return this._user=e||{},this._notifyScopeListeners(),this},e.prototype.setTags=function(e){return this._tags=r.a({},this._tags,e),this._notifyScopeListeners(),this},e.prototype.setTag=function(e,t){var n;return this._tags=r.a({},this._tags,((n={})[e]=t,n)),this._notifyScopeListeners(),this},e.prototype.setExtras=function(e){return this._extra=r.a({},this._extra,e),this._notifyScopeListeners(),this},e.prototype.setExtra=function(e,t){var n;return this._extra=r.a({},this._extra,((n={})[e]=t,n)),this._notifyScopeListeners(),this},e.prototype.setFingerprint=function(e){return this._fingerprint=e,this._notifyScopeListeners(),this},e.prototype.setLevel=function(e){return this._level=e,this._notifyScopeListeners(),this},e.prototype.setTransaction=function(e){return this._transaction=e,this._span&&(this._span.transaction=e),this._notifyScopeListeners(),this},e.prototype.setContext=function(e,t){var n;return this._context=r.a({},this._context,((n={})[e]=t,n)),this._notifyScopeListeners(),this},e.prototype.setSpan=function(e){return this._span=e,this._notifyScopeListeners(),this},e.prototype.getSpan=function(){return this._span},e.clone=function(t){var n=new e;return t&&(n._breadcrumbs=r.e(t._breadcrumbs),n._tags=r.a({},t._tags),n._extra=r.a({},t._extra),n._context=r.a({},t._context),n._user=t._user,n._level=t._level,n._span=t._span,n._transaction=t._transaction,n._fingerprint=t._fingerprint,n._eventProcessors=r.e(t._eventProcessors)),n},e.prototype.clear=function(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._context={},this._level=void 0,this._transaction=void 0,this._fingerprint=void 0,this._span=void 0,this._notifyScopeListeners(),this},e.prototype.addBreadcrumb=function(e,t){var n=r.a({timestamp:Object(s.e)()},e);return this._breadcrumbs=void 0!==t&&t>=0?r.e(this._breadcrumbs,[n]).slice(-t):r.e(this._breadcrumbs,[n]),this._notifyScopeListeners(),this},e.prototype.clearBreadcrumbs=function(){return this._breadcrumbs=[],this._notifyScopeListeners(),this},e.prototype._applyFingerprint=function(e){e.fingerprint=e.fingerprint?Array.isArray(e.fingerprint)?e.fingerprint:[e.fingerprint]:[],this._fingerprint&&(e.fingerprint=e.fingerprint.concat(this._fingerprint)),e.fingerprint&&!e.fingerprint.length&&delete e.fingerprint},e.prototype.applyToEvent=function(e,t){return this._extra&&Object.keys(this._extra).length&&(e.extra=r.a({},this._extra,e.extra)),this._tags&&Object.keys(this._tags).length&&(e.tags=r.a({},this._tags,e.tags)),this._user&&Object.keys(this._user).length&&(e.user=r.a({},this._user,e.user)),this._context&&Object.keys(this._context).length&&(e.contexts=r.a({},this._context,e.contexts)),this._level&&(e.level=this._level),this._transaction&&(e.transaction=this._transaction),this._applyFingerprint(e),e.breadcrumbs=r.e(e.breadcrumbs||[],this._breadcrumbs),e.breadcrumbs=e.breadcrumbs.length>0?e.breadcrumbs:void 0,this._notifyEventProcessors(r.e(p(),this._eventProcessors),e,t)},e}();function p(){var e=Object(s.c)();return e.__SENTRY__=e.__SENTRY__||{},e.__SENTRY__.globalEventProcessors=e.__SENTRY__.globalEventProcessors||[],e.__SENTRY__.globalEventProcessors}},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(32),o=n(33);function a(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.parse=x,t.resolve=function(e,t){return x(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?x(e,!1,!0).resolveObject(t):t},t.format=function(e){o.isString(e)&&(e=x(e));return e instanceof a?e.format():a.prototype.format.call(e)},t.Url=a;var s=/^([a-z0-9.+-]+:)/i,c=/:[0-9]*$/,p=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,l=["{","}","|","\\\\","^","`"].concat(["<",">",\'"\',"`"," ","\\r","\\n","\\t"]),u=["\'"].concat(l),f=["%","/","?",";","#"].concat(u),d=["/","?","#"],m=/^[+a-z0-9A-Z_-]{0,63}$/,h=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,y={javascript:!0,"javascript:":!0},v={javascript:!0,"javascript:":!0},g={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},b=n(34);function x(e,t,n){if(e&&o.isObject(e)&&e instanceof a)return e;var i=new a;return i.parse(e,t,n),i}a.prototype.parse=function(e,t,n){if(!o.isString(e))throw new TypeError("Parameter \'url\' must be a string, not "+i(e));var a=e.indexOf("?"),c=-1!==a&&a<e.indexOf("#")?"?":"#",l=e.split(c);l[0]=l[0].replace(/\\\\/g,"/");var x=e=l.join(c);if(x=x.trim(),!n&&1===e.split("#").length){var k=p.exec(x);if(k)return this.path=x,this.href=x,this.pathname=k[1],k[2]?(this.search=k[2],this.query=t?b.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var w=s.exec(x);if(w){var _=(w=w[0]).toLowerCase();this.protocol=_,x=x.substr(w.length)}if(n||w||x.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var j="//"===x.substr(0,2);!j||w&&v[w]||(x=x.substr(2),this.slashes=!0)}if(!v[w]&&(j||w&&!g[w])){for(var O,S,E=-1,C=0;C<d.length;C++){-1!==(T=x.indexOf(d[C]))&&(-1===E||T<E)&&(E=T)}-1!==(S=-1===E?x.lastIndexOf("@"):x.lastIndexOf("@",E))&&(O=x.slice(0,S),x=x.slice(S+1),this.auth=decodeURIComponent(O)),E=-1;for(C=0;C<f.length;C++){var T;-1!==(T=x.indexOf(f[C]))&&(-1===E||T<E)&&(E=T)}-1===E&&(E=x.length),this.host=x.slice(0,E),x=x.slice(E),this.parseHost(),this.hostname=this.hostname||"";var A="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!A)for(var P=this.hostname.split(/\\./),F=(C=0,P.length);C<F;C++){var I=P[C];if(I&&!I.match(m)){for(var z="",N=0,M=I.length;N<M;N++)I.charCodeAt(N)>127?z+="x":z+=I[N];if(!z.match(m)){var R=P.slice(0,C),q=P.slice(C+1),$=I.match(h);$&&(R.push($[1]),q.unshift($[2])),q.length&&(x="/"+q.join(".")+x),this.hostname=R.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),A||(this.hostname=r.toASCII(this.hostname));var U=this.port?":"+this.port:"",D=this.hostname||"";this.host=D+U,this.href+=this.host,A&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==x[0]&&(x="/"+x))}if(!y[_])for(C=0,F=u.length;C<F;C++){var L=u[C];if(-1!==x.indexOf(L)){var B=encodeURIComponent(L);B===L&&(B=escape(L)),x=x.split(L).join(B)}}var V=x.indexOf("#");-1!==V&&(this.hash=x.substr(V),x=x.slice(0,V));var H=x.indexOf("?");if(-1!==H?(this.search=x.substr(H),this.query=x.substr(H+1),t&&(this.query=b.parse(this.query)),x=x.slice(0,H)):t&&(this.search="",this.query={}),x&&(this.pathname=x),g[_]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){U=this.pathname||"";var Z=this.search||"";this.path=U+Z}return this.href=this.format(),this},a.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",i=this.hash||"",r=!1,a="";this.host?r=e+this.host:this.hostname&&(r=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(r+=":"+this.port)),this.query&&o.isObject(this.query)&&Object.keys(this.query).length&&(a=b.stringify(this.query));var s=this.search||a&&"?"+a||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||g[t])&&!1!==r?(r="//"+(r||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):r||(r=""),i&&"#"!==i.charAt(0)&&(i="#"+i),s&&"?"!==s.charAt(0)&&(s="?"+s),t+r+(n=n.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(s=s.replace("#","%23"))+i},a.prototype.resolve=function(e){return this.resolveObject(x(e,!1,!0)).format()},a.prototype.resolveObject=function(e){if(o.isString(e)){var t=new a;t.parse(e,!1,!0),e=t}for(var n=new a,i=Object.keys(this),r=0;r<i.length;r++){var s=i[r];n[s]=this[s]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var c=Object.keys(e),p=0;p<c.length;p++){var l=c[p];"protocol"!==l&&(n[l]=e[l])}return g[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!g[e.protocol]){for(var u=Object.keys(e),f=0;f<u.length;f++){var d=u[f];n[d]=e[d]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||v[e.protocol])n.pathname=e.pathname;else{for(var m=(e.pathname||"").split("/");m.length&&!(e.host=m.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==m[0]&&m.unshift(""),m.length<2&&m.unshift(""),n.pathname=m.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var h=n.pathname||"",y=n.search||"";n.path=h+y}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var b=n.pathname&&"/"===n.pathname.charAt(0),x=e.host||e.pathname&&"/"===e.pathname.charAt(0),k=x||b||n.host&&e.pathname,w=k,_=n.pathname&&n.pathname.split("/")||[],j=(m=e.pathname&&e.pathname.split("/")||[],n.protocol&&!g[n.protocol]);if(j&&(n.hostname="",n.port=null,n.host&&(""===_[0]?_[0]=n.host:_.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===m[0]?m[0]=e.host:m.unshift(e.host)),e.host=null),k=k&&(""===m[0]||""===_[0])),x)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,_=m;else if(m.length)_||(_=[]),_.pop(),_=_.concat(m),n.search=e.search,n.query=e.query;else if(!o.isNullOrUndefined(e.search)){if(j)n.hostname=n.host=_.shift(),(T=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=T.shift(),n.host=n.hostname=T.shift());return n.search=e.search,n.query=e.query,o.isNull(n.pathname)&&o.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!_.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var O=_.slice(-1)[0],S=(n.host||e.host||_.length>1)&&("."===O||".."===O)||""===O,E=0,C=_.length;C>=0;C--)"."===(O=_[C])?_.splice(C,1):".."===O?(_.splice(C,1),E++):E&&(_.splice(C,1),E--);if(!k&&!w)for(;E--;E)_.unshift("..");!k||""===_[0]||_[0]&&"/"===_[0].charAt(0)||_.unshift(""),S&&"/"!==_.join("/").substr(-1)&&_.push("");var T,A=""===_[0]||_[0]&&"/"===_[0].charAt(0);j&&(n.hostname=n.host=A?"":_.length?_.shift():"",(T=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=T.shift(),n.host=n.hostname=T.shift()));return(k=k||n.host&&_.length)&&!A&&_.unshift(""),_.length?n.pathname=_.join("/"):(n.pathname=null,n.path=null),o.isNull(n.pathname)&&o.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},a.prototype.parseHost=function(){var e=this.host,t=c.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(e){"object"===("undefined"==typeof window?"undefined":n(window))&&(i=window)}e.exports=i},function(e,t,n){function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(18),o=n(10);function a(e,t){this.id=e,this.ref=t}e.exports.SchemaScanResult=a,e.exports.scan=function(e,t){function n(e,t){if(t&&"object"==i(t))if(t.$ref){var a=r.resolve(e,t.$ref);l[a]=l[a]?l[a]+1:0}else{var u=t.id?r.resolve(e,t.id):e;if(u){if(u.indexOf("#")<0&&(u+="#"),p[u]){if(!o.deepCompareStrict(p[u],t))throw new Error("Schema <"+t+"> already exists with different definition");return p[u]}p[u]=t,"#"==u[u.length-1]&&(p[u.substring(0,u.length-1)]=t)}s(u+"/items",t.items instanceof Array?t.items:[t.items]),s(u+"/extends",t.extends instanceof Array?t.extends:[t.extends]),n(u+"/additionalItems",t.additionalItems),c(u+"/properties",t.properties),n(u+"/additionalProperties",t.additionalProperties),c(u+"/definitions",t.definitions),c(u+"/patternProperties",t.patternProperties),c(u+"/dependencies",t.dependencies),s(u+"/disallow",t.disallow),s(u+"/allOf",t.allOf),s(u+"/anyOf",t.anyOf),s(u+"/oneOf",t.oneOf),n(u+"/not",t.not)}}function s(e,t){if(t instanceof Array)for(var i=0;i<t.length;i++)n(e+"/"+i,t[i])}function c(e,t){if(t&&"object"==i(t))for(var r in t)n(e+"/"+r,t[r])}var p={},l={};return n(e,t),new a(p,l)}},function(e,t,n){"use strict";var i=n(41),r=n(12),o=n(12),a=n(7).buildOptions,s=n(43);t.parse=function(e,t,n){if(n){!0===n&&(n={});var c=s.validate(e,n);if(!0!==c)throw Error(c.err.msg)}return t=a(t,o.defaultOptions,o.props),i.convertToJson(r.getTraversalObj(e,t),t)},t.convertTonimn=n(44).convert2nimn,t.getTraversalObj=r.getTraversalObj,t.convertToJson=i.convertToJson,t.convertToJsonString=n(45).convertToJsonString,t.validate=s.validate,t.j2xParser=n(46),t.parseToNimn=function(e,n,i){return t.convertTonimn(t.getTraversalObj(e,i),n,i)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t){var n,i,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{i="function"==typeof clearTimeout?clearTimeout:a}catch(e){i=a}}();var c,p=[],l=!1,u=-1;function f(){l&&c&&(l=!1,c.length?p=c.concat(p):u=-1,p.length&&d())}function d(){if(!l){var e=s(f);l=!0;for(var t=p.length;t;){for(c=p,p=[];++u<t;)c&&c[u].run();u=-1,t=p.length}c=null,l=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===a||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];p.push(new m(e,t)),1!==p.length||l||s(d)},m.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,n){"use strict";e.exports=function(e){if(!e)return!1;for(var t=0,n=e.length;t<n;)if(e[t]<=127)t++;else{if(e[t]>=194&&e[t]<=223){if(e[t+1]>>6==2){t+=2;continue}return!1}if((224===e[t]&&e[t+1]>=160&&e[t+1]<=191||237===e[t]&&e[t+1]>=128&&e[t+1]<=159)&&e[t+2]>>6==2)t+=3;else if((e[t]>=225&&e[t]<=236||e[t]>=238&&e[t]<=239)&&e[t+1]>>6==2&&e[t+2]>>6==2)t+=3;else{if(!(240===e[t]&&e[t+1]>=144&&e[t+1]<=191||e[t]>=241&&e[t]<=243&&e[t+1]>>6==2||244===e[t]&&e[t+1]>=128&&e[t+1]<=143)||e[t+2]>>6!=2||e[t+3]>>6!=2)return!1;t+=4}}return!0}},function(e,t,n){var i,r,o;function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o=function(e){"use strict";var t=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function n(e,t){var n=e[0],i=e[1],r=e[2],o=e[3];i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&r|~i&o)+t[0]-680876936|0)<<7|n>>>25)+i|0)&i|~n&r)+t[1]-389564586|0)<<12|o>>>20)+n|0)&n|~o&i)+t[2]+606105819|0)<<17|r>>>15)+o|0)&o|~r&n)+t[3]-1044525330|0)<<22|i>>>10)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&r|~i&o)+t[4]-176418897|0)<<7|n>>>25)+i|0)&i|~n&r)+t[5]+1200080426|0)<<12|o>>>20)+n|0)&n|~o&i)+t[6]-1473231341|0)<<17|r>>>15)+o|0)&o|~r&n)+t[7]-45705983|0)<<22|i>>>10)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&r|~i&o)+t[8]+1770035416|0)<<7|n>>>25)+i|0)&i|~n&r)+t[9]-1958414417|0)<<12|o>>>20)+n|0)&n|~o&i)+t[10]-42063|0)<<17|r>>>15)+o|0)&o|~r&n)+t[11]-1990404162|0)<<22|i>>>10)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&r|~i&o)+t[12]+1804603682|0)<<7|n>>>25)+i|0)&i|~n&r)+t[13]-40341101|0)<<12|o>>>20)+n|0)&n|~o&i)+t[14]-1502002290|0)<<17|r>>>15)+o|0)&o|~r&n)+t[15]+1236535329|0)<<22|i>>>10)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&o|r&~o)+t[1]-165796510|0)<<5|n>>>27)+i|0)&r|i&~r)+t[6]-1069501632|0)<<9|o>>>23)+n|0)&i|n&~i)+t[11]+643717713|0)<<14|r>>>18)+o|0)&n|o&~n)+t[0]-373897302|0)<<20|i>>>12)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&o|r&~o)+t[5]-701558691|0)<<5|n>>>27)+i|0)&r|i&~r)+t[10]+38016083|0)<<9|o>>>23)+n|0)&i|n&~i)+t[15]-660478335|0)<<14|r>>>18)+o|0)&n|o&~n)+t[4]-405537848|0)<<20|i>>>12)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&o|r&~o)+t[9]+568446438|0)<<5|n>>>27)+i|0)&r|i&~r)+t[14]-1019803690|0)<<9|o>>>23)+n|0)&i|n&~i)+t[3]-187363961|0)<<14|r>>>18)+o|0)&n|o&~n)+t[8]+1163531501|0)<<20|i>>>12)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i&o|r&~o)+t[13]-1444681467|0)<<5|n>>>27)+i|0)&r|i&~r)+t[2]-51403784|0)<<9|o>>>23)+n|0)&i|n&~i)+t[7]+1735328473|0)<<14|r>>>18)+o|0)&n|o&~n)+t[12]-1926607734|0)<<20|i>>>12)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i^r^o)+t[5]-378558|0)<<4|n>>>28)+i|0)^i^r)+t[8]-2022574463|0)<<11|o>>>21)+n|0)^n^i)+t[11]+1839030562|0)<<16|r>>>16)+o|0)^o^n)+t[14]-35309556|0)<<23|i>>>9)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i^r^o)+t[1]-1530992060|0)<<4|n>>>28)+i|0)^i^r)+t[4]+1272893353|0)<<11|o>>>21)+n|0)^n^i)+t[7]-155497632|0)<<16|r>>>16)+o|0)^o^n)+t[10]-1094730640|0)<<23|i>>>9)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i^r^o)+t[13]+681279174|0)<<4|n>>>28)+i|0)^i^r)+t[0]-358537222|0)<<11|o>>>21)+n|0)^n^i)+t[3]-722521979|0)<<16|r>>>16)+o|0)^o^n)+t[6]+76029189|0)<<23|i>>>9)+r|0,i=((i+=((r=((r+=((o=((o+=((n=((n+=(i^r^o)+t[9]-640364487|0)<<4|n>>>28)+i|0)^i^r)+t[12]-421815835|0)<<11|o>>>21)+n|0)^n^i)+t[15]+530742520|0)<<16|r>>>16)+o|0)^o^n)+t[2]-995338651|0)<<23|i>>>9)+r|0,i=((i+=((o=((o+=(i^((n=((n+=(r^(i|~o))+t[0]-198630844|0)<<6|n>>>26)+i|0)|~r))+t[7]+1126891415|0)<<10|o>>>22)+n|0)^((r=((r+=(n^(o|~i))+t[14]-1416354905|0)<<15|r>>>17)+o|0)|~n))+t[5]-57434055|0)<<21|i>>>11)+r|0,i=((i+=((o=((o+=(i^((n=((n+=(r^(i|~o))+t[12]+1700485571|0)<<6|n>>>26)+i|0)|~r))+t[3]-1894986606|0)<<10|o>>>22)+n|0)^((r=((r+=(n^(o|~i))+t[10]-1051523|0)<<15|r>>>17)+o|0)|~n))+t[1]-2054922799|0)<<21|i>>>11)+r|0,i=((i+=((o=((o+=(i^((n=((n+=(r^(i|~o))+t[8]+1873313359|0)<<6|n>>>26)+i|0)|~r))+t[15]-30611744|0)<<10|o>>>22)+n|0)^((r=((r+=(n^(o|~i))+t[6]-1560198380|0)<<15|r>>>17)+o|0)|~n))+t[13]+1309151649|0)<<21|i>>>11)+r|0,i=((i+=((o=((o+=(i^((n=((n+=(r^(i|~o))+t[4]-145523070|0)<<6|n>>>26)+i|0)|~r))+t[11]-1120210379|0)<<10|o>>>22)+n|0)^((r=((r+=(n^(o|~i))+t[2]+718787259|0)<<15|r>>>17)+o|0)|~n))+t[9]-343485551|0)<<21|i>>>11)+r|0,e[0]=n+e[0]|0,e[1]=i+e[1]|0,e[2]=r+e[2]|0,e[3]=o+e[3]|0}function i(e){var t,n=[];for(t=0;t<64;t+=4)n[t>>2]=e.charCodeAt(t)+(e.charCodeAt(t+1)<<8)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+3)<<24);return n}function r(e){var t,n=[];for(t=0;t<64;t+=4)n[t>>2]=e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24);return n}function o(e){var t,r,o,a,s,c,p=e.length,l=[1732584193,-271733879,-1732584194,271733878];for(t=64;t<=p;t+=64)n(l,i(e.substring(t-64,t)));for(r=(e=e.substring(t-64)).length,o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t=0;t<r;t+=1)o[t>>2]|=e.charCodeAt(t)<<(t%4<<3);if(o[t>>2]|=128<<(t%4<<3),t>55)for(n(l,o),t=0;t<16;t+=1)o[t]=0;return a=(a=8*p).toString(16).match(/(.*?)(.{0,8})$/),s=parseInt(a[2],16),c=parseInt(a[1],16)||0,o[14]=s,o[15]=c,n(l,o),l}function a(e){var n,i="";for(n=0;n<4;n+=1)i+=t[e>>8*n+4&15]+t[e>>8*n&15];return i}function s(e){var t;for(t=0;t<e.length;t+=1)e[t]=a(e[t]);return e.join("")}function c(e){return/[\\u0080-\\uFFFF]/.test(e)&&(e=unescape(encodeURIComponent(e))),e}function p(e){var t,n=[],i=e.length;for(t=0;t<i-1;t+=2)n.push(parseInt(e.substr(t,2),16));return String.fromCharCode.apply(String,n)}function l(){this.reset()}return s(o("hello")),"undefined"==typeof ArrayBuffer||ArrayBuffer.prototype.slice||function(){function t(e,t){return(e=0|e||0)<0?Math.max(e+t,0):Math.min(e,t)}ArrayBuffer.prototype.slice=function(n,i){var r,o,a,s,c=this.byteLength,p=t(n,c),l=c;return i!==e&&(l=t(i,c)),p>l?new ArrayBuffer(0):(r=l-p,o=new ArrayBuffer(r),a=new Uint8Array(o),s=new Uint8Array(this,p,r),a.set(s),o)}}(),l.prototype.append=function(e){return this.appendBinary(c(e)),this},l.prototype.appendBinary=function(e){this._buff+=e,this._length+=e.length;var t,r=this._buff.length;for(t=64;t<=r;t+=64)n(this._hash,i(this._buff.substring(t-64,t)));return this._buff=this._buff.substring(t-64),this},l.prototype.end=function(e){var t,n,i=this._buff,r=i.length,o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(t=0;t<r;t+=1)o[t>>2]|=i.charCodeAt(t)<<(t%4<<3);return this._finish(o,r),n=s(this._hash),e&&(n=p(n)),this.reset(),n},l.prototype.reset=function(){return this._buff="",this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},l.prototype.getState=function(){return{buff:this._buff,length:this._length,hash:this._hash}},l.prototype.setState=function(e){return this._buff=e.buff,this._length=e.length,this._hash=e.hash,this},l.prototype.destroy=function(){delete this._hash,delete this._buff,delete this._length},l.prototype._finish=function(e,t){var i,r,o,a=t;if(e[a>>2]|=128<<(a%4<<3),a>55)for(n(this._hash,e),a=0;a<16;a+=1)e[a]=0;i=(i=8*this._length).toString(16).match(/(.*?)(.{0,8})$/),r=parseInt(i[2],16),o=parseInt(i[1],16)||0,e[14]=r,e[15]=o,n(this._hash,e)},l.hash=function(e,t){return l.hashBinary(c(e),t)},l.hashBinary=function(e,t){var n=s(o(e));return t?p(n):n},l.ArrayBuffer=function(){this.reset()},l.ArrayBuffer.prototype.append=function(e){var t,i,o,a,s,c=(i=this._buff.buffer,o=e,a=!0,(s=new Uint8Array(i.byteLength+o.byteLength)).set(new Uint8Array(i)),s.set(new Uint8Array(o),i.byteLength),a?s:s.buffer),p=c.length;for(this._length+=e.byteLength,t=64;t<=p;t+=64)n(this._hash,r(c.subarray(t-64,t)));return this._buff=t-64<p?new Uint8Array(c.buffer.slice(t-64)):new Uint8Array(0),this},l.ArrayBuffer.prototype.end=function(e){var t,n,i=this._buff,r=i.length,o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(t=0;t<r;t+=1)o[t>>2]|=i[t]<<(t%4<<3);return this._finish(o,r),n=s(this._hash),e&&(n=p(n)),this.reset(),n},l.ArrayBuffer.prototype.reset=function(){return this._buff=new Uint8Array(0),this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},l.ArrayBuffer.prototype.getState=function(){var e,t=l.prototype.getState.call(this);return t.buff=(e=t.buff,String.fromCharCode.apply(null,new Uint8Array(e))),t},l.ArrayBuffer.prototype.setState=function(e){return e.buff=function(e,t){var n,i=e.length,r=new ArrayBuffer(i),o=new Uint8Array(r);for(n=0;n<i;n+=1)o[n]=e.charCodeAt(n);return t?o:r}(e.buff,!0),l.prototype.setState.call(this,e)},l.ArrayBuffer.prototype.destroy=l.prototype.destroy,l.ArrayBuffer.prototype._finish=l.prototype._finish,l.ArrayBuffer.hash=function(e,t){var i=s(function(e){var t,i,o,a,s,c,p=e.length,l=[1732584193,-271733879,-1732584194,271733878];for(t=64;t<=p;t+=64)n(l,r(e.subarray(t-64,t)));for(i=(e=t-64<p?e.subarray(t-64):new Uint8Array(0)).length,o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t=0;t<i;t+=1)o[t>>2]|=e[t]<<(t%4<<3);if(o[t>>2]|=128<<(t%4<<3),t>55)for(n(l,o),t=0;t<16;t+=1)o[t]=0;return a=(a=8*p).toString(16).match(/(.*?)(.{0,8})$/),s=parseInt(a[2],16),c=parseInt(a[1],16)||0,o[14]=s,o[15]=c,n(l,o),l}(new Uint8Array(e)));return t?p(i):i},l},"object"===a(t)?e.exports=o():void 0===(r="function"==typeof(i=o)?i.call(t,n,t,e):i)||(e.exports=r)},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function p(e,t,n){return t&&c(e.prototype,t),n&&c(e,n),e}var l=n(47);var u=function(){function e(){s(this,e),this._queue=[]}return p(e,[{key:"enqueue",value:function(e,t){var n={priority:(t=Object.assign({priority:0},t)).priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority)this._queue.push(n);else{var i=function(e,t,n){for(var i=0,r=e.length;r>0;){var o=r/2|0,a=i+o;n(e[a],t)<=0?(i=++a,r-=o+1):r=o}return i}(this._queue,n,(function(e,t){return t.priority-e.priority}));this._queue.splice(i,0,n)}}},{key:"dequeue",value:function(){return this._queue.shift().run}},{key:"size",get:function(){return this._queue.length}}]),e}(),f=function(e){function t(e){var n;if(s(this,t),n=r(this,o(t).call(this)),!("number"==typeof(e=Object.assign({carryoverConcurrencyCount:!1,intervalCap:1/0,interval:0,concurrency:1/0,autoStart:!0,queueClass:u},e)).concurrency&&e.concurrency>=1))throw new TypeError("Expected `concurrency` to be a number from 1 and up, got `".concat(e.concurrency,"` (").concat(i(e.concurrency),")"));if(!("number"==typeof e.intervalCap&&e.intervalCap>=1))throw new TypeError("Expected `intervalCap` to be a number from 1 and up, got `".concat(e.intervalCap,"` (").concat(i(e.intervalCap),")"));if(!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError("Expected `interval` to be a finite number >= 0, got `".concat(e.interval,"` (").concat(i(e.interval),")"));return n._carryoverConcurrencyCount=e.carryoverConcurrencyCount,n._isIntervalIgnored=e.intervalCap===1/0||0===e.interval,n._intervalCount=0,n._intervalCap=e.intervalCap,n._interval=e.interval,n._intervalId=null,n._intervalEnd=0,n._timeoutId=null,n.queue=new e.queueClass,n._queueClass=e.queueClass,n._pendingCount=0,n._concurrency=e.concurrency,n._isPaused=!1===e.autoStart,n._resolveEmpty=function(){},n._resolveIdle=function(){},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(t,e),p(t,[{key:"_next",value:function(){this._pendingCount--,this._tryToStartAnother()}},{key:"_resolvePromises",value:function(){this._resolveEmpty(),this._resolveEmpty=function(){},0===this._pendingCount&&(this._resolveIdle(),this._resolveIdle=function(){})}},{key:"_onResumeInterval",value:function(){this._onInterval(),this._initializeIntervalIfNeeded(),this._timeoutId=null}},{key:"_intervalPaused",value:function(){var e=this,t=Date.now();if(null===this._intervalId){var n=this._intervalEnd-t;if(!(n<0))return null===this._timeoutId&&(this._timeoutId=setTimeout((function(){return e._onResumeInterval()}),n)),!0;this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}return!1}},{key:"_tryToStartAnother",value:function(){if(0===this.queue.size)return clearInterval(this._intervalId),this._intervalId=null,this._resolvePromises(),!1;if(!this._isPaused){var e=!this._intervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother)return this.emit("active"),this.queue.dequeue()(),e&&this._initializeIntervalIfNeeded(),!0}return!1}},{key:"_initializeIntervalIfNeeded",value:function(){var e=this;this._isIntervalIgnored||null!==this._intervalId||(this._intervalId=setInterval((function(){return e._onInterval()}),this._interval),this._intervalEnd=Date.now()+this._interval)}},{key:"_onInterval",value:function(){for(0===this._intervalCount&&0===this._pendingCount&&(clearInterval(this._intervalId),this._intervalId=null),this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._tryToStartAnother(););}},{key:"add",value:function(e,t){var n=this;return new Promise((function(i,r){n.queue.enqueue((function(){n._pendingCount++,n._intervalCount++;try{Promise.resolve(e()).then((function(e){i(e),n._next()}),(function(e){r(e),n._next()}))}catch(e){r(e),n._next()}}),t),n._tryToStartAnother()}))}},{key:"addAll",value:function(e,t){var n=this;return Promise.all(e.map((function(e){return n.add(e,t)})))}},{key:"start",value:function(){if(this._isPaused)for(this._isPaused=!1;this._tryToStartAnother(););}},{key:"pause",value:function(){this._isPaused=!0}},{key:"clear",value:function(){this.queue=new this._queueClass}},{key:"onEmpty",value:function(){var e=this;return 0===this.queue.size?Promise.resolve():new Promise((function(t){var n=e._resolveEmpty;e._resolveEmpty=function(){n(),t()}}))}},{key:"onIdle",value:function(){var e=this;return 0===this._pendingCount&&0===this.queue.size?Promise.resolve():new Promise((function(t){var n=e._resolveIdle;e._resolveIdle=function(){n(),t()}}))}},{key:"_doesIntervalAllowAnother",get:function(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}},{key:"_doesConcurrentAllowAnother",get:function(){return this._pendingCount<this._concurrency}},{key:"size",get:function(){return this.queue.size}},{key:"pending",get:function(){return this._pendingCount}},{key:"isPaused",get:function(){return this._isPaused}}]),t}(l);e.exports=f,e.exports.default=f},function(e,t,n){(function(e,n){function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r="[object Arguments]",o="[object Function]",a="[object GeneratorFunction]",s="[object Map]",c="[object Set]",p=/\\w*$/,l=/^\\[object .+?Constructor\\]$/,u=/^(?:0|[1-9]\\d*)$/,f={};f[r]=f["[object Array]"]=f["[object ArrayBuffer]"]=f["[object DataView]"]=f["[object Boolean]"]=f["[object Date]"]=f["[object Float32Array]"]=f["[object Float64Array]"]=f["[object Int8Array]"]=f["[object Int16Array]"]=f["[object Int32Array]"]=f[s]=f["[object Number]"]=f["[object Object]"]=f["[object RegExp]"]=f[c]=f["[object String]"]=f["[object Symbol]"]=f["[object Uint8Array]"]=f["[object Uint8ClampedArray]"]=f["[object Uint16Array]"]=f["[object Uint32Array]"]=!0,f["[object Error]"]=f[o]=f["[object WeakMap]"]=!1;var d="object"==(void 0===e?"undefined":i(e))&&e&&e.Object===Object&&e,m="object"==("undefined"==typeof self?"undefined":i(self))&&self&&self.Object===Object&&self,h=d||m||Function("return this")(),y="object"==i(t)&&t&&!t.nodeType&&t,v=y&&"object"==i(n)&&n&&!n.nodeType&&n,g=v&&v.exports===y;function b(e,t){return e.set(t[0],t[1]),e}function x(e,t){return e.add(t),e}function k(e,t,n,i){var r=-1,o=e?e.length:0;for(i&&o&&(n=e[++r]);++r<o;)n=t(n,e[r],r,e);return n}function w(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function _(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}function j(e,t){return function(n){return e(t(n))}}function O(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}var S,E=Array.prototype,C=Function.prototype,T=Object.prototype,A=h["__core-js_shared__"],P=(S=/[^.]+$/.exec(A&&A.keys&&A.keys.IE_PROTO||""))?"Symbol(src)_1."+S:"",F=C.toString,I=T.hasOwnProperty,z=T.toString,N=RegExp("^"+F.call(I).replace(/[\\\\^$.*+?()[\\]{}|]/g,"\\\\$&").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,"$1.*?")+"$"),M=g?h.Buffer:void 0,R=h.Symbol,q=h.Uint8Array,$=j(Object.getPrototypeOf,Object),U=Object.create,D=T.propertyIsEnumerable,L=E.splice,B=Object.getOwnPropertySymbols,V=M?M.isBuffer:void 0,H=j(Object.keys,Object),Z=ve(h,"DataView"),J=ve(h,"Map"),W=ve(h,"Promise"),Q=ve(h,"Set"),Y=ve(h,"WeakMap"),G=ve(Object,"create"),K=we(Z),X=we(J),ee=we(W),te=we(Q),ne=we(Y),ie=R?R.prototype:void 0,re=ie?ie.valueOf:void 0;function oe(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function ae(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function se(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function ce(e){this.__data__=new ae(e)}function pe(e,t){var n=je(e)||function(e){return function(e){return function(e){return!!e&&"object"==i(e)}(e)&&Oe(e)}(e)&&I.call(e,"callee")&&(!D.call(e,"callee")||z.call(e)==r)}(e)?function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}(e.length,String):[],o=n.length,a=!!o;for(var s in e)!t&&!I.call(e,s)||a&&("length"==s||xe(s,o))||n.push(s);return n}function le(e,t,n){var i=e[t];I.call(e,t)&&_e(i,n)&&(void 0!==n||t in e)||(e[t]=n)}function ue(e,t){for(var n=e.length;n--;)if(_e(e[n][0],t))return n;return-1}function fe(e,t,n,i,l,u,d){var m;if(i&&(m=u?i(e,l,u,d):i(e)),void 0!==m)return m;if(!Ce(e))return e;var h=je(e);if(h){if(m=function(e){var t=e.length,n=e.constructor(t);t&&"string"==typeof e[0]&&I.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!t)return function(e,t){var n=-1,i=e.length;t||(t=Array(i));for(;++n<i;)t[n]=e[n];return t}(e,m)}else{var y=be(e),v=y==o||y==a;if(Se(e))return function(e,t){if(t)return e.slice();var n=new e.constructor(e.length);return e.copy(n),n}(e,t);if("[object Object]"==y||y==r||v&&!u){if(w(e))return u?e:{};if(m=function(e){return"function"!=typeof e.constructor||ke(e)?{}:(t=$(e),Ce(t)?U(t):{});var t}(v?{}:e),!t)return function(e,t){return he(e,ge(e),t)}(e,function(e,t){return e&&he(t,Te(t),e)}(m,e))}else{if(!f[y])return u?e:{};m=function(e,t,n,i){var r=e.constructor;switch(t){case"[object ArrayBuffer]":return me(e);case"[object Boolean]":case"[object Date]":return new r(+e);case"[object DataView]":return function(e,t){var n=t?me(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,i);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return function(e,t){var n=t?me(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}(e,i);case s:return function(e,t,n){return k(t?n(_(e),!0):_(e),b,new e.constructor)}(e,i,n);case"[object Number]":case"[object String]":return new r(e);case"[object RegExp]":return function(e){var t=new e.constructor(e.source,p.exec(e));return t.lastIndex=e.lastIndex,t}(e);case c:return function(e,t,n){return k(t?n(O(e),!0):O(e),x,new e.constructor)}(e,i,n);case"[object Symbol]":return o=e,re?Object(re.call(o)):{}}var o}(e,y,fe,t)}}d||(d=new ce);var g=d.get(e);if(g)return g;if(d.set(e,m),!h)var j=n?function(e){return function(e,t,n){var i=t(e);return je(e)?i:function(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}(i,n(e))}(e,Te,ge)}(e):Te(e);return function(e,t){for(var n=-1,i=e?e.length:0;++n<i&&!1!==t(e[n],n,e););}(j||e,(function(r,o){j&&(r=e[o=r]),le(m,o,fe(r,t,n,i,o,e,d))})),m}function de(e){return!(!Ce(e)||(t=e,P&&P in t))&&(Ee(e)||w(e)?N:l).test(we(e));var t}function me(e){var t=new e.constructor(e.byteLength);return new q(t).set(new q(e)),t}function he(e,t,n,i){n||(n={});for(var r=-1,o=t.length;++r<o;){var a=t[r],s=i?i(n[a],e[a],a,n,e):void 0;le(n,a,void 0===s?e[a]:s)}return n}function ye(e,t){var n,r,o=e.__data__;return("string"==(r=i(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?o["string"==typeof t?"string":"hash"]:o.map}function ve(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return de(n)?n:void 0}oe.prototype.clear=function(){this.__data__=G?G(null):{}},oe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},oe.prototype.get=function(e){var t=this.__data__;if(G){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return I.call(t,e)?t[e]:void 0},oe.prototype.has=function(e){var t=this.__data__;return G?void 0!==t[e]:I.call(t,e)},oe.prototype.set=function(e,t){return this.__data__[e]=G&&void 0===t?"__lodash_hash_undefined__":t,this},ae.prototype.clear=function(){this.__data__=[]},ae.prototype.delete=function(e){var t=this.__data__,n=ue(t,e);return!(n<0)&&(n==t.length-1?t.pop():L.call(t,n,1),!0)},ae.prototype.get=function(e){var t=this.__data__,n=ue(t,e);return n<0?void 0:t[n][1]},ae.prototype.has=function(e){return ue(this.__data__,e)>-1},ae.prototype.set=function(e,t){var n=this.__data__,i=ue(n,e);return i<0?n.push([e,t]):n[i][1]=t,this},se.prototype.clear=function(){this.__data__={hash:new oe,map:new(J||ae),string:new oe}},se.prototype.delete=function(e){return ye(this,e).delete(e)},se.prototype.get=function(e){return ye(this,e).get(e)},se.prototype.has=function(e){return ye(this,e).has(e)},se.prototype.set=function(e,t){return ye(this,e).set(e,t),this},ce.prototype.clear=function(){this.__data__=new ae},ce.prototype.delete=function(e){return this.__data__.delete(e)},ce.prototype.get=function(e){return this.__data__.get(e)},ce.prototype.has=function(e){return this.__data__.has(e)},ce.prototype.set=function(e,t){var n=this.__data__;if(n instanceof ae){var i=n.__data__;if(!J||i.length<199)return i.push([e,t]),this;n=this.__data__=new se(i)}return n.set(e,t),this};var ge=B?j(B,Object):function(){return[]},be=function(e){return z.call(e)};function xe(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||u.test(e))&&e>-1&&e%1==0&&e<t}function ke(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||T)}function we(e){if(null!=e){try{return F.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function _e(e,t){return e===t||e!=e&&t!=t}(Z&&"[object DataView]"!=be(new Z(new ArrayBuffer(1)))||J&&be(new J)!=s||W&&"[object Promise]"!=be(W.resolve())||Q&&be(new Q)!=c||Y&&"[object WeakMap]"!=be(new Y))&&(be=function(e){var t=z.call(e),n="[object Object]"==t?e.constructor:void 0,i=n?we(n):void 0;if(i)switch(i){case K:return"[object DataView]";case X:return s;case ee:return"[object Promise]";case te:return c;case ne:return"[object WeakMap]"}return t});var je=Array.isArray;function Oe(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!Ee(e)}var Se=V||function(){return!1};function Ee(e){var t=Ce(e)?z.call(e):"";return t==o||t==a}function Ce(e){var t=i(e);return!!e&&("object"==t||"function"==t)}function Te(e){return Oe(e)?pe(e):function(e){if(!ke(e))return H(e);var t=[];for(var n in Object(e))I.call(e,n)&&"constructor"!=n&&t.push(n);return t}(e)}n.exports=function(e){return fe(e,!0,!0)}}).call(this,n(19),n(22)(e))},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n(6),r=Object(i.c)(),o="Sentry Logger ",a=function(){function e(){this._enabled=!1}return e.prototype.disable=function(){this._enabled=!1},e.prototype.enable=function(){this._enabled=!0},e.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._enabled&&Object(i.a)((function(){r.console.log(o+"[Log]: "+e.join(" "))}))},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._enabled&&Object(i.a)((function(){r.console.warn(o+"[Warn]: "+e.join(" "))}))},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this._enabled&&Object(i.a)((function(){r.console.error(o+"[Error]: "+e.join(" "))}))},e}();r.__SENTRY__=r.__SENTRY__||{};var s=r.__SENTRY__.logger||(r.__SENTRY__.logger=new a)},,function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(18),o=n(37),a=n(10),s=n(20).scan,c=a.ValidatorResult,p=a.SchemaError,l=a.SchemaContext,u=function e(){this.customFormats=Object.create(e.prototype.customFormats),this.schemas={},this.unresolvedRefs=[],this.types=Object.create(d),this.attributes=Object.create(o.validators)};function f(e){var t="string"==typeof e?e:e.$ref;return"string"==typeof t&&t}u.prototype.customFormats={},u.prototype.schemas=null,u.prototype.types=null,u.prototype.attributes=null,u.prototype.unresolvedRefs=null,u.prototype.addSchema=function(e,t){var n=this;if(!e)return null;var i=s(t||"/",e),r=t||e.id;for(var o in i.id)this.schemas[o]=i.id[o];for(var o in i.ref)this.unresolvedRefs.push(o);return this.unresolvedRefs=this.unresolvedRefs.filter((function(e){return void 0===n.schemas[e]})),this.schemas[r]},u.prototype.addSubSchemaArray=function(e,t){if(t instanceof Array)for(var n=0;n<t.length;n++)this.addSubSchema(e,t[n])},u.prototype.addSubSchemaObject=function(e,t){if(t&&"object"==i(t))for(var n in t)this.addSubSchema(e,t[n])},u.prototype.setSchemas=function(e){this.schemas=e},u.prototype.getSchema=function(e){return this.schemas[e]},u.prototype.validate=function(e,t,n,i){n||(n={});var o=n.propertyName||"instance",a=r.resolve(n.base||"/",t.id||"");if(!i){(i=new l(t,n,o,a,Object.create(this.schemas))).schemas[a]||(i.schemas[a]=t);var c=s(a,t);for(var u in c.id){var f=c.id[u];i.schemas[u]=f}}if(t){var d=this.validateSchema(e,t,n,i);if(!d)throw new Error("Result undefined");return d}throw new p("no schema specified",t)},u.prototype.validateSchema=function(e,t,n,i){var r,s=new c(e,t,n,i);if("boolean"==typeof t)!0===t?t={}:!1===t&&(t={type:[]});else if(!t)throw new Error("schema is undefined");if(t.extends)if(t.extends instanceof Array){var u={schema:t,ctx:i};t.extends.forEach(this.schemaTraverser.bind(this,u)),t=u.schema,u.schema=null,u.ctx=null,u=null}else t=a.deepMerge(t,this.superResolve(t.extends,i));if(r=f(t)){var d=this.resolve(t,r,i),m=new l(d.subschema,n,i.propertyPath,d.switchSchema,i.schemas);return this.validateSchema(e,d.subschema,n,m)}var h=n&&n.skipAttributes||[];for(var y in t)if(!o.ignoreProperties[y]&&h.indexOf(y)<0){var v=null,g=this.attributes[y];if(g)v=g.call(this,e,t,n,i);else if(!1===n.allowUnknownAttributes)throw new p("Unsupported attribute: "+y,t);v&&s.importErrors(v)}if("function"==typeof n.rewrite){var b=n.rewrite.call(this,e,t,n,i);s.instance=b}return s},u.prototype.schemaTraverser=function(e,t){e.schema=a.deepMerge(e.schema,this.superResolve(t,e.ctx))},u.prototype.superResolve=function(e,t){var n;return(n=f(e))?this.resolve(e,n,t).subschema:e},u.prototype.resolve=function(e,t,n){if(t=n.resolve(t),n.schemas[t])return{subschema:n.schemas[t],switchSchema:t};var i=r.parse(t),o=i&&i.hash,s=o&&o.length&&t.substr(0,t.length-o.length);if(!s||!n.schemas[s])throw new p("no such schema <"+t+">",e);var c=a.objectGetPath(n.schemas[s],o.substr(1));if(void 0===c)throw new p("no such schema "+o+" located in <"+s+">",e);return{subschema:c,switchSchema:t}},u.prototype.testType=function(e,t,n,r,o){if("function"==typeof this.types[o])return this.types[o].call(this,e);if(o&&"object"==i(o)){var a=this.validateSchema(e,o,n,r);return void 0===a||!(a&&a.errors.length)}return!0};var d=u.prototype.types={};d.string=function(e){return"string"==typeof e},d.number=function(e){return"number"==typeof e&&isFinite(e)},d.integer=function(e){return"number"==typeof e&&e%1==0},d.boolean=function(e){return"boolean"==typeof e},d.array=function(e){return Array.isArray(e)},d.null=function(e){return null===e},d.date=function(e){return e instanceof Date},d.any=function(e){return!0},d.object=function(e){return e&&"object"===i(e)&&!(e instanceof Array)&&!(e instanceof Date)},e.exports=u},function(e,t,n){(function(e,i){var r;function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}\n/*! https://mths.be/punycode v1.3.2 by @mathias */!function(a){var s="object"==o(t)&&t&&!t.nodeType&&t,c="object"==o(e)&&e&&!e.nodeType&&e,p="object"==(void 0===i?"undefined":o(i))&&i;p.global!==p&&p.window!==p&&p.self!==p||(a=p);var l,u,f=2147483647,d=/^xn--/,m=/[^\\x20-\\x7E]/,h=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,y={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},v=Math.floor,g=String.fromCharCode;function b(e){throw RangeError(y[e])}function x(e,t){for(var n=e.length,i=[];n--;)i[n]=t(e[n]);return i}function k(e,t){var n=e.split("@"),i="";return n.length>1&&(i=n[0]+"@",e=n[1]),i+x((e=e.replace(h,".")).split("."),t).join(".")}function w(e){for(var t,n,i=[],r=0,o=e.length;r<o;)(t=e.charCodeAt(r++))>=55296&&t<=56319&&r<o?56320==(64512&(n=e.charCodeAt(r++)))?i.push(((1023&t)<<10)+(1023&n)+65536):(i.push(t),r--):i.push(t);return i}function _(e){return x(e,(function(e){var t="";return e>65535&&(t+=g((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=g(e)})).join("")}function j(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function O(e,t,n){var i=0;for(e=n?v(e/700):e>>1,e+=v(e/t);e>455;i+=36)e=v(e/35);return v(i+36*e/(e+38))}function S(e){var t,n,i,r,o,a,s,c,p,l,u,d=[],m=e.length,h=0,y=128,g=72;for((n=e.lastIndexOf("-"))<0&&(n=0),i=0;i<n;++i)e.charCodeAt(i)>=128&&b("not-basic"),d.push(e.charCodeAt(i));for(r=n>0?n+1:0;r<m;){for(o=h,a=1,s=36;r>=m&&b("invalid-input"),((c=(u=e.charCodeAt(r++))-48<10?u-22:u-65<26?u-65:u-97<26?u-97:36)>=36||c>v((f-h)/a))&&b("overflow"),h+=c*a,!(c<(p=s<=g?1:s>=g+26?26:s-g));s+=36)a>v(f/(l=36-p))&&b("overflow"),a*=l;g=O(h-o,t=d.length+1,0==o),v(h/t)>f-y&&b("overflow"),y+=v(h/t),h%=t,d.splice(h++,0,y)}return _(d)}function E(e){var t,n,i,r,o,a,s,c,p,l,u,d,m,h,y,x=[];for(d=(e=w(e)).length,t=128,n=0,o=72,a=0;a<d;++a)(u=e[a])<128&&x.push(g(u));for(i=r=x.length,r&&x.push("-");i<d;){for(s=f,a=0;a<d;++a)(u=e[a])>=t&&u<s&&(s=u);for(s-t>v((f-n)/(m=i+1))&&b("overflow"),n+=(s-t)*m,t=s,a=0;a<d;++a)if((u=e[a])<t&&++n>f&&b("overflow"),u==t){for(c=n,p=36;!(c<(l=p<=o?1:p>=o+26?26:p-o));p+=36)y=c-l,h=36-l,x.push(g(j(l+y%h,0))),c=v(y/h);x.push(g(j(c,0))),o=O(n,m,i==r),n=0,++i}++n,++t}return x.join("")}if(l={version:"1.3.2",ucs2:{decode:w,encode:_},decode:S,encode:E,toASCII:function(e){return k(e,(function(e){return m.test(e)?"xn--"+E(e):e}))},toUnicode:function(e){return k(e,(function(e){return d.test(e)?S(e.slice(4).toLowerCase()):e}))}},"object"==o(n(23))&&n(23))void 0===(r=function(){return l}.call(t,n,t,e))||(e.exports=r);else if(s&&c)if(e.exports==s)c.exports=l;else for(u in l)l.hasOwnProperty(u)&&(s[u]=l[u]);else a.punycode=l}(this)}).call(this,n(22)(e),n(19))},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"===i(e)&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},function(e,t,n){"use strict";t.decode=t.parse=n(35),t.encode=t.stringify=n(36)},function(e,t,n){"use strict";function i(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,t,n,o){t=t||"&",n=n||"=";var a={};if("string"!=typeof e||0===e.length)return a;var s=/\\+/g;e=e.split(t);var c=1e3;o&&"number"==typeof o.maxKeys&&(c=o.maxKeys);var p=e.length;c>0&&p>c&&(p=c);for(var l=0;l<p;++l){var u,f,d,m,h=e[l].replace(s,"%20"),y=h.indexOf(n);y>=0?(u=h.substr(0,y),f=h.substr(y+1)):(u=h,f=""),d=decodeURIComponent(u),m=decodeURIComponent(f),i(a,d)?r(a[d])?a[d].push(m):a[d]=[a[d],m]:a[d]=m}return a};var r=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=function(e){switch(i(e)){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,t,n,c){return t=t||"&",n=n||"=",null===e&&(e=void 0),"object"===i(e)?a(s(e),(function(i){var s=encodeURIComponent(r(i))+n;return o(e[i])?a(e[i],(function(e){return s+encodeURIComponent(r(e))})).join(t):s+encodeURIComponent(r(e[i]))})).join(t):c?encodeURIComponent(r(c))+n+encodeURIComponent(r(e)):""};var o=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function a(e,t){if(e.map)return e.map(t);for(var n=[],i=0;i<e.length;i++)n.push(t(e[i],i));return n}var s=Object.keys||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(n);return t}},function(e,t,n){"use strict";var i=n(10),r=i.ValidatorResult,o=i.SchemaError,a={ignoreProperties:{id:!0,default:!0,description:!0,title:!0,exclusiveMinimum:!0,exclusiveMaximum:!0,additionalItems:!0,$schema:!0,$ref:!0,extends:!0}},s=a.validators={};function c(e,t,n,i,r){var o=t.throwError;t.throwError=!1;var a=this.validateSchema(e,r,t,n);return t.throwError=o,!a.valid&&i instanceof Function&&i(a),a.valid}function p(e,t,n,i,r,o){if(this.types.object(e)&&(!t.properties||void 0===t.properties[r]))if(!1===t.additionalProperties)o.addError({name:"additionalProperties",argument:r,message:"additionalProperty "+JSON.stringify(r)+" exists in instance when not allowed"});else{var a=t.additionalProperties||{};"function"==typeof n.preValidateProperty&&n.preValidateProperty(e,r,a,n,i);var s=this.validateSchema(e[r],a,n,i.makeChild(a,r));s.instance!==o.instance[r]&&(o.instance[r]=s.instance),o.importErrors(s)}}s.type=function(e,t,n,i){if(void 0===e)return null;var o=new r(e,t,n,i),a=Array.isArray(t.type)?t.type:[t.type];if(!a.some(this.testType.bind(this,e,t,n,i))){var s=a.map((function(e){return e.id&&"<"+e.id+">"||e+""}));o.addError({name:"type",argument:s,message:"is not of a type(s) "+s})}return o},s.anyOf=function(e,t,n,i){if(void 0===e)return null;var a=new r(e,t,n,i),s=new r(e,t,n,i);if(!Array.isArray(t.anyOf))throw new o("anyOf must be an array");if(!t.anyOf.some(c.bind(this,e,n,i,(function(e){s.importErrors(e)})))){var p=t.anyOf.map((function(e,t){return e.id&&"<"+e.id+">"||e.title&&JSON.stringify(e.title)||e.$ref&&"<"+e.$ref+">"||"[subschema "+t+"]"}));n.nestedErrors&&a.importErrors(s),a.addError({name:"anyOf",argument:p,message:"is not any of "+p.join(",")})}return a},s.allOf=function(e,t,n,i){if(void 0===e)return null;if(!Array.isArray(t.allOf))throw new o("allOf must be an array");var a=new r(e,t,n,i),s=this;return t.allOf.forEach((function(t,r){var o=s.validateSchema(e,t,n,i);if(!o.valid){var c=t.id&&"<"+t.id+">"||t.title&&JSON.stringify(t.title)||t.$ref&&"<"+t.$ref+">"||"[subschema "+r+"]";a.addError({name:"allOf",argument:{id:c,length:o.errors.length,valid:o},message:"does not match allOf schema "+c+" with "+o.errors.length+" error[s]:"}),a.importErrors(o)}})),a},s.oneOf=function(e,t,n,i){if(void 0===e)return null;if(!Array.isArray(t.oneOf))throw new o("oneOf must be an array");var a=new r(e,t,n,i),s=new r(e,t,n,i),p=t.oneOf.filter(c.bind(this,e,n,i,(function(e){s.importErrors(e)}))).length,l=t.oneOf.map((function(e,t){return e.id&&"<"+e.id+">"||e.title&&JSON.stringify(e.title)||e.$ref&&"<"+e.$ref+">"||"[subschema "+t+"]"}));return 1!==p&&(n.nestedErrors&&a.importErrors(s),a.addError({name:"oneOf",argument:l,message:"is not exactly one from "+l.join(",")})),a},s.properties=function(e,t,n,i){if(this.types.object(e)){var o=new r(e,t,n,i),a=t.properties||{};for(var s in a){"function"==typeof n.preValidateProperty&&n.preValidateProperty(e,s,a[s],n,i);var c=Object.hasOwnProperty.call(e,s)?e[s]:void 0,p=this.validateSchema(c,a[s],n,i.makeChild(a[s],s));p.instance!==o.instance[s]&&(o.instance[s]=p.instance),o.importErrors(p)}return o}},s.patternProperties=function(e,t,n,i){if(this.types.object(e)){var o=new r(e,t,n,i),a=t.patternProperties||{};for(var s in e){var c=!0;for(var l in a){if(new RegExp(l).test(s)){c=!1,"function"==typeof n.preValidateProperty&&n.preValidateProperty(e,s,a[l],n,i);var u=this.validateSchema(e[s],a[l],n,i.makeChild(a[l],s));u.instance!==o.instance[s]&&(o.instance[s]=u.instance),o.importErrors(u)}}c&&p.call(this,e,t,n,i,s,o)}return o}},s.additionalProperties=function(e,t,n,i){if(this.types.object(e)){if(t.patternProperties)return null;var o=new r(e,t,n,i);for(var a in e)p.call(this,e,t,n,i,a,o);return o}},s.minProperties=function(e,t,n,i){if(this.types.object(e)){var o=new r(e,t,n,i);return Object.keys(e).length>=t.minProperties||o.addError({name:"minProperties",argument:t.minProperties,message:"does not meet minimum property length of "+t.minProperties}),o}},s.maxProperties=function(e,t,n,i){if(this.types.object(e)){var o=new r(e,t,n,i);return Object.keys(e).length<=t.maxProperties||o.addError({name:"maxProperties",argument:t.maxProperties,message:"does not meet maximum property length of "+t.maxProperties}),o}},s.items=function(e,t,n,i){var o=this;if(this.types.array(e)&&t.items){var a=new r(e,t,n,i);return e.every((function(e,r){var s=Array.isArray(t.items)?t.items[r]||t.additionalItems:t.items;if(void 0===s)return!0;if(!1===s)return a.addError({name:"items",message:"additionalItems not permitted"}),!1;var c=o.validateSchema(e,s,n,i.makeChild(s,r));return c.instance!==a.instance[r]&&(a.instance[r]=c.instance),a.importErrors(c),!0})),a}},s.minimum=function(e,t,n,i){if(this.types.number(e)){var o=new r(e,t,n,i);return(t.exclusiveMinimum&&!0===t.exclusiveMinimum?e>t.minimum:e>=t.minimum)||o.addError({name:"minimum",argument:t.minimum,message:"must have a minimum value of "+t.minimum}),o}},s.maximum=function(e,t,n,i){if(this.types.number(e)){var o=new r(e,t,n,i);return(t.exclusiveMaximum&&!0===t.exclusiveMaximum?e<t.maximum:e<=t.maximum)||o.addError({name:"maximum",argument:t.maximum,message:"must have a maximum value of "+t.maximum}),o}};var l=function(e,t,n,a,s,c){if(this.types.number(e)){var p=t[s];if(0==p)throw new o(s+" cannot be zero");var l=new r(e,t,n,a),u=i.getDecimalPlaces(e),f=i.getDecimalPlaces(p),d=Math.max(u,f),m=Math.pow(10,d);return Math.round(e*m)%Math.round(p*m)!=0&&l.addError({name:s,argument:p,message:c+JSON.stringify(p)}),l}};function u(e,t,n){var r,o=n.length;for(r=t+1;r<o;r++)if(i.deepCompareStrict(e,n[r]))return!1;return!0}s.multipleOf=function(e,t,n,i){return l.call(this,e,t,n,i,"multipleOf","is not a multiple of (divisible by) ")},s.divisibleBy=function(e,t,n,i){return l.call(this,e,t,n,i,"divisibleBy","is not divisible by (multiple of) ")},s.required=function(e,t,n,i){var o=new r(e,t,n,i);return void 0===e&&!0===t.required?o.addError({name:"required",message:"is required"}):this.types.object(e)&&Array.isArray(t.required)&&t.required.forEach((function(t){void 0===e[t]&&o.addError({name:"required",argument:t,message:"requires property "+JSON.stringify(t)})})),o},s.pattern=function(e,t,n,i){if(this.types.string(e)){var o=new r(e,t,n,i);return e.match(t.pattern)||o.addError({name:"pattern",argument:t.pattern,message:"does not match pattern "+JSON.stringify(t.pattern.toString())}),o}},s.format=function(e,t,n,o){if(void 0!==e){var a=new r(e,t,n,o);return a.disableFormat||i.isFormat(e,t.format,this)||a.addError({name:"format",argument:t.format,message:"does not conform to the "+JSON.stringify(t.format)+" format"}),a}},s.minLength=function(e,t,n,i){if(this.types.string(e)){var o=new r(e,t,n,i),a=e.match(/[\\uDC00-\\uDFFF]/g);return e.length-(a?a.length:0)>=t.minLength||o.addError({name:"minLength",argument:t.minLength,message:"does not meet minimum length of "+t.minLength}),o}},s.maxLength=function(e,t,n,i){if(this.types.string(e)){var o=new r(e,t,n,i),a=e.match(/[\\uDC00-\\uDFFF]/g);return e.length-(a?a.length:0)<=t.maxLength||o.addError({name:"maxLength",argument:t.maxLength,message:"does not meet maximum length of "+t.maxLength}),o}},s.minItems=function(e,t,n,i){if(this.types.array(e)){var o=new r(e,t,n,i);return e.length>=t.minItems||o.addError({name:"minItems",argument:t.minItems,message:"does not meet minimum length of "+t.minItems}),o}},s.maxItems=function(e,t,n,i){if(this.types.array(e)){var o=new r(e,t,n,i);return e.length<=t.maxItems||o.addError({name:"maxItems",argument:t.maxItems,message:"does not meet maximum length of "+t.maxItems}),o}},s.uniqueItems=function(e,t,n,o){if(this.types.array(e)){var a=new r(e,t,n,o);return e.every((function(e,t,n){for(var r=t+1;r<n.length;r++)if(i.deepCompareStrict(e,n[r]))return!1;return!0}))||a.addError({name:"uniqueItems",message:"contains duplicate item"}),a}},s.uniqueItems=function(e,t,n,i){if(this.types.array(e)){var o=new r(e,t,n,i);return e.every(u)||o.addError({name:"uniqueItems",message:"contains duplicate item"}),o}},s.dependencies=function(e,t,n,i){if(this.types.object(e)){var o=new r(e,t,n,i);for(var a in t.dependencies)if(void 0!==e[a]){var s=t.dependencies[a],c=i.makeChild(s,a);if("string"==typeof s&&(s=[s]),Array.isArray(s))s.forEach((function(t){void 0===e[t]&&o.addError({name:"dependencies",argument:c.propertyPath,message:"property "+t+" not found, required by "+c.propertyPath})}));else{var p=this.validateSchema(e,s,n,c);o.instance!==p.instance&&(o.instance=p.instance),p&&p.errors.length&&(o.addError({name:"dependencies",argument:c.propertyPath,message:"does not meet dependency required by "+c.propertyPath}),o.importErrors(p))}}return o}},s.enum=function(e,t,n,a){if(void 0===e)return null;if(!Array.isArray(t.enum))throw new o("enum expects an array",t);var s=new r(e,t,n,a);return t.enum.some(i.deepCompareStrict.bind(null,e))||s.addError({name:"enum",argument:t.enum,message:"is not one of enum values: "+t.enum.map(String).join(",")}),s},s.const=function(e,t,n,o){if(void 0===e)return null;var a=new r(e,t,n,o);return i.deepCompareStrict(t.const,e)||a.addError({name:"const",argument:t.const,message:"does not exactly match expected constant: "+t.const}),a},s.not=s.disallow=function(e,t,n,i){var o=this;if(void 0===e)return null;var a=new r(e,t,n,i),s=t.not||t.disallow;return s?(Array.isArray(s)||(s=[s]),s.forEach((function(r){if(o.testType(e,t,n,i,r)){var s=r&&r.id&&"<"+r.id+">"||r;a.addError({name:"not",argument:s,message:"is of prohibited type "+s})}})),a):null},e.exports=a},function(e,t,n){function i(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}e.exports=function(e){function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var n;function i(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];if(i.enabled){var a=i,s=Number(new Date),c=s-(n||s);a.diff=c,a.prev=n,a.curr=s,n=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var p=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){if("%%"===e)return e;p++;var i=r.formatters[n];if("function"==typeof i){var o=t[p];e=i.call(a,o),t.splice(p,1),p--}return e})),r.formatArgs.call(a,t);var l=a.log||r.log;l.apply(a,t)}}return i.namespace=e,i.enabled=r.enabled(e),i.useColors=r.useColors(),i.color=t(e),i.destroy=o,i.extend=a,"function"==typeof r.init&&r.init(i),r.instances.push(i),i}function o(){var e=r.instances.indexOf(this);return-1!==e&&(r.instances.splice(e,1),!0)}function a(e,t){var n=r(this.namespace+(void 0===t?":":t)+e);return n.log=this.log,n}function s(e){return e.toString().substring(2,e.toString().length-2).replace(/\\.\\*\\?$/,"*")}return r.debug=r,r.default=r,r.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},r.disable=function(){var e=[].concat(i(r.names.map(s)),i(r.skips.map(s).map((function(e){return"-"+e})))).join(",");return r.enable(""),e},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\\s,]+/),i=n.length;for(t=0;t<i;t++)n[t]&&("-"===(e=n[t].replace(/\\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var o=r.instances[t];o.enabled=r.enabled(o.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return!0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=n(39),Object.keys(e).forEach((function(t){r[t]=e[t]})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=t,r.enable(r.load()),r}},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i=1e3,r=6e4,o=60*r,a=24*o;function s(e,t,n,i){var r=t>=1.5*n;return Math.round(e/n)+" "+i+(r?"s":"")}e.exports=function(e,t){t=t||{};var c=n(e);if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var n=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*n;case"weeks":case"week":case"w":return 6048e5*n;case"days":case"day":case"d":return n*a;case"hours":case"hour":case"hrs":case"hr":case"h":return n*o;case"minutes":case"minute":case"mins":case"min":case"m":return n*r;case"seconds":case"second":case"secs":case"sec":case"s":return n*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return}}(e);if("number"===c&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=a)return s(e,t,a,"day");if(t>=o)return s(e,t,o,"hour");if(t>=r)return s(e,t,r,"minute");if(t>=i)return s(e,t,i,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=a)return Math.round(e/a)+"d";if(t>=o)return Math.round(e/o)+"h";if(t>=r)return Math.round(e/r)+"m";if(t>=i)return Math.round(e/i)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,n){"use strict";n.r(t),n.d(t,"XhrAdapter",(function(){return u}));var i=n(0),r=n(3),o=n.n(r),a=n(4),s=n(5),c=n(2),p=n(9),l=o()("fs:request:xhr"),u=function(){function e(){}return e.prototype.request=function(e){var t=this;void 0===e.filestackHeaders&&(e.filestackHeaders=!0),(e=Object(p.d)(e)).headers=e.headers||{};var n=e.data,r=e.headers;a.e(n)&&delete r["Content-Type"];var o=new XMLHttpRequest;if(e.auth){if(!e.auth.username||0===e.auth.username.length||!e.auth.password||0===e.auth.password.length)return Promise.reject(new c.a("Basic auth: username and password are required "+e.auth,e));r.Authorization="Basic "+btoa(unescape(encodeURIComponent(e.auth.username+":"+e.auth.password))),l("Set request authorization to %s",e.auth.username+e.auth.password)}var u=e.url.trim();return/^http(s)?:\\/\\//.test(u)||(u="https://"+u),u=Object(p.a)(u,e.params),l("Starting request to %s with options %O",u,e),o.open(e.method.toUpperCase(),u,!0),o.timeout=e.timeout,new Promise((function(a,f){var d;if(e.cancelToken&&(d=e.cancelToken.once("cancel",(function(t){return o&&(o.abort(),o=null),l("Request canceled by user %s, config: %O",t,e),f(new c.a("Request aborted. Reason: "+t,e,null,c.b.ABORTED))}))),o.onreadystatechange=function(){return Object(i.b)(t,void 0,void 0,(function(){var t,n,r;return Object(i.d)(this,(function(i){switch(i.label){case 0:return o&&4===o.readyState&&(0!==o.status||o.responseURL)?(t=Object(p.b)(o.getAllResponseHeaders()),n=o.response,r={data:n,status:o.status,statusText:o.statusText,headers:t,config:e},o=null,[4,Object(p.c)(r)]):[2];case 1:return 500<=(r=i.sent()).status&&r.status<=599?(l("Server error(5xx) - %O",r),[2,f(new c.a("Server error "+u,e,r,c.b.SERVER))]):400<=r.status&&r.status<=499?(l("Request error(4xx) - %O",r),[2,f(new c.a("Request error "+u,e,r,c.b.REQUEST))]):(e.cancelToken&&e.cancelToken.removeListener(d),[2,a(r)])}}))}))},o.onabort=function(){o&&(o=null,f(new c.a("Request aborted",e,null,c.b.ABORTED)))},o.onerror=function(t){o=null,l("Request error! %O",t),f(new c.a("Network Error",e,null,c.b.NETWORK))},o.ontimeout=function(){o=null,l("Request timed out. %O",e),f(new c.a("Request timeout",e,null,c.b.TIMEOUT))},"setRequestHeader"in o&&r&&Object.keys(r).length)for(var m in r)void 0!==r[m]&&(l("Set request header %s to %s",m,r[m]),o.setRequestHeader(m,r[m]));"function"==typeof e.onProgress&&[s.a.POST,s.a.PUT].indexOf(e.method)>-1&&(o.upload?(l("Bind to upload progress event"),o.upload.addEventListener("progress",e.onProgress)):(l("Bind to progress event"),o.addEventListener("progress",e.onProgress))),void 0===n&&(n=null),o.send(n)}))},e}()},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(7);t.convertToJson=function e(t,n){var o={};if(!(t.child&&!r.isEmptyObject(t.child)||t.attrsMap&&!r.isEmptyObject(t.attrsMap)))return r.isExist(t.val)?t.val:"";r.isExist(t.val)&&("string"!=typeof t.val||""!==t.val&&t.val!==n.cdataPositionChar)&&("strict"===n.arrayMode?o[n.textNodeName]=[t.val]:o[n.textNodeName]=t.val),r.merge(o,t.attrsMap,n.arrayMode);for(var a=Object.keys(t.child),s=0;s<a.length;s++){var c=a[s];if(t.child[c]&&t.child[c].length>1)for(var p in o[c]=[],t.child[c])o[c].push(e(t.child[c][p],n));else if(!0===n.arrayMode){var l=e(t.child[c][0],n);"object"===i(l)?o[c]=[l]:o[c]=l}else"strict"===n.arrayMode?o[c]=[e(t.child[c][0],n)]:o[c]=e(t.child[c][0],n)}return o}},function(e,t,n){"use strict";e.exports=function(e,t,n){this.tagname=e,this.parent=t,this.child={},this.attrsMap={},this.val=n,this.addChild=function(e){Array.isArray(this.child[e.tagname])?this.child[e.tagname].push(e):this.child[e.tagname]=[e]}}},function(e,t,n){"use strict";var i=n(7),r={allowBooleanAttributes:!1},o=["allowBooleanAttributes"];function a(e,t){for(var n=t;t<e.length;t++)if("?"!=e[t]&&" "!=e[t]);else{var i=e.substr(n,t-n);if(t>5&&"xml"===i)return f("InvalidXml","XML declaration allowed only at the start of the document.",m(e,t));if("?"==e[t]&&">"==e[t+1]){t++;break}}return t}function s(e,t){if(e.length>t+5&&"-"===e[t+1]&&"-"===e[t+2]){for(t+=3;t<e.length;t++)if("-"===e[t]&&"-"===e[t+1]&&">"===e[t+2]){t+=2;break}}else if(e.length>t+8&&"D"===e[t+1]&&"O"===e[t+2]&&"C"===e[t+3]&&"T"===e[t+4]&&"Y"===e[t+5]&&"P"===e[t+6]&&"E"===e[t+7]){var n=1;for(t+=8;t<e.length;t++)if("<"===e[t])n++;else if(">"===e[t]&&0===--n)break}else if(e.length>t+9&&"["===e[t+1]&&"C"===e[t+2]&&"D"===e[t+3]&&"A"===e[t+4]&&"T"===e[t+5]&&"A"===e[t+6]&&"["===e[t+7])for(t+=8;t<e.length;t++)if("]"===e[t]&&"]"===e[t+1]&&">"===e[t+2]){t+=2;break}return t}t.validate=function(e,t){t=i.buildOptions(t,r,o);var n,p=[],d=!1,h=!1;"\\ufeff"===e[0]&&(e=e.substr(1));for(var y=0;y<e.length;y++){if("<"!==e[y]){if(" "===e[y]||"\\t"===e[y]||"\\n"===e[y]||"\\r"===e[y])continue;return f("InvalidChar","char \'".concat(e[y],"\' is not expected."),m(e,y))}if("?"===e[++y]){if((y=a(e,++y)).err)return y}else{if("!"===e[y]){y=s(e,y);continue}var v=!1;"/"===e[y]&&(v=!0,y++);for(var g="";y<e.length&&">"!==e[y]&&" "!==e[y]&&"\\t"!==e[y]&&"\\n"!==e[y]&&"\\r"!==e[y];y++)g+=e[y];if("/"===(g=g.trim())[g.length-1]&&(g=g.substring(0,g.length-1),y--),n=g,!i.isName(n)){return f("InvalidTag",0===g.trim().length?"There is an unnecessary space between tag name and backward slash \'</ ..\'.":"Tag \'".concat(g,"\' is an invalid name."),m(e,y))}var b=c(e,y);if(!1===b)return f("InvalidAttr","Attributes for \'".concat(g,"\' have open quote."),m(e,y));var x=b.value;if(y=b.index,"/"===x[x.length-1]){var k=l(x=x.substring(0,x.length-1),t);if(!0!==k)return f(k.err.code,k.err.msg,m(e,y-x.length+k.err.line));d=!0}else if(v){if(!b.tagClosed)return f("InvalidTag","Closing tag \'".concat(g,"\' doesn\'t have proper closing."),m(e,y));if(x.trim().length>0)return f("InvalidTag","Closing tag \'".concat(g,"\' can\'t have attributes or invalid starting."),m(e,y));var w=p.pop();if(g!==w)return f("InvalidTag","Closing tag \'".concat(w,"\' is expected inplace of \'").concat(g,"\'."),m(e,y));0==p.length&&(h=!0)}else{var _=l(x,t);if(!0!==_)return f(_.err.code,_.err.msg,m(e,y-x.length+_.err.line));if(!0===h)return f("InvalidXml","Multiple possible root nodes found.",m(e,y));p.push(g),d=!0}for(y++;y<e.length;y++){if("<"===e[y]){if("!"===e[y+1]){y=s(e,++y);continue}break}if("&"===e[y]){var j=u(e,y);if(-1==j)return f("InvalidChar","char \'&\' is not expected.",m(e,y));y=j}}"<"===e[y]&&y--}}return d?!(p.length>0)||f("InvalidXml","Invalid \'".concat(JSON.stringify(p,null,4).replace(/\\r?\\n/g,""),"\' found."),1):f("InvalidXml","Start tag expected.",1)};function c(e,t){for(var n="",i="",r=!1;t<e.length;t++){if(\'"\'===e[t]||"\'"===e[t])if(""===i)i=e[t];else{if(i!==e[t])continue;i=""}else if(">"===e[t]&&""===i){r=!0;break}n+=e[t]}return""===i&&{value:n,index:t,tagClosed:r}}var p=new RegExp("(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\'\\"])(([\\\\s\\\\S])*?)\\\\5)?","g");function l(e,t){for(var n=i.getAllMatches(e,p),r={},o=0;o<n.length;o++){if(0===n[o][1].length)return f("InvalidAttr","Attribute \'".concat(n[o][2],"\' has no space in starting."),h(e,n[o][0]));if(void 0===n[o][3]&&!t.allowBooleanAttributes)return f("InvalidAttr","boolean attribute \'".concat(n[o][2],"\' is not allowed."),h(e,n[o][0]));var a=n[o][2];if(!d(a))return f("InvalidAttr","Attribute \'".concat(a,"\' is an invalid name."),h(e,n[o][0]));if(r.hasOwnProperty(a))return f("InvalidAttr","Attribute \'".concat(a,"\' is repeated."),h(e,n[o][0]));r[a]=1}return!0}function u(e,t){if(";"===e[++t])return-1;if("#"===e[t])return function(e,t){var n=/\\d/;for("x"===e[t]&&(t++,n=/[\\da-fA-F]/);t<e.length;t++){if(";"===e[t])return t;if(!e[t].match(n))break}return-1}(e,++t);for(var n=0;t<e.length;t++,n++)if(!(e[t].match(/\\w/)&&n<20)){if(";"===e[t])break;return-1}return t}function f(e,t,n){return{err:{code:e,msg:t,line:n}}}function d(e){return i.isName(e)}function m(e,t){return e.substring(0,t).split(/\\r?\\n/).length}function h(e,t){return e.indexOf(t)+t.length}},function(e,t,n){"use strict";var i=function(e){return String.fromCharCode(e)},r={nilChar:i(176),missingChar:i(201),nilPremitive:i(175),missingPremitive:i(200),emptyChar:i(178),emptyValue:i(177),boundryChar:i(179),objStart:i(198),arrStart:i(204),arrayEnd:i(185)},o=[r.nilChar,r.nilPremitive,r.missingChar,r.missingPremitive,r.boundryChar,r.emptyChar,r.emptyValue,r.arrayEnd,r.objStart,r.arrStart],a=function e(t,n,i){if("string"==typeof n)return t&&t[0]&&void 0!==t[0].val?s(t[0].val,n):s(t,n);var o,a=void 0===(o=t)?r.missingChar:null===o?r.nilChar:!(o.child&&0===Object.keys(o.child).length&&(!o.attrsMap||0===Object.keys(o.attrsMap).length))||r.emptyChar;if(!0===a){var p="";if(Array.isArray(n)){p+=r.arrStart;var l=n[0],u=t.length;if("string"==typeof l)for(var f=0;f<u;f++){var d=s(t[f].val,l);p=c(p,d)}else for(var m=0;m<u;m++){var h=e(t[m],l,i);p=c(p,h)}p+=r.arrayEnd}else{p+=r.objStart;var y=Object.keys(n);for(var v in Array.isArray(t)&&(t=t[0]),y){var g=y[v],b=void 0;b=!i.ignoreAttributes&&t.attrsMap&&t.attrsMap[g]?e(t.attrsMap[g],n[g],i):g===i.textNodeName?e(t.val,n[g],i):e(t.child[g],n[g],i),p=c(p,b)}}return p}return a},s=function(e){switch(e){case void 0:return r.missingPremitive;case null:return r.nilPremitive;case"":return r.emptyValue;default:return e}},c=function(e,t){return p(t[0])||p(e[e.length-1])||(e+=r.boundryChar),e+t},p=function(e){return-1!==o.indexOf(e)};var l=n(12),u=n(7).buildOptions;t.convert2nimn=function(e,t,n){return n=u(n,l.defaultOptions,l.props),a(e,t,n)}},function(e,t,n){"use strict";var i=n(7),r=n(7).buildOptions,o=n(12),a=function e(t,n,r){for(var o,a="{",s=Object.keys(t.child),c=0;c<s.length;c++){var p=s[c];if(t.child[p]&&t.child[p].length>1){for(var l in a+=\'"\'+p+\'" : [ \',t.child[p])a+=e(t.child[p][l],n)+" , ";a=a.substr(0,a.length-1)+" ] "}else a+=\'"\'+p+\'" : \'+e(t.child[p][0],n)+" ,"}return i.merge(a,t.attrsMap),i.isEmptyObject(a)?i.isExist(t.val)?t.val:"":(i.isExist(t.val)&&("string"!=typeof t.val||""!==t.val&&t.val!==n.cdataPositionChar)&&(a+=\'"\'+n.textNodeName+\'" : \'+(!0!==(o=t.val)&&!1!==o&&isNaN(o)?\'"\'+o+\'"\':o)),","===a[a.length-1]&&(a=a.substr(0,a.length-2)),a+"}")};t.convertToJsonString=function(e,t){return(t=r(t,o.defaultOptions,o.props)).indentBy=t.indentBy||"",a(e,t,0)}},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=n(7).buildOptions,o={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataTagName:!1,cdataPositionChar:"\\\\c",format:!1,indentBy:"  ",supressEmptyNode:!1,tagValueProcessor:function(e){return e},attrValueProcessor:function(e){return e}},a=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","attrValueProcessor"];function s(e){this.options=r(e,o,a),this.options.ignoreAttributes||this.options.attrNodeName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=h),this.options.cdataTagName?this.isCDATA=y:this.isCDATA=function(){return!1},this.replaceCDATAstr=c,this.replaceCDATAarr=p,this.options.format?(this.indentate=m,this.tagEndChar=">\\n",this.newLine="\\n"):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine=""),this.options.supressEmptyNode?(this.buildTextNode=d,this.buildObjNode=u):(this.buildTextNode=f,this.buildObjNode=l),this.buildTextValNode=f,this.buildObjectNode=l}function c(e,t){return e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e?e+"<![CDATA["+t+"]]"+this.tagEndChar:e.replace(this.options.cdataPositionChar,"<![CDATA["+t+"]]"+this.tagEndChar)}function p(e,t){if(e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e)return e+"<![CDATA["+t.join("]]><![CDATA[")+"]]"+this.tagEndChar;for(var n in t)e=e.replace(this.options.cdataPositionChar,"<![CDATA["+t[n]+"]]>");return e+this.newLine}function l(e,t,n,i){return n&&!e.includes("<")?this.indentate(i)+"<"+t+n+">"+e+"</"+t+this.tagEndChar:this.indentate(i)+"<"+t+n+this.tagEndChar+e+this.indentate(i)+"</"+t+this.tagEndChar}function u(e,t,n,i){return""!==e?this.buildObjectNode(e,t,n,i):this.indentate(i)+"<"+t+n+"/"+this.tagEndChar}function f(e,t,n,i){return this.indentate(i)+"<"+t+n+">"+this.options.tagValueProcessor(e)+"</"+t+this.tagEndChar}function d(e,t,n,i){return""!==e?this.buildTextValNode(e,t,n,i):this.indentate(i)+"<"+t+n+"/"+this.tagEndChar}function m(e){return this.options.indentBy.repeat(e)}function h(e){return!!e.startsWith(this.options.attributeNamePrefix)&&e.substr(this.attrPrefixLen)}function y(e){return e===this.options.cdataTagName}s.prototype.parse=function(e){return this.j2x(e,0).val},s.prototype.j2x=function(e,t){for(var n="",r="",o=Object.keys(e),a=o.length,s=0;s<a;s++){var c=o[s];if(void 0===e[c]);else if(null===e[c])r+=this.indentate(t)+"<"+c+"/"+this.tagEndChar;else if(e[c]instanceof Date)r+=this.buildTextNode(e[c],c,"",t);else if("object"!==i(e[c])){var p=this.isAttribute(c);p?n+=" "+p+\'="\'+this.options.attrValueProcessor(""+e[c])+\'"\':this.isCDATA(c)?e[this.options.textNodeName]?r+=this.replaceCDATAstr(e[this.options.textNodeName],e[c]):r+=this.replaceCDATAstr("",e[c]):c===this.options.textNodeName?e[this.options.cdataTagName]||(r+=this.options.tagValueProcessor(""+e[c])):r+=this.buildTextNode(e[c],c,"",t)}else if(Array.isArray(e[c]))if(this.isCDATA(c))r+=this.indentate(t),e[this.options.textNodeName]?r+=this.replaceCDATAarr(e[this.options.textNodeName],e[c]):r+=this.replaceCDATAarr("",e[c]);else for(var l=e[c].length,u=0;u<l;u++){var f=e[c][u];if(void 0===f);else if(null===f)r+=this.indentate(t)+"<"+c+"/"+this.tagEndChar;else if("object"===i(f)){var d=this.j2x(f,t+1);r+=this.buildObjNode(d.val,c,d.attrStr,t)}else r+=this.buildTextNode(f,c,"",t)}else if(this.options.attrNodeName&&c===this.options.attrNodeName)for(var m=Object.keys(e[c]),h=m.length,y=0;y<h;y++)n+=" "+m[y]+\'="\'+this.options.attrValueProcessor(""+e[c][m[y]])+\'"\';else{var v=this.j2x(e[c],t+1);r+=this.buildObjNode(v.val,c,v.attrStr,t)}}return{attrStr:n,val:r}},e.exports=s},function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty,r="~";function o(){}function a(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function s(e,t,n,i,o){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new a(n,i||e,o),c=r?r+t:t;return e._events[c]?e._events[c].fn?e._events[c]=[e._events[c],s]:e._events[c].push(s):(e._events[c]=s,e._eventsCount++),e}function c(e,t){0==--e._eventsCount?e._events=new o:delete e._events[t]}function p(){this._events=new o,this._eventsCount=0}Object.create&&(o.prototype=Object.create(null),(new o).__proto__||(r=!1)),p.prototype.eventNames=function(){var e,t,n=[];if(0===this._eventsCount)return n;for(t in e=this._events)i.call(e,t)&&n.push(r?t.slice(1):t);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(e)):n},p.prototype.listeners=function(e){var t=r?r+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var i=0,o=n.length,a=new Array(o);i<o;i++)a[i]=n[i].fn;return a},p.prototype.listenerCount=function(e){var t=r?r+e:e,n=this._events[t];return n?n.fn?1:n.length:0},p.prototype.emit=function(e,t,n,i,o,a){var s=r?r+e:e;if(!this._events[s])return!1;var c,p,l=this._events[s],u=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),u){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,t),!0;case 3:return l.fn.call(l.context,t,n),!0;case 4:return l.fn.call(l.context,t,n,i),!0;case 5:return l.fn.call(l.context,t,n,i,o),!0;case 6:return l.fn.call(l.context,t,n,i,o,a),!0}for(p=1,c=new Array(u-1);p<u;p++)c[p-1]=arguments[p];l.fn.apply(l.context,c)}else{var f,d=l.length;for(p=0;p<d;p++)switch(l[p].once&&this.removeListener(e,l[p].fn,void 0,!0),u){case 1:l[p].fn.call(l[p].context);break;case 2:l[p].fn.call(l[p].context,t);break;case 3:l[p].fn.call(l[p].context,t,n);break;case 4:l[p].fn.call(l[p].context,t,n,i);break;default:if(!c)for(f=1,c=new Array(u-1);f<u;f++)c[f-1]=arguments[f];l[p].fn.apply(l[p].context,c)}}return!0},p.prototype.on=function(e,t,n){return s(this,e,t,n,!1)},p.prototype.once=function(e,t,n){return s(this,e,t,n,!0)},p.prototype.removeListener=function(e,t,n,i){var o=r?r+e:e;if(!this._events[o])return this;if(!t)return c(this,o),this;var a=this._events[o];if(a.fn)a.fn!==t||i&&!a.once||n&&a.context!==n||c(this,o);else{for(var s=0,p=[],l=a.length;s<l;s++)(a[s].fn!==t||i&&!a[s].once||n&&a[s].context!==n)&&p.push(a[s]);p.length?this._events[o]=1===p.length?p[0]:p:c(this,o)}return this},p.prototype.removeAllListeners=function(e){var t;return e?(t=r?r+e:e,this._events[t]&&c(this,t)):(this._events=new o,this._eventsCount=0),this},p.prototype.off=p.prototype.removeListener,p.prototype.addListener=p.prototype.on,p.prefixed=r,p.EventEmitter=p,e.exports=p},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.r(t),n.d(t,"Filestack",(function(){return tt})),n.d(t,"init",(function(){return nt})),n.d(t,"version",(function(){return it})),n.d(t,"EAlignOptions",(function(){return pe})),n.d(t,"EAlignFacesOptions",(function(){return le})),n.d(t,"EFitOptions",(function(){return ue})),n.d(t,"EBlurMode",(function(){return fe})),n.d(t,"EShapeType",(function(){return de})),n.d(t,"ENoiseType",(function(){return me})),n.d(t,"EStyleType",(function(){return he})),n.d(t,"EColorspaceType",(function(){return ye})),n.d(t,"ECropfacesType",(function(){return ve})),n.d(t,"EVideoTypes",(function(){return ge})),n.d(t,"EUrlscreenshotAgent",(function(){return be})),n.d(t,"EUrlscreenshotMode",(function(){return xe})),n.d(t,"EUrlscreenshotOrientation",(function(){return ke})),n.d(t,"EVideoLocations",(function(){return we})),n.d(t,"EVideoAccess",(function(){return _e})),n.d(t,"EVideoAccessMode",(function(){return je})),n.d(t,"transform",(function(){return Oe})),n.d(t,"Align",(function(){return B})),n.d(t,"FitOptions",(function(){return V})),n.d(t,"BlurMode",(function(){return H})),n.d(t,"ShapeType",(function(){return Z})),n.d(t,"NoiseType",(function(){return J})),n.d(t,"StyleType",(function(){return W})),n.d(t,"ColorspaceType",(function(){return Q})),n.d(t,"CropfacesType",(function(){return Y})),n.d(t,"VideoTypes",(function(){return G})),n.d(t,"URLScreenshotAgent",(function(){return K})),n.d(t,"URLScreenshotMode",(function(){return X})),n.d(t,"URLScreenshotOrientation",(function(){return ee})),n.d(t,"Locations",(function(){return te})),n.d(t,"VideoAccess",(function(){return ne})),n.d(t,"VideoAccessMode",(function(){return ie})),n.d(t,"EnhancePreset",(function(){return re})),n.d(t,"Filelink",(function(){return se})),n.d(t,"FilestackErrorType",(function(){return y})),n.d(t,"FsHttpMethod",(function(){return P.a})),n.d(t,"FsRequest",(function(){return q})),n.d(t,"FsRequestErrorCode",(function(){return $.b})),n.d(t,"FsRequestError",(function(){return $.a})),n.d(t,"FsCancelToken",(function(){return U})),n.d(t,"resolveCdnUrl",(function(){return b.resolveCdnUrl})),n.d(t,"resolveHost",(function(){return b.resolveHost})),n.d(t,"removeEmpty",(function(){return b.removeEmpty})),n.d(t,"uniqueTime",(function(){return b.uniqueTime})),n.d(t,"uniqueId",(function(){return b.uniqueId})),n.d(t,"extensionToMime",(function(){return b.extensionToMime})),n.d(t,"sanitizeName",(function(){return b.sanitizeName})),n.d(t,"filterObject",(function(){return b.filterObject})),n.d(t,"cleanUpCallbacks",(function(){return b.cleanUpCallbacks})),n.d(t,"md5",(function(){return b.md5})),n.d(t,"b64",(function(){return b.b64})),n.d(t,"getVersion",(function(){return b.getVersion})),n.d(t,"isMobile",(function(){return b.isMobile})),n.d(t,"isFacebook",(function(){return b.isFacebook})),n.d(t,"TransformSchema",(function(){return x})),n.d(t,"getSecurity",(function(){return c})),n.d(t,"validateWebhookSignature",(function(){return p})),n.d(t,"Client",(function(){return et})),n.d(t,"FilestackError",(function(){return g})),n.d(t,"PickerDisplayMode",(function(){return Ge})),n.d(t,"getMimetype",(function(){return b.getMimetype})),n.d(t,"PrefetchEvents",(function(){return Ze}));var r=function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==i(e)&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n.r(t),n.d(t,"loadModules",(function(){return c})),n.d(t,"loadModule",(function(){return p})),n.d(t,"registerModule",(function(){return l})),n.d(t,"loadCss",(function(){return u})),n.d(t,"FILESTACK_MODULES",(function(){return i}));var i,r={},o=function(){var e,t=(e="undefined"==typeof window?r:window).filestackInternals;return t||(t={modules:{}},e.filestackInternals=t),t.modules||(t.modules={}),t}(),a=o&&o.modules,s=function(e,t,n){e.detachEvent?e.detachEvent("onreadystatechange",t):e.removeEventListener(n,t,!1)},c=function(e){return Promise.all(e.map((function(e){var t=e.id,n=e.url;return p(t,n)}))).then((function(t){var n={};return t.forEach((function(t,i){var r=e[i];n[r.id]=t})),n}))},p=function(e,t){if("undefined"==typeof window)return Promise.reject(new Error("Load module is working only on browser env"));if(!e)throw new Error("Module id is required");var n=a[e];return e="fs-loader-"+e,n||(a[e]={},n=a[e]),n.instance?Promise.resolve(n.instance):n.promise?n.promise:n.promise=new Promise((function(n,i){var r=function t(r){if("load"===r.type||/^(complete|loaded)$/.test((r.currentTarget||r.srcElement).readyState)){var o=r.currentTarget||r.srcElement;s(o,t,"load"),s(o,i,"error"),setTimeout((function(){return n(a[e]?a[e].instance:void 0)}),10)}},o=document.createElement("script");o.id=e,!o.attachEvent||o.attachEvent.toString&&o.attachEvent.toString().indexOf("[native code")<0?(o.addEventListener("load",r,!1),o.addEventListener("onerror",i,!1)):o.attachEvent("onreadystatechange",r),o.setAttribute("crossorigin","anonymous"),o.setAttribute("charset","utf-8"),o.setAttribute("async","true"),o.src=t,document.body.appendChild(o)}))},l=function(e,t,n){if("undefined"!=typeof window){if(!e)throw new Error("Module id is required");if(!a)throw new Error("Loader is not initialized");a[e="fs-loader-"+e]&&(a[e]={instance:t,metadata:n})}},u=function(e){return null!==document.querySelector(\'link[href="\'.concat(e,\'"]\'))?Promise.resolve():new Promise((function(t){var n=document.getElementsByTagName("head")[0],i=document.createElement("link");i.rel="stylesheet",i.href=e,i.addEventListener("load",(function e(){t(),i.removeEventListener("load",e)})),n.appendChild(i)}))};!function(e){e.FILESTACK_SDK="filestack-sdk",e.TRANSFORMS_UI="transforms-ui",e.PICKER="picker"}(i||(i={}))}]),o=(r.loadModules,r.loadModule),a=r.registerModule,s=(r.loadCss,r.FILESTACK_MODULES),c=function(e,t){throw new Error("getSecurity is only supported in nodejs")},p=function(e,t,n){throw new Error("validateWebhookSignature is only supported in nodejs")},l=n(0),u=n(8),f=n(51);function d(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=Object(f.a)();if(i&&i[e])return i[e].apply(i,l.e(t));throw new Error("No hub defined or "+e+" was not found on the hub, please open a bug report.")}function m(e){var t;try{throw new Error("Sentry syntheticException")}catch(e){t=e}return d("captureException",e,{originalException:e,syntheticException:t})}function h(e){d("withScope",e)}var y,v={urls:{processUrl:"https://process.filestackapi.com",fileApiUrl:"https://www.filestackapi.com/api/file",uploadApiUrl:"https://upload.filestackapi.com",cloudApiUrl:"https://cloud.filestackapi.com",cdnUrl:"https://cdn.filestackcontent.com",pickerUrl:"https://static.filestackapi.com/picker/1.19.1/picker.js"}};!function(e){e.VALIDATION="validation",e.REQUEST="request",e.OTHER="other"}(y||(y={}));var g=function(e){function t(n,i,r){var o=e.call(this,n)||this;return Object.setPrototypeOf(o,t.prototype),o.details=i,o.type=r,o}return Object(l.c)(t,e),t}(Error),b=n(1),x={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Transformations",description:"Filestack transformations parameters",type:"object",additionalProperties:!1,properties:{flip:{type:"boolean",additionalProperties:!1},auto_image:{type:"boolean",additionalProperties:!1},no_metadata:{type:"boolean",additionalProperties:!1},compress:{additionalProperties:!1,oneOf:[{type:"boolean"},{type:"object",properties:{metadata:{type:"boolean",default:!1}}}]},flop:{type:"boolean",additionalProperties:!1},enhance:{default:!0,oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{preset:{type:"string",enum:["auto","vivid","beautify","beautify_plus","fix_dark","fix_noise","fix_tint","outdoor","fireworks"]}}}]},redeye:{type:"boolean",additionalProperties:!1},monochrome:{type:"boolean",additionalProperties:!1},negative:{type:"boolean",additionalProperties:!1},tags:{type:"boolean",additionalProperties:!1},sfw:{type:"boolean",additionalProperties:!1},imagesize:{type:"boolean",additionalProperties:!1},animate:{type:"object",properties:{delay:{type:"integer",minimum:0,maximum:1e4,default:100},loop:{type:"integer",minimum:0,maximum:1e3,default:0},width:{type:"integer",minimum:1,maximum:1800},height:{type:"integer",minimum:1,maximum:1800},fit:{type:"string",default:"clip",enum:["clip","scale","crop"]},background:{$ref:"colorDef",default:"transparent"},align:{$ref:"positionDef",default:"center"}}},metadata:{type:"object",params:{type:"array",items:{type:"string",enum:["filename","mimetype","size","width","height","writeable","path","container","cloud","exif","source_url","md5","sha256","sha1","sha512"]},minItems:0,uniqueItems:!0,additionalItems:!1},additionalProperties:!1},resize:{type:"object",properties:{width:{type:"number",minimum:0,maximum:1e4},height:{type:"number",minimum:0,maximum:1e4},fit:{type:"string",enum:["clip","crop","scale","max"],default:"clip"},align:{$ref:"positionDef",default:"center"}},additionalProperties:!1,anyOf:[{required:["width"]},{required:["height"]}]},crop:{type:"object",properties:{dim:{type:"array",additionalItems:!1,minItems:4,items:[{type:"integer",minimum:0,maximum:1e5},{type:"integer",minimum:0,maximum:1e5},{type:"integer",minimum:1,maximum:1e5},{type:"integer",minimum:1,maximum:1e5}]}},required:["dim"]},rotate:{type:"object",properties:{deg:{oneOf:[{type:"string",enum:["exif"]},{type:"number",minimum:0,maximum:359}]},exif:{type:"boolean"},background:{$ref:"colorDef",default:"FFFFFFFF"}},additionalProperties:!1},detect_faces:{oneOf:[{type:"boolean"},{type:"object",properties:{maxsize:{type:"number",minimum:0,maximum:1e4,default:.35},minsize:{type:"number",minimum:0,maximum:1e4,default:.35},export:{type:"boolean"},color:{$ref:"colorDef",default:"000000FF"}},additionalProperties:!1}]},crop_faces:{oneOf:[{type:"boolean"},{type:"object",properties:{faces:{default:1,$ref:"facesDef"},width:{type:"number",minimum:1,maximum:1e4},height:{type:"number",minimum:1,maximum:1e4},maxsize:{type:"number",minimum:0,maximum:1e4,default:.35},minsize:{type:"number",minimum:0,maximum:1e4,default:.35},buffer:{type:"integer",minimum:0,maximum:1e4},mode:{type:"string",enum:["crop","thumb","fill"],default:"thumb"}},additionalProperties:!1}]},pixelate_faces:{oneOf:[{type:"boolean"},{type:"object",properties:{faces:{$ref:"facesDef",default:"all"},maxsize:{type:"number",minimum:0,maximum:1e4,default:.35},minsize:{type:"number",minimum:0,maximum:1e4,default:.35},buffer:{type:"integer",minimum:0,maximum:1e4},amount:{type:"integer",minimum:2,maximum:100,default:10},blur:{type:"number",minimum:0,maximum:20,default:4},type:{type:"string",enum:["rect","oval"],default:"rect"}},additionalProperties:!1}]},blur_faces:{oneOf:[{type:"boolean"},{type:"object",properties:{faces:{$ref:"facesDef",default:"all"},maxsize:{type:"number",minimum:0,maximum:1e4,default:.35},minsize:{type:"number",minimum:0,maximum:1e4,default:.35},buffer:{type:"integer",minimum:0,maximum:1e4},amount:{type:"number",minimum:0,maximum:10,default:10},blur:{type:"number",minimum:0,maximum:20,default:4},type:{type:"string",enum:["rect","oval"],default:"rect"}},additionalProperties:!1}]},rounded_corners:{oneOf:[{type:"boolean"},{type:"object",properties:{radius:{oneOf:[{type:"integer",minimum:1,maximum:1e4},{type:"string",enum:["max"]}]},blur:{type:"number",minimum:0,maximum:20,default:.3},background:{$ref:"colorDef"}},additionalProperties:!1}]},vignette:{oneOf:[{type:"boolean"},{type:"object",properties:{amount:{type:"integer",minimum:0,maximum:100,default:20},blurmode:{type:"string",enum:["gaussian","linear"],default:"gaussian"},background:{$ref:"colorDef"}},additionalProperties:!1}]},polaroid:{oneOf:[{type:"boolean"},{type:"object",properties:{rotate:{type:"integer",minimum:0,maximum:359},color:{$ref:"colorDef",default:"snow"},background:{$ref:"colorDef"}},additionalProperties:!1}]},torn_edges:{oneOf:[{type:"boolean"},{type:"object",properties:{spread:{type:"array",additionalItems:!1,minItems:2,items:[{type:"integer",minimum:1,maximum:1e4,default:1},{type:"integer",minimum:1,maximum:1e4,default:10}]},background:{$ref:"colorDef"}},additionalProperties:!1}]},shadow:{oneOf:[{type:"boolean"},{type:"object",properties:{blur:{type:"number",minimum:0,maximum:20,default:100},opacity:{type:"integer",minimum:0,maximum:100,default:60},vector:{type:"array",additionalItems:!1,minItems:2,items:[{type:"integer",minimum:-1e3,maximum:1e3,default:4},{type:"integer",minimum:-1e3,maximum:1e3,default:4}]},color:{$ref:"colorDef"},background:{$ref:"colorDef"}},additionalProperties:!1}]},circle:{oneOf:[{type:"boolean"},{type:"object",properties:{background:{$ref:"colorDef"}},additionalProperties:!1}]},border:{oneOf:[{type:"boolean"},{type:"object",properties:{color:{$ref:"colorDef"},background:{$ref:"colorDef"},width:{type:"integer",minimum:0,maximum:1e3}},additionalProperties:!1}]},sharpen:{oneOf:[{type:"boolean"},{type:"object",properties:{amount:{type:"integer",minimum:0,maximum:20,default:2}},additionalProperties:!1}]},blur:{oneOf:[{type:"boolean"},{type:"object",properties:{amount:{type:"integer",minimum:0,maximum:20,default:2}},additionalProperties:!1}]},blackwhite:{oneOf:[{type:"boolean"},{type:"object",properties:{threshold:{type:"integer",minimum:0,maximum:100,default:50}},additionalProperties:!1}]},sepia:{oneOf:[{type:"boolean"},{type:"object",properties:{tone:{type:"integer",minimum:0,maximum:100,default:80}},additionalProperties:!1}]},pixelate:{oneOf:[{type:"boolean"},{type:"object",properties:{amount:{type:"integer",minimum:2,maximum:100,default:2}},additionalProperties:!1}]},oil_paint:{oneOf:[{type:"boolean"},{type:"object",properties:{amount:{type:"integer",minimum:2,maximum:100,default:2}},additionalProperties:!1}]},modulate:{oneOf:[{type:"boolean"},{type:"object",properties:{brightness:{type:"integer",minimum:0,maximum:1e4,default:100},saturation:{type:"integer",minimum:0,maximum:1e4,default:100},hue:{type:"integer",minimum:0,maximum:359,default:0}},additionalProperties:!1}]},ascii:{oneOf:[{type:"boolean"},{type:"object",properties:{foreground:{$ref:"colorDef",default:"000000FF"},background:{$ref:"colorDef",default:"FFFFFFFF"},colored:{type:"boolean",default:!1},size:{type:"integer",minimum:10,maximum:100,default:100},reverse:{type:"boolean",default:!1}},additionalProperties:!1}]},collage:{type:"object",properties:{files:{type:"array",minItems:1,items:[{type:"string"}]},margin:{type:"integer",minimum:1,maximum:100,default:10},width:{type:"integer",minimum:0,maximum:1e4},height:{type:"integer",minimum:0,maximum:1e4},color:{$ref:"colorDef",default:"FFFFFFFF"},fit:{type:"string",enum:["auto","crop"]},autorotate:{type:"boolean",default:!1}},required:["width","height","files"],additionalProperties:!1},urlscreenshot:{oneOf:[{type:"boolean"},{type:"object",properties:{agent:{type:"string",enum:["desktop","mobile"],default:"desktop"},width:{type:"integer",minimum:1,maximum:1920,default:1024},height:{type:"integer",minimum:1,maximum:8e3,default:768},mode:{type:"string",enum:["all","window"],default:"all"},delay:{type:"integer",minimum:0,maximum:2e4,default:1e3},orientation:{type:"string",enum:["portrait","landscape"],default:"portrait"},device:{type:"string",default:""}},additionalProperties:!1}]},upscale:{oneOf:[{type:"boolean"},{type:"object",properties:{noise:{type:"string",enum:["none","low","medium","high"],default:"none"},upscale:{type:"boolean",default:!0},style:{type:"string",enum:["artwork","photo"],default:"photo"}},additionalProperties:!1}]},output:{type:"object",additionalProperties:!1,properties:{format:{type:"string",enum:["doc","docx","html","jpg","odp","ods","odt","pjpg","pdf","png","ppt","pptx","svg","txt","webp","xls","xlsx"]},page:{type:"integer",minimum:1,maximum:99999},density:{type:"integer",minimum:1,maximum:500},compress:{type:"boolean"},quality:{oneOf:[{type:"string",enum:["input"]},{type:"integer",minimum:1,maximum:100,default:95}]},secure:{type:"boolean",default:!1},docinfo:{type:"boolean",default:!1},strip:{type:"boolean",default:!1},colorspace:{type:"string",enum:["rgb","cmyk","input"],default:"rgb"},background:{$ref:"colorDef"},pageformat:{type:"string",enum:["a2","a3","a4","a5","b4","b5","letter","legal","tabloid"]},pageorientation:{type:"string",enum:["landscape","portrait"]}}},pjpg:{oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{quality:{type:"integer",minimum:0,maximum:100},metadata:{type:"boolean",default:!1}}}]},quality:{type:"object",additionalProperties:!1,properties:{value:{type:"integer",minimum:1,maximum:100}}},cache:{oneOf:[{type:"boolean"},{type:"object",properties:{expiry:{type:"integer"}}}]},video_convert:{type:"object",additionalProperties:!1,properties:{width:{type:"integer",minimum:1,maximum:4096},height:{type:"integer",minimum:1,maximum:4096},preset:{type:"string"},force:{type:"boolean"},title:{type:"string"},extname:{type:"string"},upscale:{type:"boolean"},aspect_mode:{type:"string",enum:["letterbox","pad","crop","preserve","constrain"],default:"letterbox"},audio_sample_rate:{type:"integer",minimum:1,maximum:99999},two_pass:{type:"boolean"},video_bitrate:{type:"integer",minimum:1,maximum:5e3},fps:{type:"integer",minimum:1,maximum:300},keyframe_interval:{type:"integer",minimum:250,maximum:250},audio_bitrate:{type:"integer",minimum:1,maximum:999},audio_channels:{type:"integer",minimum:1,maximum:12},clip_length:{type:"string",pattern:"^([0-1]?\\\\d|2[0-3])(?::([0-5]?\\\\d))?(?::([0-5]?\\\\d))?$"},clip_offset:{type:"string",pattern:"^([0-1]?\\\\d|2[0-3])(?::([0-5]?\\\\d))?(?::([0-5]?\\\\d))?$"},watermark_url:{type:"string"},watermark_top:{type:"integer",minimum:0,maximum:9999},watermark_right:{type:"integer",minimum:0,maximum:9999},watermark_bottom:{type:"integer",minimum:0,maximum:9999},watermark_left:{type:"integer",minimum:0,maximum:9999},frame_count:{type:"integer",minimum:1,maximum:1,default:1},filename:{type:"string"},location:{$ref:"locationsDef"},path:{type:"string"},container:{type:"string"},access:{type:"string",enum:["public","private"],default:"public"}}},store:{oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{filename:{type:"string"},location:{$ref:"locationsDef"},path:{type:"string"},container:{type:"string"},region:{$ref:"regionsDef"},access:{type:"string",enum:["public","private"],default:"private"},base64decode:{type:"boolean"},workflows:{$ref:"workflowsDef"}}}]},watermark:{type:"object",properties:{file:{type:"string"},size:{type:"number",minimum:0,maximum:500},position:{$ref:"positionDef"}},required:["file"],additionalProperties:!1},partial_blur:{type:"object",properties:{objects:{$ref:"objectsDef"},amount:{type:"number",minimum:0,maximum:20},blur:{type:"number",minimum:0,maximum:20},type:{type:"string",enum:["rect","oval"]}},required:["objects"]},partial_pixelate:{type:"object",properties:{objects:{$ref:"objectsDef"},amount:{type:"number",minimum:2,maximum:100},blur:{type:"number",minimum:0,maximum:20},type:{type:"string",enum:["rect","oval"]}},required:["objects"]},security:{type:"object",additionalProperties:!1,properties:{policy:{type:"string"},signature:{type:"string"}},required:["policy","signature"]},pdfinfo:{oneOf:[{type:"boolean"},{type:"object",properties:{colorinfo:{type:"boolean"}}}]},pdfconvert:{type:"object",additionalProperties:!1,properties:{pageorientation:{type:"string",enum:["portrait","landscape"]},pageformat:{$ref:"pageFormatDef"},pages:{$ref:"pageRangeDef"}},anyOf:[{required:["pageorientation"]},{required:["pageformat"]},{required:["pages"]}]},fallback:{type:"object",additionalProperties:!1,properties:{handle:{type:"string"},cache:{type:"integer",minimum:1,maximum:31536e3}},required:["handle"]},zip:{type:"string"},minify_css:{type:"object",additionalProperties:!1,properties:{gzip:{type:"boolean"},level:{type:"number",enum:[1,2]}}},minify_js:{type:"object",additionalProperties:!1,properties:{gzip:{type:"boolean"},use_babel_polyfill:{type:"boolean"},keep_fn_name:{type:"boolean"},keep_class_name:{type:"boolean"},mangle:{type:"boolean"},merge_vars:{type:"boolean"},remove_console:{type:"boolean"},remove_undefined:{type:"boolean"},targets:{type:"string"}}}}},k=n(15),w={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack",description:"Filestack common definitions",type:"object",additionalProperties:!1,definitions:{workflowsDef:{id:"/workflowsDef",type:"array",additionalItems:!1,minItems:1,maxItems:20,items:[{oneOf:[{type:"string"},{type:"object",additionalProperties:!1,properties:{id:{type:"string"}}}]}]},securityCallDef:{id:"/securityCallDef",oneOf:[{additionalProperties:!1,type:"string",enum:["pick","read","stat","write","writeUrl","store","convert","remove","exif","runWorkflow"]},{type:"array",additionalProperties:!1,items:[{minItems:1,maxItems:10,type:"string",additionalProperties:!1,enum:["pick","read","stat","write","writeUrl","store","convert","remove","exif","runWorkflow"]}]}]},regionsDef:{id:"/regionsDef",type:"string",pattern:"^[a-zA-Z]{2}-[a-zA-z]{1,}-[1-9]$",errorMessage:"AWS Region Param is in invalid format"},locationsDef:{id:"/locationsDef",type:"string",enum:["s3","S3","rackspace","gcs","azure","dropbox"]},colorDef:{id:"colorDef",oneOf:[{type:"string",pattern:"^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"},{type:"string",enum:["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fractal","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray0","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","gray10","gray11","gray12","gray13","gray14","gray15","gray16","gray17","gray18","gray19","gray20","gray21","gray22","gray23","gray24","gray25","gray26","gray27","gray28","gray29","gray30","gray31","gray32","gray33","gray34","gray35","gray36","gray37","gray38","gray39","gray40","gray41","gray42","gray43","gray44","gray45","gray46","gray47","gray48","gray49","gray50","gray51","gray52","gray53","gray54","gray55","gray56","gray57","gray58","gray59","gray60","gray61","gray62","gray63","gray64","gray65","gray66","gray67","gray68","gray69","gray70","gray71","gray72","gray73","gray74","gray75","gray76","gray77","gray78","gray79","gray80","gray81","gray82","gray83","gray84","gray85","gray86","gray87","gray88","gray89","gray90","gray91","gray92","gray93","gray94","gray95","gray96","gray97","gray98","gray99","gray100","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","none","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","transparent"]}]},pageFormatDef:{id:"/pageFormatDef",type:"string",enum:["a2","a3","a4","a5","b4","b5","letter","legal","tabloid"]},pageRangeDef:{id:"/pageRangeDef",type:"array",uniqueItems:!0,items:[{oneOf:[{type:"integer",minimum:1},{type:"string",pattern:"^(\\\\d+(?:-\\\\d+)?)$|^(-\\\\d+)$|^(\\\\d+-)$",errorMessage:\'Param should be provided in one of the following formats: "1,2,3,5", "1-3", "1-", "-2" \'}]}]},facesDef:{id:"/facesDef",oneOf:[{type:"string",enum:["all"]},{type:"integer",minimum:1,maximum:1e3},{type:"array",uniqueItems:!0,items:[{type:"integer",minimum:1,maximum:1e3}]}]},objectsDef:{id:"/objectsDef",type:"array",minItems:1,maxItems:50,items:[{type:"array",additionalItems:!1,minItems:4,items:[{type:"integer",minimum:0,maximum:1e4},{type:"integer",minimum:0,maximum:1e4},{type:"integer",minimum:1,maximum:1e4},{type:"integer",minimum:1,maximum:1e4}]}]},positionDef:{id:"/positionDef",default:["middle","center"],oneOf:[{type:"string",enum:["top","middle","bottom","left","center","right","faces"]},{type:"array",uniqueItems:!0,additionalItems:!1,minItems:2,maxItems:2,default:["middle","center"],items:[{type:"string",enum:["top","middle","bottom"]},{type:"string",enum:["left","center","right"]}]}]}}},_=new k.Validator;k.Validator.prototype.customFormats.callback=function(e){return"function"==typeof e},k.Validator.prototype.customFormats.HTMLContainer=function(e){return"string"==typeof e||e.toString&&e.toString().indexOf("HTML")>-1};var j=function(e){return function(t){return _.addSchema(w),_.validate(t,e)}},O={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Store",description:"Filestack Store Options",type:"object",additionalProperties:!1,properties:{filename:{oneOf:[{type:"string"},{format:"callback"}]},location:{$ref:"locationsDef"},path:{type:"string"},container:{type:"string"},region:{$ref:"regionsDef"},access:{type:"string",enum:["public","private"],default:"private"},base64decode:{type:"boolean"},workflows:{$ref:"workflowsDef"},disableStorageKey:{type:"boolean"},tags:{type:"object",additionalProperties:{type:"string"}},sanitizer:{oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{exclude:{type:"array",items:[{type:"string"}]},replacement:{type:"string"}}}]}}},S={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Preview",description:"Filestack Preview Options",type:"object",additionalProperties:!1,properties:{id:{type:"string"},css:{type:"string"}}},E={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Upload",description:"Filestack Upload Options",type:"object",additionalProperties:!1,properties:{partSize:{type:"integer",minimum:5242880},concurrency:{type:"integer",minimum:1,maximum:20},progressInterval:{type:"integer",minimum:1},retry:{type:"integer",minimum:0,maximum:20},retryFactor:{type:"integer"},retryMaxTime:{type:"integer"},timeout:{type:"integer",minimum:1,maximum:36e5},intelligent:{oneOf:[{type:"boolean"},{type:"string",enum:["fallback"]}]},intelligentChunkSize:{type:"integer"},onProgress:{format:"callback"},onRetry:{format:"callback"},disableIntegrityCheck:{type:"boolean"},tags:{type:"object",maxItems:10,additionalProperties:{type:"string",maxlength:256}}}},C={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Picker",description:"Filestack Picker Options",type:"object",additionalProperties:!1,properties:{allowManualRetry:{type:"boolean"},accept:{additionalProperties:!1,oneOf:[{type:"string"},{type:"array",minItems:1,items:[{type:"string"}]}]},fromSources:{type:"array",items:[{type:["string","object"],additionalProperties:!1,enum:["local_file_system","url","imagesearch","facebook","instagram","googledrive","unsplash","dropbox","webcam","video","audio","box","github","gmail","picasa","onedrive","onedriveforbusiness","clouddrive","googlephotos","customsource","tint"]}]},tags:{type:"object",additionalProperties:{type:"string"}},container:{format:"HTMLContainer"},cleanupImageExif:{oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{keepOrientation:{type:"boolean"},keepICCandAPP:{type:"boolean"}}}]},displayMode:{type:"string",enum:["inline","overlay","dropPane"]},concurrency:{type:"integer",minimum:1,maximum:20},supportEmail:{type:"string"},customSourceContainer:{type:"string"},customSourcePath:{type:"string"},customSourceName:{type:"string"},disableStorageKey:{type:"boolean"},disableTransformer:{type:"boolean"},disableThumbnails:{type:"boolean"},exposeOriginalFile:{type:"boolean"},globalDropZone:{type:"boolean"},hideModalWhenUploading:{type:"boolean"},imageDim:{type:"array",minItems:2,maxItems:2,items:[{type:"integer",minimum:1}]},imageMax:{type:"array",minItems:2,maxItems:2,items:[{type:"integer",minimum:1}]},imageMin:{type:"array",minItems:2,maxItems:2,items:[{type:"integer",minimum:1}]},imageMinMaxBlock:{type:"boolean",default:!1},lang:{type:"string",enum:["ca","da","de","en","es","fr","he","it","ja","ko","nl","no","pl","pt","sv","ru","vi","zh","tr","ar"]},minFiles:{type:"integer",minimum:1,maximum:1e6},maxFiles:{type:"integer",minimum:1,maximum:1e6},maxSize:{type:"integer",minimum:1},modalSize:{type:"array",minItems:2,maxItems:2,items:[{type:"integer",minimum:1,maximum:1e6}]},rootId:{type:"string"},startUploadingWhenMaxFilesReached:{type:"boolean"},uploadInBackground:{type:"boolean"},videoResolution:{type:"string"},onCancel:{format:"callback"},onClose:{format:"callback"},onOpen:{format:"callback"},onFileSelected:{format:"callback"},onFileUploadStarted:{format:"callback"},onFileUploadFinished:{format:"callback"},onFileUploadFailed:{format:"callback"},onFileUploadProgress:{format:"callback"},onUploadStarted:{format:"callback"},onUploadDone:{format:"callback"},storeTo:{additionalProperties:!1,type:"object",properties:{filename:{type:"string"},location:{$ref:"locationsDef"},container:{type:"string"},path:{type:"string"},region:{type:"string"},access:{type:"string",enum:["public","private"]},workflows:{$ref:"workflowsDef"}}},viewType:{type:"string",enum:["grid","list"]},transformations:{type:"object",additionalProperties:!1,properties:{circle:{type:"boolean"},rotate:{type:"boolean"},force:{type:"boolean"},crop:{oneOf:[{type:"boolean"},{type:"object",additionalProperties:!1,properties:{force:{type:"boolean"},aspectRatio:{type:"number"}}}]}}},customText:{type:"object",patternProperties:{".*":{type:"string"}}},dropPane:{type:"object",properties:{cropFiles:{type:"boolean"},customText:{type:"string"},disableClick:{type:"boolean"},overlay:{type:"boolean"},showIcon:{type:"boolean"},showProgress:{type:"boolean"},onDragEnter:{format:"callback"},onProgress:{format:"callback"},onDragLeave:{format:"callback"},onDragOver:{format:"callback"},onDrop:{format:"callback"},onSuccess:{format:"callback"},onError:{format:"callback"},onClick:{format:"callback"}}},errorsTimeout:{type:"number",minimum:0},customAuthText:{type:"object",patternProperties:{".*":{additionalProperties:!1,type:"object",required:["top","bottom"],properties:{top:{type:"string"},bottom:{type:"string"}}}}},uploadConfig:{type:"object",additionalProperties:!1,properties:E.properties},useSentryBreadcrumbs:{type:"boolean"}}},T={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Metadata",description:"Filestack Metadata Options",type:"object",additionalProperties:!1,properties:{size:{type:"boolean"},mimetype:{type:"boolean"},filename:{type:"boolean"},width:{type:"boolean"},metadata:{type:"boolean"},height:{type:"boolean"},uploaded:{type:"boolean"},writeable:{type:"boolean"},cloud:{type:"boolean"},sourceUrl:{type:"boolean"},md5:{type:"boolean"},sha1:{type:"boolean"},sha224:{type:"boolean"},sha256:{type:"boolean"},sha384:{type:"boolean"},sha512:{type:"boolean"},location:{type:"boolean"},path:{type:"boolean"},container:{type:"boolean"},exif:{type:"boolean"}}},A={$schema:"http://json-schema.org/draft-07/schema#",title:"Filestack Retrieve",description:"Filestack Retrieve Options",type:"object",additionalProperties:!1,properties:{metadata:{type:"boolean"},head:{type:"boolean"},dl:{type:"boolean"},cache:{type:"boolean"},extension:{type:"string"}}},P=n(5),F=n(13),I=n(3),z=n.n(I),N=z()("fs:request:dispatch"),M=function(){function e(e){this.adapter=e}return e.prototype.request=function(e){var t=this;return e.headers=e.headers||{},N("Dispatching request %O",e),this.adapter.request(e).catch((function(e){return N(\'Request error "%s": %O\',e,e.response),t.retry(e)}))},e.prototype.retry=function(e){var t=this,n=e.config;if(!Object(F.a)(e))return N("[Retry] Request error is not retriable. Exiting"),Promise.reject(e);if(!n.retry)return N("[Retry] Retry config not found. Exiting"),Promise.reject(e);var i=n.retry,r=n.runtime&&n.runtime.retryCount?n.runtime.retryCount:0;if(i.retry&&i.retry<=r)return N("[Retry] Retry attempts reached %d. Exiting",r),Promise.reject(e);var o=Math.max(Math.min(i.retryMaxTime,1e3*Math.pow(i.retryFactor,r)),1);return n.runtime=Object(l.a)(Object(l.a)({},n.runtime),{retryCount:r+1}),N("[Retry] Retrying request to "+n.url+", count "+r+" of "+i.retry+" - Delay: "+o),new Promise((function(e){setTimeout((function(){return e(t.request(n))}),o)}))},e}(),R=n(40).XhrAdapter,q=function(){function e(e){this.defaults=e,this.dispatcher=new M(new R)}return e.getInstance=function(){return e.instance||(e.instance=new e),e.instance},e.prototype.dispatch=function(e){return e.method||(e.method=P.a.GET),this.dispatcher.request(Object.assign({},this.defaults,e))},e.dispatch=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{url:t}))},e.get=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{method:P.a.GET,url:t}))},e.head=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{method:P.a.HEAD,url:t}))},e.options=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{method:P.a.OPTIONS,url:t}))},e.purge=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{method:P.a.PURGE,url:t}))},e.delete=function(t,n){return e.getInstance().dispatch(Object.assign({},n||{},{method:P.a.DELETE,url:t}))},e.post=function(t,n,i){return e.getInstance().dispatch(Object.assign({},i||{},{method:P.a.POST,url:t,data:n}))},e.put=function(t,n,i){return e.getInstance().dispatch(Object.assign({},i||{},{method:P.a.PUT,url:t,data:n}))},e.path=function(t,n,i){return e.getInstance().dispatch(Object.assign({},i||{},{method:P.a.PATH,url:t,data:n}))},e}(),$=n(2),U=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Object(l.c)(t,e),t.prototype.cancel=function(e){this.emit("cancel",e),this.removeAllListeners()},t}(u.EventEmitter),D=function(e,t,n,i){if(!t||"string"!=typeof t)throw new g("A valid Filestack handle is required for remove");if(!(e.policy&&e.signature||i&&i.policy&&i.signature))throw new g("Security policy and signature are required for remove");var r=e.urls.fileApiUrl+"/"+t,o={key:e.apikey,policy:i&&i.policy||e.policy,signature:i&&i.signature||e.signature};return n&&(o.skip_storage=!0),q.delete(r,{filestackHeaders:!1,params:Object(b.removeEmpty)(o)})};function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var B,V,H,Z,J,W,Q,Y,G,K,X,ee,te,ne,ie,re,oe=z()("fs:filelink");!function(e){e.left="left",e.right="right",e.center="center",e.bottom="bottom",e.top="top",e.faces="faces",e.middle="middle"}(B||(B={})),function(e){e.clip="clip",e.crop="crop",e.scale="scale",e.max="max"}(V||(V={})),function(e){e.linear="linear",e.gaussian="gaussian"}(H||(H={})),function(e){e.oval="oval",e.rect="rect"}(Z||(Z={})),function(e){e.none="none",e.low="low",e.medium="medium",e.high="high"}(J||(J={})),function(e){e.artwork="artwork",e.photo="photo"}(W||(W={})),function(e){e.RGB="RGB",e.CMYK="CMYK",e.Input="Input"}(Q||(Q={})),function(e){e.thumb="thumb",e.crop="crop",e.fill="fill"}(Y||(Y={})),function(e){e.h264="h264",e.h264_hi="h264.hi",e.webm="webm",e["webm-hi"]="webm.hi",e.ogg="ogg",e["ogg-hi"]="ogg.hi",e["hls-variant"]="hls.variant",e.mp3="mp3",e.oga="oga",e.m4a="m4a",e.aac="aac",e.hls="hls.variant.audio"}(G||(G={})),function(e){e.desktop="desktop",e.mobile="mobile"}(K||(K={})),function(e){e.all="all",e.window="window"}(X||(X={})),function(e){e.portrait="portrait",e.landscape="landscape"}(ee||(ee={})),function(e){e.s3="s3",e.azure="azure",e.gcs="gcs",e.rackspace="rackspace",e.dropbox="dropbox"}(te||(te={})),function(e){e.private="private",e.public="public"}(ne||(ne={})),function(e){e.preserve="preserve",e.constrain="constrain",e.letterbox="letterbox",e.pad="pad",e.crop="crop"}(ie||(ie={})),function(e){e.auto="auto",e.vivid="vivid",e.beautify="beautify",e.beautifyPlus="beautify_plus",e.fixDark="fix_dark",e.fixNoise="fix_noise",e.fixTint="fix_tint",e.outdor="outdoor",e.fireworks="fireworks"}(re||(re={}));var ae=/^[\\w\\-]{20}|wf:\\/\\/[\\w\\-\\/]{106}$/,se=function(){function e(e,t){this.transforms=[],this.b64=!1,this.useValidator=!0,this.arrayToObject=function(e,t,n){return void 0===e&&(e=[]),e.reduce((function(e,i){return e[i[t]]=i[n],e}),{})},this.apikey=t,this.setSource(e)}return e.prototype.setBase64=function(e){return this.b64=e,this},e.prototype.setUseValidator=function(e){return this.useValidator=e,this},e.prototype.setCname=function(e){return this.cname=e,this},e.prototype.setCustomDomain=function(e){return this.customDomain=e,this},e.prototype.setSource=function(e){this.source=e;var t=this.isSourceExternal();if(oe("Source "+e+" - isExternal? "+t),t&&!this.apikey)throw new g("External sources requires apikey to handle transforms");if(!t&&"string"==typeof this.source&&!ae.test(this.source)&&-1===this.source.indexOf("filestackcontent"))throw new g("Invalid filestack source provided")},e.prototype.getValidationSchema=function(){return x},e.prototype.getTransformations=function(){return this.useValidator&&this.validateTasks(this.transforms),this.transforms},e.prototype.toString=function(){var e=[];e.push(this.getCdnHost()),this.useValidator&&this.validateTasks(this.transforms),this.apikey&&e.push(this.apikey);var t=this.generateTransformString(),n=this.source;return this.b64?(this.transforms.length>0&&(t="b64/"+Object(b.b64)(JSON.stringify(this.transforms),!0)),Array.isArray(n)&&(n=this.arrayToString(n)),n="b64://"+Object(b.b64)(n,!0)):n=Array.isArray(n)?this.arrayToString(n):this.escapeValue(n),t.length&&e.push(t),e.push(n),e.join("/")},e.prototype.addTask=function(e,t){if(z()("Add task  "+e+" with params %O",t),"cache"!==e&&"boolean"==typeof t){if(!t)return this;t=void 0}else"object"!==L(t)||Object.keys(t).length||(t=void 0);return this.transforms.push({name:e,params:t}),this},e.prototype.getTasks=function(){return this.transforms},e.prototype.reset=function(){return this.transforms=[],this},e.prototype.autoImage=function(){return this.addTask("auto_image",!0)},e.prototype.flip=function(){return this.addTask("flip",!0)},e.prototype.flop=function(){return this.addTask("flop",!0)},e.prototype.enhance=function(e){return this.addTask("enhance",e||!0)},e.prototype.redeye=function(){return this.addTask("redeye",!0)},e.prototype.monochrome=function(){return this.addTask("monochrome",!0)},e.prototype.compress=function(e){return this.addTask("compress",e||!0)},e.prototype.negative=function(){return this.addTask("negative",!0)},e.prototype.tags=function(){return this.addTask("tags",!0)},e.prototype.sfw=function(){return this.addTask("sfw",!0)},e.prototype.animate=function(e){return this.addTask("animate",e)},e.prototype.store=function(e){return this.addTask("store",e)},e.prototype.cache=function(e){return this.addTask("cache",e)},e.prototype.resize=function(e){return this.addTask("resize",e)},e.prototype.crop=function(e){return this.addTask("crop",e)},e.prototype.rotate=function(e){return this.addTask("rotate",e)},e.prototype.detectFaces=function(e){return this.addTask("detect_faces",e)},e.prototype.cropFaces=function(e){return this.addTask("crop_faces",e)},e.prototype.pixelateFaces=function(e){return this.addTask("pixelate_faces",e)},e.prototype.blurFaces=function(e){return this.addTask("blur_faces",e)},e.prototype.roundedCorners=function(e){return this.addTask("rounded_corners",e)},e.prototype.polaroid=function(e){return this.addTask("polaroid",e)},e.prototype.vignette=function(e){return this.addTask("vignette",e)},e.prototype.tornEdges=function(e){return this.addTask("torn_edges",e)},e.prototype.shadow=function(e){return this.addTask("shadow",e)},e.prototype.circle=function(e){return this.addTask("circle",e)},e.prototype.border=function(e){return this.addTask("border",e)},e.prototype.sharpen=function(e){return this.addTask("sharpen",e)},e.prototype.blur=function(e){return this.addTask("blur",e)},e.prototype.blackwhite=function(e){return this.addTask("blackwhite",e)},e.prototype.sepia=function(e){return this.addTask("sepia",e)},e.prototype.pixelate=function(e){return this.addTask("pixelate",e)},e.prototype.oilPaint=function(e){return this.addTask("oil_paint",e)},e.prototype.modulate=function(e){return this.addTask("modulate",e)},e.prototype.partialPixelate=function(e){return this.addTask("partial_pixelate",e)},e.prototype.partialBlur=function(e){return this.addTask("partial_blur",e)},e.prototype.collage=function(e){return this.addTask("collage",e)},e.prototype.upscale=function(e){return this.addTask("upscale",e)},e.prototype.ascii=function(e){return this.addTask("ascii",e)},e.prototype.quality=function(e){return this.addTask("quality",e)},e.prototype.security=function(e){return this.addTask("security",e)},e.prototype.output=function(e){return this.addTask("output",e)},e.prototype.videoConvert=function(e){return this.addTask("video_convert",e)},e.prototype.URLScreenshot=function(e){return this.addTask("urlscreenshot",e)},e.prototype.PDFInfo=function(e){return this.addTask("pdfinfo",e)},e.prototype.PDFConvert=function(e){return this.addTask("pdfconvert",e)},e.prototype.fallback=function(e){return this.addTask("fallback",e)},e.prototype.zip=function(){return this.addTask("zip",!0)},e.prototype.minifyCss=function(e){return this.addTask("minify_css",e)},e.prototype.minifyJs=function(e){return this.addTask("minify_js",e)},e.prototype.isSourceExternal=function(){if(!this.source)throw new g("Source not Set");var e=Array.isArray(this.source)?this.source:[this.source];for(var t in e)if(e.hasOwnProperty(t)&&(0===e[t].indexOf("src:")||0===e[t].indexOf("http")&&-1===e[t].indexOf("filestackcontent")))return!0;return!1},e.prototype.validateTasks=function(t){var n=e.validator(this.arrayToObject(t,"name","params"));if(n.errors.length)throw new g("Params validation error",n.errors,y.VALIDATION)},e.prototype.getCdnHost=function(){var e=Object.assign({},v.urls);return this.customDomain&&(e.cdnUrl=this.customDomain),(e=Object(b.resolveHost)(e,this.cname)).cdnUrl},e.prototype.generateTransformString=function(){var e=this,t=[];return this.transforms.forEach((function(n){t.push(e.optionToString(n.name,n.params))})),t.join("/")},e.prototype.optionToString=function(e,t){var n=this,i=[];return void 0===t?e:"boolean"==typeof t?t||"cache"!==e?e:"cache=false":(Object.keys(t).forEach((function(e){Array.isArray(t[e])?i.push(e+":"+n.arrayToString(t[e])):i.push(e+":"+n.escapeValue(t[e]))})),e+"="+i.join(","))},e.prototype.escapeValue=function(e){return"string"!=typeof e?e:e.indexOf("/")>-1||e.indexOf(",")>-1?\'"\'+e+\'"\':e},e.prototype.arrayToString=function(e){var t=this;return"["+e.map((function(e){return Array.isArray(e)?t.arrayToString(e):t.escapeValue(e)}))+"]"},e.validator=j(x),e}();function ce(e){return(ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var pe,le,ue,fe,de,me,he,ye,ve,ge,be,xe,ke,we,_e,je;!function(e){e.left="left",e.right="right",e.center="center",e.bottom="bottom",e.top="top"}(pe||(pe={})),function(e){e.left="left",e.right="right",e.center="center",e.bottom="bottom",e.top="top",e.faces="faces"}(le||(le={})),function(e){e.clip="clip",e.crop="crop",e.scale="scale",e.max="max"}(ue||(ue={})),function(e){e.linear="linear",e.gaussian="gaussian"}(fe||(fe={})),function(e){e.oval="oval",e.rect="rect"}(de||(de={})),function(e){e.none="none",e.low="low",e.medium="medium",e.high="high"}(me||(me={})),function(e){e.artwork="artwork",e.photo="photo"}(he||(he={})),function(e){e.RGB="RGB",e.CMYK="CMYK",e.Input="Input"}(ye||(ye={})),function(e){e.thumb="thumb",e.crop="crop",e.fill="fill"}(ve||(ve={})),function(e){e.h264="h264",e.h264_hi="h264.hi",e.webm="webm",e["webm-hi"]="webm.hi",e.ogg="ogg",e["ogg-hi"]="ogg.hi",e["hls-variant"]="hls.variant",e.mp3="mp3",e.oga="oga",e.m4a="m4a",e.aac="aac",e.hls="hls.variant.audio"}(ge||(ge={})),function(e){e.desktop="desktop",e.mobile="mobile"}(be||(be={})),function(e){e.all="all",e.window="window"}(xe||(xe={})),function(e){e.portrait="portrait",e.landscape="landscape"}(ke||(ke={})),function(e){e.s3="s3",e.azure="azure",e.gcs="gcs",e.rackspace="rackspace",e.dropbox="dropbox"}(we||(we={})),function(e){e.private="private",e.public="public"}(_e||(_e={})),function(e){e.preserve="preserve",e.constrain="constrain",e.letterbox="letterbox",e.pad="pad",e.crop="crop"}(je||(je={}));var Oe=function(e,t,n,i){void 0===n&&(n={}),void 0===i&&(i=!1),n=function e(t){for(var n={},i=Object.keys(t),r=0;r<i.length;r++){var o=i[r].split(/(?=[A-Z])/).join("_").toLowerCase();"object"!==ce(t[i[r]])||Array.isArray(t[i[r]])?n[o]=t[i[r]]:n[o]=e(t[i[r]])}return n}(n),e.policy&&e.signature&&(n.security={policy:e.policy,signature:e.signature});var r=new se(t,e.apikey);return r.setCname(e.cname),r.setBase64(i),Object.keys(n).forEach((function(e){("boolean"!=typeof n[e]||n[e]||"cache"===e)&&r.addTask(e,n[e])})),r.toString()};function Se(e){return(Se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Ee,Ce=function(){function e(e,t){this._file=e,this._sanitizeOptions=t,this._file.name=Object(b.sanitizeName)(this._file.name,this._sanitizeOptions)}return Object.defineProperty(e.prototype,"name",{get:function(){return this._file.name},set:function(e){this._file.name=Object(b.sanitizeName)(e,this._sanitizeOptions)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filename",{get:function(){return this.name},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customName",{set:function(e){switch(Se(e)){case"string":this.name=e;break;case"function":if("string"!=typeof e(this))throw new Error("Name function must return a string. Current return type is "+Se(e));this.name=e(this)}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this._file.type||"application/octet-stream"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mimetype",{get:function(){return this.type},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this._file.size},enumerable:!0,configurable:!0}),e.prototype.getPartsCount=function(e){return Math.ceil(this._file.size/e)},e.prototype.getPartMetadata=function(e,t){var n=t*e;if(n>this._file.size)throw new Error("Start byte of the part is higher than buffer size");var i=Math.min(n+t,this._file.size);return{partNumber:e,startByte:n,endByte:i,size:i-n}},e.prototype.getPartByMetadata=function(e,t){return void 0===t&&(t=!0),Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,this._file.slice(e.startByte,e.endByte)];case 1:return n=i.sent(),[2,Promise.resolve(Object(l.a)(Object(l.a)({},e),{buffer:n,md5:t?Object(b.md5)(n):void 0}))]}}))}))},e.prototype.getChunkByMetadata=function(e,t,n,i){return void 0===i&&(i=!0),Object(l.b)(this,void 0,void 0,(function(){var r,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:return r=e.startByte+t,o=Math.min(r+n,e.endByte),[4,this._file.slice(r,o)];case 1:return a=s.sent(),[2,Promise.resolve(Object(l.a)(Object(l.a)({},e),{buffer:a,md5:i?Object(b.md5)(a):void 0,size:a.byteLength,startByte:r,endByte:o,offset:t}))]}}))}))},e.prototype.release=function(){this._file.release&&this._file.release()},e.prototype.toJSON=function(){return{name:this.name,status:this.status,type:this.type,size:this.size,url:this.url,handle:this.handle,uploadTags:this.uploadTags}},e}(),Te=n(14),Ae=n.n(Te),Pe=/data:([a-zA-Z]*\\/[a-zA-Z]*);base64,([^\\"]*)/i,Fe=function(e,t,n){return new Promise((function(i,r){var o=new FileReader,a=n.slice(e,t);o.onload=function(){return i(o.result)},o.onerror=r,o.readAsArrayBuffer(a)}))},Ie=function(e,t){var n,i;if(function(e){return e&&e.file&&e.name}(e)&&(n=e.name,e=e.file),function(e){return e instanceof File}(e))i=e,n=e.name;else if(function(e){if("string"!=typeof e)return!1;e.indexOf("base64")>-1&&(e=e.match(Pe).pop());try{return btoa(atob(e))===e}catch(e){return!1}}(e))i=function(e,t){void 0===t&&(t=512);var n="";if(e.indexOf("base64")>-1){var i=e.match(Pe);e=i.pop(),n=i[1]}for(var r=atob(e),o=[],a=0;a<r.length;a+=t){for(var s=r.slice(a,a+t),c=new Array(s.length),p=0;p<s.length;p+=1)c[p]=s.charCodeAt(p);o.push(new Uint8Array(c))}return new Blob(o,{type:n})}(e);else{if(!function(e){return"[object Blob]"===e.toString()}(e))return Promise.reject(new g("Unsupported input file type"));i=e}return function(e){return Object(l.b)(void 0,void 0,void 0,(function(){return Object(l.d)(this,(function(t){return File&&FileReader&&Blob?[2,Promise.resolve({slice:function(t,n){return Fe(t,n,e)},release:function(){e=null}})]:[2,Promise.reject(new g("The File APIs are not fully supported by your browser"))]}))}))}(i).then((function(e){return Object(l.b)(void 0,void 0,void 0,(function(){var r,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return r=i.type,i.type&&0!==i.type.length&&"text/plain"!==i.type?[3,2]:(o=b.getMimetype,[4,e.slice(0,Ae.a.minimumBytes)]);case 1:r=o.apply(void 0,[a.sent(),n]),a.label=2;case 2:return[2,new Ce({name:n,size:i.size,type:r,slice:e.slice,release:e.release},t)]}}))}))}))},ze=n(27),Ne=n.n(ze),Me=z()("fs:upload:abstract"),Re=function(e){function t(t,n){void 0===n&&(n=3);var i=e.call(this)||this;return i.storeOptions=t,i.concurrency=n,i.partSize=6291456,i.intelligentChunkSize=Object(b.isMobile)()?1048576:8388608,i.timeout=3e4,i.uploadMode="default",i.isModeLocked=!1,i.integrityCheck=!0,i.uploadTags=null,i}return Object(l.c)(t,e),t.prototype.setSecurity=function(e){Me("Set security %O",e),this.security=e},t.prototype.setApikey=function(e){Me("Set apikey to "+e),this.apikey=e},t.prototype.setTimeout=function(e){Me("Set request timeout to "+e),this.timeout=e},t.prototype.setRetryConfig=function(e){Me("Set retry config to "+e),this.retryConfig=e},t.prototype.setUrl=function(e){Me("Set upload url to "+e),this.url=e},t.prototype.setUploadTags=function(e){Me("Set tags to %O",e),this.uploadTags=e},t.prototype.setIntegrityCheck=function(e){this.integrityCheck=e},t.prototype.setUploadMode=function(e,t){void 0===t&&(t=!1),!0!==this.isModeLocked?(this.isModeLocked=t,Me("Set upload mode to "+e),this.uploadMode=e):Me("Cannot switch mode to "+e+". Locked! Probably mode is not supported at this apikey")},t.prototype.setPartSize=function(e){if("default"===this.uploadMode){if(Me("Set part size to "+e),e<5242880)throw new g("Minimum part size is 5MB");this.partSize=e}else Me("Cannot set part size because upload mode is other than default. ")},t.prototype.getPartSize=function(){return this.partSize},t.prototype.setIntelligentChunkSize=function(e){if(Me("Set inteligent chunk size to "+e),e<32768)throw new g("Minimum intelligent chunk size is 32768");this.intelligentChunkSize=e},t.prototype.getIntelligentChunkSize=function(){return this.intelligentChunkSize},t.prototype.getUrl=function(){if(!this.url)throw new g("Upload url not set");return this.url},t}(u),qe=n(9),$e=z()("fs:upload:s3"),Ue=function(e){function t(t,n){var i=e.call(this,t,n)||this;return i.payloads={},i.partsQueue=new Ne.a({autoStart:!1,concurrency:i.concurrency}),i.cancelToken=new U,i}return Object(l.c)(t,e),t.prototype.pause=function(){this.partsQueue.pause()},t.prototype.resume=function(){this.partsQueue.isPaused&&this.partsQueue.start()},t.prototype.abort=function(e){this.partsQueue.pause(),this.partsQueue.clear(),this.cancelToken.cancel(e||"Aborted by user")},t.prototype.execute=function(){return Object(l.b)(this,void 0,void 0,(function(){var e,t=this;return Object(l.d)(this,(function(n){return e=Object.keys(this.payloads).map((function(e){return new Promise((function(n){return Object(l.b)(t,void 0,void 0,(function(){var t,i;return Object(l.d)(this,(function(r){switch(r.label){case 0:return r.trys.push([0,5,,6]),[4,this.startRequest(e)];case 1:return r.sent(),[4,this.prepareParts(e)];case 2:return r.sent(),[4,this.startPartsQueue(e)];case 3:return r.sent(),[4,this.completeRequest(e)];case 4:return r.sent(),[3,6];case 5:return t=r.sent(),this.emit("error",t),$e("["+e+"] File upload failed. %O, \\nDetails: %O ",t.message,t.details),[3,6];case 6:return(i=this.getPayloadById(e).file).release(),delete this.payloads[e],n(i),[2]}}))}))}))})),[2,Promise.all(e)]}))}))},t.prototype.addFile=function(e){$e("Add file to queue: \\n %o",e);var t=Object(b.uniqueId)(15)+"_"+Object(b.uniqueTime)();return e.status="Initialized",this.payloads[t]={file:e,parts:[]},t},t.prototype.getUploadUrl=function(e){var t=this.getDefaultFields(e,["location_url"]).location_url;return 0===t.indexOf("http")?t:"https://"+t},t.prototype.getStoreOptions=function(e){var t=Object(l.a)({location:"s3"},this.storeOptions);if(this.storeOptions.disableStorageKey){var n=this.getPayloadById(e);t.path&&"/"!==t.path.substr(-1)&&(t.path=t.path+"/"),t.path=""+(t.path?t.path:"/")+n.file.name,delete t.disableStorageKey}return t},t.prototype.getDefaultFields=function(e,t,n){void 0===n&&(n=!1);var i=this.getPayloadById(e),r=Object(l.a)(Object(l.a)({},this.security),{apikey:this.apikey,uri:i.uri,location_url:i.location_url,upload_id:i.upload_id,region:i.region});return("intelligent"===this.uploadMode||"fallback"===this.uploadMode&&n)&&(r.fii=!0),Object(l.a)(Object(l.a)({},Object(b.filterObject)(r,t)),{store:this.getStoreOptions(e)})},t.prototype.getDefaultHeaders=function(e){var t={},n=this.getPayloadById(e);return n.location_region&&(t["Filestack-Upload-Region"]=n.location_region),t},t.prototype.getPayloadById=function(e){return this.payloads[e]},t.prototype.prepareParts=function(e){var t=this.getPayloadById(e).file;["intelligent","fallback"].indexOf(this.uploadMode)>-1&&(this.partSize=8388608);for(var n=t.getPartsCount(this.partSize),i=[],r=0;r<n;r++)i[r]=Object(l.a)(Object(l.a)({},t.getPartMetadata(r,this.partSize)),{offset:0});return this.payloads[e].parts=i,Promise.resolve()},t.prototype.startRequest=function(e){var t=this,n=this.getPayloadById(e);return 0===n.file.size?(this.setPayloadStatus(e,"Failed"),Promise.reject(new g(\'Invalid file "\'+n.file.name+\'" size - 0\',{},y.VALIDATION))):($e("["+e+"] Make start request"),q.post(this.getUrl()+"/multipart/start",Object(l.a)({filename:n.file.name,mimetype:n.file.type,size:n.file.size},this.getDefaultFields(e,["apikey","policy","signature","fii"],!0)),{timeout:this.timeout,cancelToken:this.cancelToken,headers:this.getDefaultHeaders(e),retry:this.retryConfig}).then((function(n){var i=n.data;return i&&i.location_url&&i.region&&i.upload_id&&i.uri?($e("["+e+"] Assign payload data: \\n%O\\n",i),t.updatePayload(e,i),["intelligent","fallback"].indexOf(t.uploadMode)>-1&&(!i.upload_type||"intelligent_ingestion"!==i.upload_type)&&($e("["+e+"] Intelligent Ingestion is not enabled on account, switch back to regular upload and lock mode change"),t.setUploadMode("default",!0)),i):($e("["+e+"] Incorrect start response: \\n%O\\n",i),t.setPayloadStatus(e,"Failed"),Promise.reject(new g("Incorrect start response",i,y.REQUEST)))})).catch((function(n){return $e("["+e+"] Start request error %O",n),t.setPayloadStatus(e,"Failed"),Promise.reject(new g("Cannot upload file. Start request failed",t.getErrorDetails(n),y.REQUEST))})))},t.prototype.startPartsQueue=function(e){return Object(l.b)(this,void 0,void 0,(function(){var t,n,i,r=this;return Object(l.d)(this,(function(o){return t=this.getPayloadById(e),n=t.parts,i=n.length,$e("["+e+"] Create uploading queue from file. parts count - %d",i),[2,new Promise((function(t,i){return Object(l.b)(r,void 0,void 0,(function(){var r,o=this;return Object(l.d)(this,(function(a){switch(a.label){case 0:return n.forEach((function(t){return o.partsQueue.add((function(){return o.startPart(e,t.partNumber)})).catch((function(t){return o.setPayloadStatus(e,"Failed"),$e("["+e+"] Failed to upload part %s",t.message),o.partsQueue.pause(),o.partsQueue.clear(),i(t)}))})),$e("["+e+"] All tasks for %s enqueued. Start processing main upload queue",e),this.partsQueue.start(),r=t,[4,this.partsQueue.onIdle()];case 1:return r.apply(void 0,[a.sent()]),[2]}}))}))}))]}))}))},t.prototype.startPart=function(e,t){return $e("["+e+"] Start processing part "+t+" with mode "+this.uploadMode),this.getPayloadById(e).file.status="Progress",("intelligent"!==this.uploadMode?this.uploadRegular:this.uploadIntelligent).apply(this,[e,t])},t.prototype.getS3PartMetadata=function(e,t,n){var i=this,r=this.getUploadUrl(e);$e("["+e+"] Get data for part "+t.partNumber+", url "+r+", Md5: "+t.md5+", Size: "+t.size);var o=Object(l.a)(Object(l.a)({},this.getDefaultFields(e,["apikey","uri","region","signature","policy","upload_id","fii"])),{part:t.partNumber+1,size:t.size,offset:n});return this.integrityCheck&&t.md5&&(o.md5=t.md5),q.post(r+"/multipart/upload",o,{headers:this.getDefaultHeaders(e),cancelToken:this.cancelToken,timeout:this.timeout,retry:this.retryConfig}).catch((function(t){return i.setPayloadStatus(e,"Failed"),Promise.reject(new g("Cannot get part metadata",i.getErrorDetails(t),y.REQUEST))}))},t.prototype.uploadRegular=function(e,t){return Object(l.b)(this,void 0,void 0,(function(){var n,i,r,o,a,s,c=this;return Object(l.d)(this,(function(p){switch(p.label){case 0:return n=this.getPayloadById(e),i=n.parts[t],[4,n.file.getPartByMetadata(i,this.integrityCheck)];case 1:return r=p.sent(),[4,this.getS3PartMetadata(e,r)];case 2:return o=p.sent(),a=o.data,s=o.headers,$e("["+e+"] Received part "+t+" info body: \\n%O\\n headers: \\n%O\\n",a,s),[2,q.put(a.url,r.buffer,{cancelToken:this.cancelToken,timeout:this.timeout,headers:a.headers,filestackHeaders:!1,onProgress:function(n){return c.onProgressUpdate(e,t,n.loaded)},retry:this.retryConfig&&"fallback"!==this.uploadMode?this.retryConfig:void 0}).then((function(n){if(!n.headers.etag)throw r=null,new g("Cannot upload file, check S3 bucket settings","Etag header is not exposed in CORS settings",y.REQUEST);return c.setPartETag(e,t,n.headers.etag),$e("["+e+"] S3 Upload response headers for "+t+": \\n%O\\n",n.headers),c.onProgressUpdate(e,t,r.size),r=null,n})).catch((function(n){var i=n&&n.response?n.response:null;if(i&&403===i.status&&i.data&&i.data.Error&&i.data.Error.code){var o=i.data.Error.code;switch(Array.isArray(o)&&(o=o.pop()),o){case"RequestTimeTooSkewed":return c.startPart(e,t);default:return Promise.reject(new g("Cannot upload file",i.data.Error,y.REQUEST))}}return r=null,n instanceof g?Promise.reject(n):(c.onProgressUpdate(e,t,0),"fallback"===c.uploadMode&&!c.isModeLocked||"intelligent"===c.uploadMode?($e("["+e+"] Regular upload failed. Switching to intelligent ingestion mode"),c.setUploadMode("intelligent"),c.startPart(e,t)):Promise.reject(new g("Cannot upload file part",c.getErrorDetails(n),y.REQUEST)))}))]}}))}))},t.prototype.uploadIntelligent=function(e,t){return Object(l.b)(this,void 0,void 0,(function(){var n=this;return Object(l.d)(this,(function(i){return[2,this.uploadNextChunk(e,t).then((function(){return n.commitPart(e,t)}))]}))}))},t.prototype.uploadNextChunk=function(e,t,n){return void 0===n&&(n=this.intelligentChunkSize),Object(l.b)(this,void 0,void 0,(function(){var i,r,o,a,s=this;return Object(l.d)(this,(function(c){switch(c.label){case 0:return i=this.getPayloadById(e),r=i.parts[t],n=Math.min(n,r.size-r.offset),[4,i.file.getChunkByMetadata(r,r.offset,n,this.integrityCheck)];case 1:return o=c.sent(),$e("["+e+"] PartNum: "+t+", PartSize: "+r.size+", StartByte: "+r.startByte+", Offset: "+r.offset+", ChunkSize: "+o.size+",\\n       Left: "+(r.size-r.offset-o.size)),[4,this.getS3PartMetadata(e,o,r.offset).catch((function(i){return $e("["+e+"] Getting chunk data for ii failed %O, Chunk size: "+n+", offset "+r.offset+", part "+t,i),Promise.reject(i)}))];case 2:return a=c.sent().data,[2,q.put(a.url,o.buffer,{cancelToken:this.cancelToken,timeout:this.timeout,headers:a.headers,filestackHeaders:!1,onProgress:function(n){return s.onProgressUpdate(e,t,r.offset+n.loaded)}}).then((function(i){s.onProgressUpdate(e,t,r.offset+o.size);var a=Math.min(r.offset+n,r.size);return $e("["+e+"] S3 Chunk uploaded! offset: "+r.offset+", part "+t+"! response headers for "+t+": \\n%O\\n",i.headers),s.setPartData(e,t,"offset",a),a===r.size?Promise.resolve(i):(r=null,o=null,s.uploadNextChunk(e,t,n))})).catch((function(i){var a=i&&i.response?i.response:null;if(a&&403===a.status&&a.data&&a.data.Error&&a.data.Error.code){var c=a.data.Error.code;switch(Array.isArray(c)&&(c=c.pop()),c){case"RequestTimeTooSkewed":return s.startPart(e,t);default:return Promise.reject(new g("Cannot upload file",a.data.Error,y.REQUEST))}}s.onProgressUpdate(e,t,r.offset);var p=n/2;return p<32768?($e("["+e+"] Minimal chunk size limit. Upload file failed!"),Promise.reject(new g("Min chunk size reached",i.data,y.REQUEST))):Object(qe.e)(i)?($e("["+e+"] Request network error. Retry with new chunk size: "+p),s.uploadNextChunk(e,t,p)):(r=null,o=null,Promise.reject(new g("Cannot upload file part (FII)",s.getErrorDetails(i),y.REQUEST)))}))]}}))}))},t.prototype.commitPart=function(e,t){var n=this,i=this.getPayloadById(e),r=i.parts[t];return q.post(this.getUploadUrl(e)+"/multipart/commit",Object(l.a)(Object(l.a)({},this.getDefaultFields(e,["apikey","region","upload_id","policy","signature","uri"])),{size:i.file.size,part:r.partNumber+1}),{cancelToken:this.cancelToken,timeout:this.timeout,headers:this.getDefaultHeaders(e),retry:this.retryConfig}).then((function(t){return $e("["+e+"] Commit Part number "+r.partNumber+". Response: %O",t.data),t})).catch((function(e){return Promise.reject(new g("Cannot commit file part metadata",n.getErrorDetails(e),y.REQUEST))}))},t.prototype.completeRequest=function(e){var t=this,n=this.getPayloadById(e),i=[];$e("["+e+"] Run complete request");for(var r=n.parts,o=r.length,a=0;a<o;a++)r[a].etag&&i.push({part_number:a+1,etag:r[a].etag});return $e("["+e+"] Etags %O",i),q.post(this.getUploadUrl(e)+"/multipart/complete",Object(l.a)(Object(l.a)({},this.getDefaultFields(e,["apikey","policy","signature","uri","region","upload_id","fii"],!0)),{filename:n.file.name,mimetype:n.file.type,size:n.file.size,upload_tags:this.uploadTags&&Object.keys(this.uploadTags).length?this.uploadTags:void 0,parts:i.length?i:void 0}),{timeout:this.timeout,cancelToken:this.cancelToken,headers:this.getDefaultHeaders(e),retry:this.retryConfig}).then((function(n){if(202===n.status)return new Promise((function(n,i){setTimeout((function(){return t.completeRequest(e).then(n).catch(i)}),1e3)}));var i=t.getPayloadById(e).file;return i.handle=n.data.handle,i.url=n.data.url,i.container=n.data.container,i.key=n.data.key,i.uploadTags=n.data.upload_tags,i.workflows=n.data.workflows,i.status=n.data.status,i})).catch((function(n){return t.setPayloadStatus(e,"Failed"),Promise.reject(new g("Cannot complete file",t.getErrorDetails(n),y.REQUEST))}))},t.prototype.onProgressUpdate=function(e,t,n){this.setPartData(e,t,"progress",n),this.emitProgress()},t.prototype.emitProgress=function(){var e=0,t=0,n={};for(var i in this.payloads){var r=this.payloads[i];if("Failed"!==r.file.status){var o=r.parts.map((function(e){return e.progress||0})).reduce((function(e,t){return e+t}),0);t+=o,n[i]={totalBytes:o,totalPercent:Math.round(100*o/r.file.size)||0},e+=r.file.size}}var a={totalBytes:t||0,totalPercent:Math.round(100*t/e)||0,files:n};$e("Upload progress %O",a),this.emit("progress",a)},t.prototype.updatePayload=function(e,t){this.payloads[e]=Object(l.a)(Object(l.a)({},this.payloads[e]),t)},t.prototype.setPartETag=function(e,t,n){$e("["+e+"] Set "+n+" etag for part "+t),this.getPayloadById(e).parts[t].etag=n},t.prototype.setPartData=function(e,t,n,i){$e("["+e+"] Set "+n+" = "+i+" for part "+t);var r=this.getPayloadById(e);r?r.parts[t][n]=i:$e("["+e+"] Cannot set "+n+" = "+i+" for part "+t)},t.prototype.setPayloadStatus=function(e,t){$e("["+e+"] Set payload status to "+t),this.payloads[e]&&(this.payloads[e].file.status=t)},t.prototype.getErrorDetails=function(e){return e.response?{code:e.response.status,data:e.response.data,headers:e.response.headers}:{}},t}(Re),De=function(e,t){return e.totalBytes=Math.max(e.totalBytes,t.totalBytes),e.totalPercent=Math.max(e.totalPercent,t.totalPercent),e},Le=function(e){function t(t,n){void 0===t&&(t={}),void 0===n&&(n={});var i=e.call(this)||this;i.options=t,i.storeOptions=n,i.lastProgress={totalBytes:0,totalPercent:0},i.storeOptions=Object.assign({},n);var r=j(E)(t);if(r.errors.length)throw new g("Invalid upload params",r.errors,y.VALIDATION);var o=j(O)(n);if(o.errors.length)throw new g("Invalid store upload params",o.errors,y.VALIDATION);return n.filename&&(i.overrideFileName=n.filename,delete i.storeOptions.filename),i.storeOptions.sanitizer&&(i.sanitizerOptions=i.storeOptions.sanitizer,delete i.storeOptions.sanitizer),i.uploader=new Ue(i.storeOptions,t.concurrency),i.uploader.setRetryConfig({retry:t.retry||10,onRetry:t.onRetry,retryFactor:t.retryFactor||2,retryMaxTime:t.retryMaxTime||15e3}),i.uploader.setTimeout(t.timeout||12e4),t.partSize&&i.uploader.setPartSize(t.partSize),t.intelligentChunkSize&&i.uploader.setIntelligentChunkSize(t.intelligentChunkSize),t.disableIntegrityCheck&&i.uploader.setIntegrityCheck(!1),t.intelligent&&i.uploader.setUploadMode("fallback"===t.intelligent?"fallback":"intelligent"),i.uploader.setUploadTags(t.tags),i.uploader.on("error",(function(e){return i.emit("error",e)})),i.uploader.on("progress",i.handleProgress.bind(i)),i}return Object(l.c)(t,e),t.prototype.setSession=function(e){this.uploader.setApikey(e.apikey),e.policy&&e.signature&&this.uploader.setSecurity({policy:e.policy,signature:e.signature}),this.uploader.setUrl(e.urls.uploadApiUrl)},t.prototype.setToken=function(e){var t=this;if(!e||e!==Object(e))throw new Error("Incorrect upload token. Must be instance of object");return e.pause=function(){return t.uploader.pause()},e.resume=function(){return t.uploader.resume()},e.cancel=function(){return t.uploader.abort()},e},t.prototype.setSecurity=function(e){this.uploader.setSecurity(e)},t.prototype.setUploadTags=function(e){this.uploader.setUploadTags(e)},t.prototype.upload=function(e){return Object(l.b)(this,void 0,void 0,(function(){var t,n;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,Ie(e,this.sanitizerOptions)];case 1:return(t=i.sent()).customName=this.overrideFileName,this.uploader.addFile(t),this.startProgressInterval(),[4,this.uploader.execute()];case 2:return n=i.sent().shift(),this.stopProgressInterval(),this.uploader.removeAllListeners(),"Failed"===n.status?[2,Promise.reject(n)]:[2,Promise.resolve(n)]}}))}))},t.prototype.multiupload=function(e){return Object(l.b)(this,void 0,void 0,(function(){var t,n,i,r,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:for(n in t=[],e)t.push(n);i=0,s.label=1;case 1:return i<t.length?(r=t[i],e.hasOwnProperty(r)?[4,Ie(e[r],this.sanitizerOptions)]:[3,3]):[3,4];case 2:(o=s.sent()).customName=this.overrideFileName,this.uploader.addFile(o),s.label=3;case 3:return i++,[3,1];case 4:return this.startProgressInterval(),[4,this.uploader.execute()];case 5:return a=s.sent(),this.stopProgressInterval(),this.uploader.removeAllListeners(),[2,Promise.resolve(a)]}}))}))},t.prototype.startProgressInterval=function(){var e=this;"function"==typeof this.options.onProgress&&(this.progressIntervalHandler=setInterval((function(){e.options.onProgress(e.lastProgress)}),this.options.progressInterval||1e3),this.options.onProgress(this.lastProgress))},t.prototype.stopProgressInterval=function(){clearInterval(this.progressIntervalHandler)},t.prototype.handleProgress=function(e){if(e=De(e,this.lastProgress),this.lastProgress.files)for(var t in e.files)this.lastProgress.files[t]&&(e.files[t]=De(e.files[t],this.lastProgress.files[t]));this.lastProgress=e},t}(u.EventEmitter),Be=function(e,t,n){if(!t||"string"!=typeof t)throw new Error("A valid Filestack handle or storage alias is required for preview");var i=j(S)(n);if(i.errors.length)throw new g("Invalid preview params",i.errors,y.VALIDATION);var r=Object(b.removeEmpty)(n||{}),o=function(e,t,n,i){var r=Object(l.a)({},n),o=i&&i.policy||e.policy,a=i&&i.signature||e.signature,s=a&&o,c=[e.urls.cdnUrl],p=r.css&&encodeURIComponent(\'"\'+r.css+\'"\'),u=p?"preview=css:"+p:"preview";return-1!==t.indexOf("src:")?c.push(e.apikey+"/"+u):c.push(u),s&&c.push("security=policy:"+o+",signature:"+a),c.push(t),c.join("/")}(e,t,r);if(r&&r.id){var a=r.id,s=document.createElement("iframe"),c=document.getElementById(a);if(s.src=o,s.width="100%",s.height="100%",!c)throw new Error(\'DOM Element with id "\'+a+\'" not found.\');return c.appendChild(s)}return window.open(o,t)},Ve=z()("fs:storage"),He=function(){function e(){this.availableTypes=[],void 0!==window.localStorage&&(this.availableTypes.push(Ee.LOCAL),Ve("Local storage exists")),void 0!==window.sessionStorage&&(this.availableTypes.push(Ee.SESSION),Ve("Session storage exists")),Ve("availableTypes - %O",this.availableTypes)}return e.prototype.hasAccess=function(e){return Ve("Checking access to storage for %s. Available types: %O",e,this.availableTypes),e?this.availableTypes.indexOf(e)>-1:!!this.availableTypes.length},e.prototype.getItem=function(e,t){var n=this.getStore(t);if(Ve("getItem %s from %O",e,n),n)return n.getItem(e)},e.prototype.setItem=function(e,t,n){var i=this.getStore(n);if(Ve("setItem %s to %O",e,i),i)return i.setItem(e,t)},e.prototype.removeItem=function(e,t){var n=this.getStore(t);if(Ve("removeItem %s from %O",e,n),n)return n.removeItem(e)},e.prototype.getStore=function(e){if(Ve("get store with pref type - %s",e),this.hasAccess(e))switch(e){case Ee.LOCAL:return window.localStorage;case Ee.SESSION:return window.sessionStorage;default:return window[this.availableTypes[0]]}else Ve("User dont have access to any storage")},e}();!function(e){e.SESSION="sessionStorage",e.LOCAL="localStorage"}(Ee||(Ee={}));var Ze,Je="__fs_picker_token",We=function(){function e(e,t){this.cache=!1,this.session=e,this.storeAdapter=new He,this.cloudApiUrl=e.urls.cloudApiUrl,t&&t.sessionCache&&(this.cache=t.sessionCache)}return Object.defineProperty(e.prototype,"token",{get:function(){if(this.cache){var e=this.storeAdapter.getItem(Je,Ee.LOCAL);if(e)return e}return this.isInAppBrowser?this.storeAdapter.getItem(Je,Ee.SESSION):this._token},set:function(e){this.cache&&this.storeAdapter.setItem(Je,e,Ee.LOCAL),this.isInAppBrowser&&this.storeAdapter.setItem(Je,e,Ee.SESSION),this._token=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isInAppBrowser",{get:function(){return!!(this.session&&this.session.prefetch&&this.session.prefetch.settings&&this.session.prefetch.settings.inapp_browser)&&this.session.prefetch.settings.inapp_browser},enumerable:!0,configurable:!0}),e.prototype.list=function(e,t,n){var i=this,r={apikey:this.session.apikey,clouds:e,flow:"web",token:this.token};n&&(Array.isArray(n)||(n=[n]),r.accept=n),this.isInAppBrowser&&(r.appurl=this.currentAppUrl()),this.session.policy&&this.session.signature&&(r.policy=this.session.policy,r.signature=this.session.signature);var o={};if(t){var a=new U;t.cancel=a.cancel.bind(a),o.cancelToken=a}return q.post(this.cloudApiUrl+"/folder/list",r,o).then((function(e){return e.data&&e.data.token&&(i.token=e.data.token),e.data}))},e.prototype.store=function(e,t,n,i,r,o){var a,s=this;void 0===n&&(n={}),void 0===i&&(i={}),void 0===o&&(o=null),void 0===n.location&&(n.location="s3");var c={apikey:this.session.apikey,token:this.token,flow:"web",upload_tags:o||void 0,clouds:(a={},a[e]={path:t,store:Object(b.removeEmpty)(n)},a)};"customsource"===e&&i.customSourcePath&&(c.clouds.customsource.customSourcePath=i.customSourcePath),"customsource"===e&&i.customSourceContainer&&(c.clouds.customsource.customSourceContainer=i.customSourceContainer),this.session.policy&&this.session.signature&&(c.policy=this.session.policy,c.signature=this.session.signature);var p={};if(r){var l=new U;r.cancel=l.cancel.bind(l),p.cancelToken=l}return q.post(this.cloudApiUrl+"/store/",c,p).then((function(t){return t.data&&t.data.token&&(s.token=t.data.token),t.data&&t.data[e]?t.data[e]:t.data}))},e.prototype.logout=function(e){var t,n={apikey:this.session.apikey,flow:"web",token:this.token};return e?n.clouds=((t={})[e]={},t):(this.cache&&this.storeAdapter.removeItem(Je,Ee.LOCAL),this.isInAppBrowser&&this.storeAdapter.removeItem(Je,Ee.SESSION)),q.post(this.cloudApiUrl+"/auth/logout",n).then((function(t){return t.data&&t.data[e]?t.data[e]:t.data}))},e.prototype.metadata=function(e,t){var n={apikey:this.session.apikey,url:e,headers:t};return this.session.policy&&this.session.signature&&(n.policy=this.session.policy,n.signature=this.session.signature),q.post(this.cloudApiUrl+"/metadata",n).then((function(e){return e.data}))},e.prototype.tokInit=function(e){if("video"!==e&&"audio"!==e)throw new g("Type must be one of video or audio.");return q.post(this.cloudApiUrl+"/recording/"+e+"/init").then((function(e){return e.data}))},e.prototype.tokStart=function(e,t,n){if("video"!==e&&"audio"!==e)throw new g("Type must be one of video or audio.");var i={apikey:t,session_id:n};return q.post(this.cloudApiUrl+"/recording/"+e+"/start",i).then((function(e){return e.data}))},e.prototype.tokStop=function(e,t,n,i){if("video"!==e&&"audio"!==e)throw new g("Type must be one of video or audio.");var r={apikey:t,session_id:n,archive_id:i};return q.post(this.cloudApiUrl+"/recording/"+e+"/stop",r).then((function(e){return e.data}))},e.prototype.currentAppUrl=function(){if(window.URLSearchParams){var e=new URLSearchParams(window.location.search);return e.set("fs-tab","init"),window.location.protocol+"//"+window.location.host+window.location.pathname+"?"+e.toString()}},e}(),Qe=n(28);!function(e){e.PICKER="picker",e.TRANSFORM_UI="transform_ui"}(Ze||(Ze={}));var Ye,Ge,Ke=function(){function e(e){this.session=e instanceof et?e.session:e}return e.prototype.getConfig=function(e){var t=e.pickerOptions,n=e.settings,i=e.permissions,r=e.events;return Object(l.b)(this,void 0,void 0,(function(){var e,o,a=this;return Object(l.d)(this,(function(s){return e={apikey:this.session.apikey},this.session.policy&&this.session.signature&&(e.security={policy:this.session.policy,signature:this.session.signature}),n=n?(n=n.concat(["inapp_browser"])).filter((function(e,t){return n.indexOf(e)===t})):["inapp_browser"],t&&Object.keys(t).length&&(o=Object(b.cleanUpCallbacks)(Qe(Object(l.a)({},t)))),e=Object(l.a)(Object(l.a)({},e),{permissions:i,settings:n,picker_config:o,events:r}),this.session.prefetch=null,[2,q.post(this.session.urls.uploadApiUrl+"/prefetch",e).then((function(e){if(200!==e.status)throw new g("There is a problem with prefetch request");var n=e.data;return n.updated_config?(n.pickerOptions=a.reassignCallbacks(t,n.updated_config||{}),delete n.updated_config):n.pickerOptions=t,a.session.prefetch=n,n}))]}))}))},e.prototype.reassignCallbacks=function(e,t){if(!e||0===Object.keys(e).length)return e;for(var n in e)"function"==typeof e[n]&&(t[n]=e[n]),e[n]===Object(e[n])&&(t[n]=this.reassignCallbacks(e[n],t[n]));return t},e}();!function(e){e.cw="CW",e.ccw="CCW"}(Ye||(Ye={})),function(e){e.inline="inline",e.overlay="overlay",e.dropPane="dropPane"}(Ge||(Ge={}));var Xe=function(){function e(e,t){var n=j(C)(t);if(n.errors.length)throw new g("Invalid picker params",n.errors,y.VALIDATION);this._initialized=this.loadModule(e,t)}return e.prototype.open=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){switch(e.label){case 0:return[4,this._initialized];case 1:return[4,e.sent().open()];case 2:return e.sent(),[2]}}))}))},e.prototype.crop=function(e){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(t){switch(t.label){case 0:return[4,this._initialized];case 1:return[4,t.sent().crop(e)];case 2:return t.sent(),[2]}}))}))},e.prototype.close=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){switch(e.label){case 0:return[4,this._initialized];case 1:return[4,e.sent().close()];case 2:return e.sent(),[2]}}))}))},e.prototype.cancel=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){switch(e.label){case 0:return[4,this._initialized];case 1:return[4,e.sent().cancel()];case 2:return e.sent(),[2]}}))}))},e.prototype.loadModule=function(e,t){return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(i){switch(i.label){case 0:return n=e.session.urls.pickerUrl,[4,o(s.PICKER,n)];case 1:return[2,new(i.sent())(e,t)]}}))}))},e}();d("addBreadcrumb",{category:"sdk",message:"filestack-js-sdk scope"});var et=function(e){function t(t,n){var i=e.call(this)||this;if(i.forwardErrors=!0,n&&n.forwardErrors&&(i.forwardErrors=n.forwardErrors),d("configureScope",(function(e){e.setTag("apikey",t),e.setTag("sdk-version",b.getVersion()),e.setExtra("clientOptions",n)})),!t||"string"!=typeof t||0===t.length)throw new Error("An apikey is required to initialize the Filestack client");var r=v.urls;if(i.session={apikey:t,urls:r},n){var o=n.cname,a=n.security;i.setSecurity(a),i.setCname(o)}return i.prefetchInstance=new Ke(i.session),i.cloud=new We(i.session,n),i}return Object(l.c)(t,e),Object.defineProperty(t.prototype,"utils",{get:function(){return b},enumerable:!0,configurable:!0}),t.prototype.prefetch=function(e){return this.prefetchInstance.getConfig(e)},t.prototype.setSecurity=function(e){if(e&&(!e.policy||!e.signature))throw new g("Both policy and signature are required for client security");e&&e.policy&&e.signature&&(this.session.policy=e.policy,this.session.signature=e.signature)},t.prototype.setCname=function(e){e&&0!==e.length&&(this.session.cname=e,this.session.urls=b.resolveHost(this.session.urls,e))},t.prototype.logout=function(e){return this.cloud.logout(e)},t.prototype.metadata=function(e,t,n){return function(e,t,n,i){if(!t||"string"!=typeof t)throw new g("A valid Filestack handle is required for metadata");var r=j(T)(n);if(r.errors.length)throw new g("Invalid metadata params",r.errors);var o=Object(l.a)({},n);o.source_url=o.sourceUrl,o.policy=i&&i.policy||e.policy,o.signature=i&&i.signature||e.signature;var a=e.urls.fileApiUrl+"/"+t+"/metadata";return new Promise((function(e,n){q.get(a,{params:Object(b.removeEmpty)(o),filestackHeaders:!1}).then((function(n){return e(Object(l.a)(Object(l.a)({},n.data),{handle:t}))})).catch(n)}))}(this.session,e,t,n)},t.prototype.picker=function(e){return function(e,t){return new Xe(e,t)}(this,e)},t.prototype.preview=function(e,t){return Be(this.session,e,t)},t.prototype.remove=function(e,t){return D(this.session,e,!1,t)},t.prototype.removeMetadata=function(e,t){return D(this.session,e,!0,t)},t.prototype.storeURL=function(e,t,n,i,r,o){return function(e){var t=e.session,n=e.url,i=e.storeParams,r=e.token,o=e.security,a=e.uploadTags,s=e.headers;if(!n||"string"!=typeof n)return Promise.reject(new g("url is required for storeURL"));var c=j(O)(i);if(c.errors.length)return Promise.reject(new g("Invalid store params",c.errors));t.policy=o&&o.policy||t.policy,t.signature=o&&o.signature||t.signature;var p=new se(n,t.apikey);p.store(i),t.policy&&t.signature&&p.security({policy:t.policy,signature:t.signature});var u={};if(r){var f=new U;r.cancel=f.cancel.bind(f),u.cancelToken=f}var d=[n];return s&&(d=[{source:n,headers:s}]),q.post(t.urls.processUrl+"/process",{apikey:t.apikey,sources:d,tasks:p.getTasks(),upload_tags:a},u).then((function(e){if(e.data&&e.data.handle)return e.data.upload_tags&&(e.data.uploadTags=e.data.upload_tags,delete e.data.upload_tags),Object(l.a)(Object(l.a)({},e.data),{mimetype:e.data.type});throw new g("Invalid store response "+JSON.stringify(e.data))}))}({session:this.session,url:e,storeParams:t,token:n,security:i,uploadTags:r,headers:o})},t.prototype.retrieve=function(e,t,n){return function(e,t,n,i){if(void 0===n&&(n={}),!t||0===t.length||"string"!=typeof t)throw new g("File handle is required");var r=j(A)(n);if(r.errors.length)throw new g("Invalid retrieve params",r.errors);var o=Object(l.a)({},n);o.key=e.apikey,o.policy=i&&i.policy||e.policy,o.signature=i&&i.signature||e.signature;var a,s,c=P.a.GET;if(o.head&&(c=P.a.HEAD,delete o.head),o.extension&&o.extension.length&&(a=o.extension,delete o.extension),o.metadata){if(c===P.a.HEAD)throw new g("Head and metadata options cannot be used together");s=o.metadata,delete o.metadata}var p=e.urls.fileApiUrl+"/"+t+(a?"+"+a:"")+(s?"/metadata":"");return new Promise((function(e,t){q.dispatch(p,{method:c,filestackHeaders:!1,params:Object(b.removeEmpty)(o)}).then((function(t){return e(c===P.a.HEAD?t.headers:t.data)})).catch(t)}))}(this.session,e,t,n)},t.prototype.transform=function(e,t,n){return void 0===n&&(n=!1),Oe(this.session,e,t,n)},t.prototype.upload=function(e,t,n,i,r){var o=this,a=new Le(t,n);return a.setSession(this.session),i&&a.setToken(i),r&&a.setSecurity(r),a.on("error",(function(e){o.forwardErrors&&h((function(i){i.setExtras({uploadOptions:t,storeOptions:n,details:e.details}),e.message="FS-"+e.message,m(e)})),o.emit("upload.error",e)})),a.upload(e)},t.prototype.multiupload=function(e,t,n,i,r){var o=this,a=new Le(t,n);return a.setSession(this.session),i&&a.setToken(i),r&&a.setSecurity(r),a.on("error",(function(e){h((function(i){i.setExtras(e.details),i.setExtras({uploadOptions:t,storeOptions:n}),m(e)})),o.emit("upload.error",e)})),a.multiupload(e)},t}(u.EventEmitter),tt=function(e,t){return new et(e,t)},nt=tt,it="3.20.0";a(s.FILESTACK_SDK,tt,{version:"3.20.0"})},,function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var i=n(0),r=n(6),o=n(29),a=n(17),s=function(){function e(e,t,n){void 0===t&&(t=new a.a),void 0===n&&(n=3),this._version=n,this._stack=[],this._stack.push({client:e,scope:t})}return e.prototype._invokeClient=function(e){for(var t,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=this.getStackTop();o&&o.client&&o.client[e]&&(t=o.client)[e].apply(t,i.e(n,[o.scope]))},e.prototype.isOlderThan=function(e){return this._version<e},e.prototype.bindClient=function(e){this.getStackTop().client=e},e.prototype.pushScope=function(){var e=this.getStack(),t=e.length>0?e[e.length-1].scope:void 0,n=a.a.clone(t);return this.getStack().push({client:this.getClient(),scope:n}),n},e.prototype.popScope=function(){return void 0!==this.getStack().pop()},e.prototype.withScope=function(e){var t=this.pushScope();try{e(t)}finally{this.popScope()}},e.prototype.getClient=function(){return this.getStackTop().client},e.prototype.getScope=function(){return this.getStackTop().scope},e.prototype.getStack=function(){return this._stack},e.prototype.getStackTop=function(){return this._stack[this._stack.length-1]},e.prototype.captureException=function(e,t){var n=this._lastEventId=Object(r.f)(),o=t;if(!t){var a=void 0;try{throw new Error("Sentry syntheticException")}catch(e){a=e}o={originalException:e,syntheticException:a}}return this._invokeClient("captureException",e,i.a({},o,{event_id:n})),n},e.prototype.captureMessage=function(e,t,n){var o=this._lastEventId=Object(r.f)(),a=n;if(!n){var s=void 0;try{throw new Error(e)}catch(e){s=e}a={originalException:e,syntheticException:s}}return this._invokeClient("captureMessage",e,t,i.a({},a,{event_id:o})),o},e.prototype.captureEvent=function(e,t){var n=this._lastEventId=Object(r.f)();return this._invokeClient("captureEvent",e,i.a({},t,{event_id:n})),n},e.prototype.lastEventId=function(){return this._lastEventId},e.prototype.addBreadcrumb=function(e,t){var n=this.getStackTop();if(n.scope&&n.client){var o=n.client.getOptions&&n.client.getOptions()||{},a=o.beforeBreadcrumb,s=void 0===a?null:a,c=o.maxBreadcrumbs,p=void 0===c?100:c;if(!(p<=0)){var l=Object(r.e)(),u=i.a({timestamp:l},e),f=s?Object(r.a)((function(){return s(u,t)})):u;null!==f&&n.scope.addBreadcrumb(f,Math.min(p,100))}}},e.prototype.setUser=function(e){var t=this.getStackTop();t.scope&&t.scope.setUser(e)},e.prototype.setTags=function(e){var t=this.getStackTop();t.scope&&t.scope.setTags(e)},e.prototype.setExtras=function(e){var t=this.getStackTop();t.scope&&t.scope.setExtras(e)},e.prototype.setTag=function(e,t){var n=this.getStackTop();n.scope&&n.scope.setTag(e,t)},e.prototype.setExtra=function(e,t){var n=this.getStackTop();n.scope&&n.scope.setExtra(e,t)},e.prototype.setContext=function(e,t){var n=this.getStackTop();n.scope&&n.scope.setContext(e,t)},e.prototype.configureScope=function(e){var t=this.getStackTop();t.scope&&t.client&&e(t.scope)},e.prototype.run=function(e){var t=p(this);try{e(this)}finally{p(t)}},e.prototype.getIntegration=function(e){var t=this.getClient();if(!t)return null;try{return t.getIntegration(e)}catch(t){return o.a.warn("Cannot retrieve integration "+e.id+" from the current Hub"),null}},e.prototype.startSpan=function(e,t){return void 0===t&&(t=!1),this._callExtensionMethod("startSpan",e,t)},e.prototype.traceHeaders=function(){return this._callExtensionMethod("traceHeaders")},e.prototype._callExtensionMethod=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=c(),r=i.__SENTRY__;if(r&&r.extensions&&"function"==typeof r.extensions[e])return r.extensions[e].apply(this,t);o.a.warn("Extension method "+e+" couldn\'t be found, doing nothing.")},e}();function c(){var e=Object(r.c)();return e.__SENTRY__=e.__SENTRY__||{extensions:{},hub:void 0},e}function p(e){var t=c(),n=f(t);return d(t,e),n}function l(){var t=c();return u(t)&&!f(t).isOlderThan(3)||d(t,new s),Object(r.d)()?function(t){try{var n=Object(r.b)(e,"domain").active;if(!n)return f(t);if(!u(n)||f(n).isOlderThan(3)){var i=f(t).getStackTop();d(n,new s(i.client,a.a.clone(i.scope)))}return f(n)}catch(e){return f(t)}}(t):f(t)}function u(e){return!!(e&&e.__SENTRY__&&e.__SENTRY__.hub)}function f(e){return e&&e.__SENTRY__&&e.__SENTRY__.hub||(e.__SENTRY__=e.__SENTRY__||{},e.__SENTRY__.hub=new s),e.__SENTRY__.hub}function d(e,t){return!!e&&(e.__SENTRY__=e.__SENTRY__||{},e.__SENTRY__.hub=t,!0)}}).call(this,n(48)(e))}]);const _filestack$Filestack=filestack.Filestack,_filestack$init=filestack.init,_filestack$version=filestack.version,_filestack$EAlignOptions=filestack.EAlignOptions,_filestack$EAlignFacesOptions=filestack.EAlignFacesOptions,_filestack$EFitOptions=filestack.EFitOptions,_filestack$EBlurMode=filestack.EBlurMode,_filestack$EShapeType=filestack.EShapeType,_filestack$ENoiseType=filestack.ENoiseType,_filestack$EStyleType=filestack.EStyleType,_filestack$EColorspaceType=filestack.EColorspaceType,_filestack$ECropfacesType=filestack.ECropfacesType,_filestack$EVideoTypes=filestack.EVideoTypes,_filestack$EUrlscreenshotAgent=filestack.EUrlscreenshotAgent,_filestack$EUrlscreenshotMode=filestack.EUrlscreenshotMode,_filestack$EUrlscreenshotOrientation=filestack.EUrlscreenshotOrientation,_filestack$EVideoLocations=filestack.EVideoLocations,_filestack$EVideoAccess=filestack.EVideoAccess,_filestack$EVideoAccessMode=filestack.EVideoAccessMode,_filestack$transform=filestack.transform,_filestack$Align=filestack.Align,_filestack$FitOptions=filestack.FitOptions,_filestack$BlurMode=filestack.BlurMode,_filestack$ShapeType=filestack.ShapeType,_filestack$NoiseType=filestack.NoiseType,_filestack$StyleType=filestack.StyleType,_filestack$ColorspaceType=filestack.ColorspaceType,_filestack$CropfacesType=filestack.CropfacesType,_filestack$VideoTypes=filestack.VideoTypes,_filestack$URLScreenshotAgent=filestack.URLScreenshotAgent,_filestack$URLScreenshotMode=filestack.URLScreenshotMode,_filestack$URLScreenshotOrientation=filestack.URLScreenshotOrientation,_filestack$Locations=filestack.Locations,_filestack$VideoAccess=filestack.VideoAccess,_filestack$VideoAccessMode=filestack.VideoAccessMode,_filestack$EnhancePreset=filestack.EnhancePreset,_filestack$Filelink=filestack.Filelink,_filestack$FilestackErrorType=filestack.FilestackErrorType,_filestack$FsHttpMethod=filestack.FsHttpMethod,_filestack$FsRequest=filestack.FsRequest,_filestack$FsRequestErrorCode=filestack.FsRequestErrorCode,_filestack$FsRequestError=filestack.FsRequestError,_filestack$FsCancelToken=filestack.FsCancelToken,_filestack$resolveCdnUrl=filestack.resolveCdnUrl,_filestack$resolveHost=filestack.resolveHost,_filestack$removeEmpty=filestack.removeEmpty,_filestack$uniqueTime=filestack.uniqueTime,_filestack$uniqueId=filestack.uniqueId,_filestack$extensionToMime=filestack.extensionToMime,_filestack$sanitizeName=filestack.sanitizeName,_filestack$filterObject=filestack.filterObject,_filestack$cleanUpCallbacks=filestack.cleanUpCallbacks,_filestack$md5=filestack.md5,_filestack$b64=filestack.b64,_filestack$getVersion=filestack.getVersion,_filestack$isMobile=filestack.isMobile,_filestack$isFacebook=filestack.isFacebook,_filestack$TransformSchema=filestack.TransformSchema,_filestack$getSecurity=filestack.getSecurity,_filestack$validateWebhookSignature=filestack.validateWebhookSignature,_filestack$Client=filestack.Client,_filestack$FilestackError=filestack.FilestackError,_filestack$PickerDisplayMode=filestack.PickerDisplayMode,_filestack$getMimetype=filestack.getMimetype,_filestack$PrefetchEvents=filestack.PrefetchEvents;\n//# sourceMappingURL=filestack.esm.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(3)\nvar ieee754 = __webpack_require__(4)\nvar isArray = __webpack_require__(5)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc0RuZC8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc0RuZC8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/MWZiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLFNBQVM7QUFDM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsU0FBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBDQUEwQyxVQUFVO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsoXG4gICAgICB1aW50OCwgaSwgKGkgKyBtYXhDaHVua0xlbmd0aCkgPiBsZW4yID8gbGVuMiA6IChpICsgbWF4Q2h1bmtMZW5ndGgpXG4gICAgKSlcbiAgfVxuXG4gIC8vIHBhZCB0aGUgZW5kIHdpdGggemVyb3MsIGJ1dCBtYWtlIHN1cmUgdG8gbm90IGZvcmdldCB0aGUgZXh0cmEgYnl0ZXNcbiAgaWYgKGV4dHJhQnl0ZXMgPT09IDEpIHtcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDJdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDQpICYgMHgzRl0gK1xuICAgICAgJz09J1xuICAgIClcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAxMF0gK1xuICAgICAgbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdICtcbiAgICAgICc9J1xuICAgIClcbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKCcnKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc0RuZC8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzPzkxNTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBO0FBQ0EsUUFBUSxXQUFXOztBQUVuQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxXQUFXOztBQUVuQjtBQUNBO0FBQ0EsUUFBUSxVQUFVOztBQUVsQjtBQUNBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mc0RuZC8uL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzP2UzZGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0EiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"FilestackDnD\", function() { return /* binding */ src_FilestackDnD; });\n\n// EXTERNAL MODULE: ./node_modules/filestack-js/build/browser/filestack.esm.js\nvar filestack_esm = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/lib/config/app.ts\nconst app_appConfig = {\n    accept: [],\n    maxSize: 0,\n    maxFiles: 0,\n    uploadMaxFiles: true,\n};\n\n// CONCATENATED MODULE: ./src/lib/enum/upload.ts\nvar UploadStatusEnum;\n(function (UploadStatusEnum) {\n    UploadStatusEnum[\"error\"] = \"error\";\n    UploadStatusEnum[\"info\"] = \"info\";\n    UploadStatusEnum[\"progress\"] = \"progress\";\n    UploadStatusEnum[\"finish\"] = \"finish\";\n    UploadStatusEnum[\"retry\"] = \"retry\";\n    UploadStatusEnum[\"successReadFile\"] = \"successReadFile\";\n})(UploadStatusEnum || (UploadStatusEnum = {}));\n;\nvar UploadCodeEnum;\n(function (UploadCodeEnum) {\n    UploadCodeEnum[\"MAX_FILES\"] = \"MAX_FILES\";\n    UploadCodeEnum[\"MAX_FILE_SIZE\"] = \"MAX_FILE_SIZE\";\n    UploadCodeEnum[\"MINETYPE\"] = \"MINETYPE\";\n})(UploadCodeEnum || (UploadCodeEnum = {}));\n;\n\n// CONCATENATED MODULE: ./src/lib/helpers/canAcceptFile.ts\n\n\n// @todo add errorEvent\nclass canAcceptFile_CanAcceptFileHelper {\n    constructor(eventEmitter, config, sdk) {\n        this.eventEmitter = eventEmitter;\n        this.sdk = sdk;\n        if (config) {\n            this.config = config;\n        }\n        else {\n            this.config = app_appConfig;\n        }\n    }\n    canAcceptFile(file) {\n        let canAcceptMinetype = this.canAcceptMinetype(file);\n        let canAcceptSize = this.maxSize(file);\n        if (!canAcceptMinetype) {\n            this.eventEmitter.emit(UploadStatusEnum.error, { data: file, code: UploadCodeEnum.MINETYPE });\n        }\n        if (!canAcceptSize) {\n            this.eventEmitter.emit(UploadStatusEnum.error, { data: file, code: UploadCodeEnum.MAX_FILE_SIZE });\n        }\n        if (canAcceptMinetype && canAcceptSize) {\n            return true;\n        }\n        return false;\n    }\n    canAcceptMinetype(file) {\n        if (this.config.accept === undefined || this.config.accept.length === 0) {\n            return true;\n        }\n        return this.config.accept.some(singleAcceptOption => {\n            const minetype = this.sdk.utils.extensionToMime(file.name);\n            if (this.isMimetype(singleAcceptOption)) {\n                return this.matchesMimetype(minetype, singleAcceptOption);\n            }\n            return this.matchesExtension(file, singleAcceptOption);\n        });\n    }\n    matchesMimetype(minetype, singleAcceptOption) {\n        if (minetype && singleAcceptOption === 'image/*') {\n            return minetype.indexOf('image/') !== -1;\n        }\n        if (minetype && singleAcceptOption === 'video/*') {\n            return minetype.indexOf('video/') !== -1;\n        }\n        if (minetype && singleAcceptOption === 'audio/*') {\n            return minetype.indexOf('audio/') !== -1;\n        }\n        if (minetype && singleAcceptOption === 'application/*') {\n            return minetype.indexOf('application/') !== -1;\n        }\n        if (minetype && singleAcceptOption === 'text/*') {\n            return minetype.indexOf('text/') !== -1;\n        }\n        if (minetype && ['image/jpg', 'image/jpeg'].indexOf(singleAcceptOption) > -1) {\n            return ['image/jpg', 'image/jpeg'].indexOf(minetype) > -1;\n        }\n        return minetype === singleAcceptOption;\n    }\n    maxSize(file) {\n        return this.config.maxSize === 0 || file.size <= this.config.maxSize ? true : false;\n    }\n    isMimetype(str) {\n        return str.indexOf('/') !== -1;\n    }\n    extractExtension(filename) {\n        const match = /\\.\\w+$/.exec(filename);\n        return match && match.length && match[0];\n    }\n    normalizeExtension(ext) {\n        return ext.replace('.', '').toLowerCase();\n    }\n    matchesExtension(file, singleAcceptOption) {\n        const ext = this.extractExtension(file.name) || '';\n        const fileExt = this.normalizeExtension(ext);\n        const acceptExt = this.normalizeExtension(singleAcceptOption);\n        return fileExt === acceptExt;\n    }\n}\n\n// CONCATENATED MODULE: ./src/lib/helpers/elements.ts\nclass ElementsHelper {\n    constructor(eventEmitter, element) {\n        this.eventEmitter = eventEmitter;\n        this.elementsArray = [];\n        if (element) {\n            this.setElement(element);\n        }\n    }\n    get elements() {\n        return this.elementsArray;\n    }\n    setElement(element) {\n        this.assignEvents(element);\n        this.elementsArray = [element];\n    }\n    setElements(elements) {\n        if (!elements || elements.length <= 0) {\n            return;\n        }\n        this.elementsArray = [];\n        elements.forEach((element) => this.addElement(element));\n    }\n    addElement(element) {\n        this.assignEvents(element);\n        this.elements.push(element);\n    }\n    addElements(elements) {\n        if (!elements || elements.length <= 0) {\n            return;\n        }\n        elements.forEach((element) => this.addElement(element));\n    }\n    assignEvents(element) {\n        ['dragenter', 'dragover', 'dragleave'].forEach(eventName => {\n            element.addEventListener(eventName, this.assignEvent.bind(this), false);\n        });\n        element.addEventListener('drop', this.dropEvent.bind(this), false);\n        if (!element.getAttribute('data-fs-dnd-element-id')) {\n            element.setAttribute('data-fs-dnd-element-id', this.generateDataId());\n        }\n    }\n    assignEvent(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target;\n        this.eventEmitter.emit('event', { elementId: target.getAttribute('data-fs-dnd-element-id'), data: event, type: event.type });\n    }\n    dropEvent(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target;\n        this.eventEmitter.emit('uploadFiles', { elementId: target.getAttribute('data-fs-dnd-element-id'), data: event });\n    }\n    generateDataId() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n        });\n        return uuid;\n    }\n}\n\n// CONCATENATED MODULE: ./src/lib/helpers/eventEmitter.ts\nclass EventEmitter {\n    constructor() {\n        this.events = {};\n    }\n    /**\n     * Bind event listener\n     *\n     * @param {string} event\n     * @param {Listener} listener\n     * @returns {() => void}\n     * @memberof EventEmitter\n     */\n    on(event, listener) {\n        if (typeof this.events[event] !== 'object') {\n            this.events[event] = [];\n        }\n        this.events[event].push(listener);\n        return () => this.off(event, listener);\n    }\n    /**\n     * Unbind event listener\n     *\n     * @param {string} event\n     * @param {Listener} listener\n     * @returns {void}\n     * @memberof EventEmitter\n     */\n    off(event, listener) {\n        if (typeof this.events[event] !== 'object') {\n            return;\n        }\n        if (!listener) {\n            delete this.events[event];\n            return;\n        }\n        const idx = this.events[event].indexOf(listener);\n        if (idx > -1) {\n            this.events[event].splice(idx, 1);\n        }\n    }\n    /**\n     * Destroy all events\n     *\n     * @memberof EventEmitter\n     */\n    destroy() {\n        Object.keys(this.events).forEach((event) => this.events[event].splice(0, this.events[event].length));\n    }\n    /**\n     * Emit event\n     *\n     * @param {string} event\n     * @param {...any[]} args\n     * @returns {void}\n     * @memberof EventEmitter\n     */\n    // @todo if listner has more than 2 args waif for next or check if its return promise and wait for it emit have to always return promise\n    // if no promise or less than 2 args just fire promise.resolve()\n    emit(event, ...args) {\n        if (typeof this.events[event] !== 'object') {\n            return;\n        }\n        this.events[event].forEach(listener => listener.apply(this, args));\n    }\n    /**\n     * Bind event listener only once\n     *\n     * @param {string} event\n     * @param {Listener} listener\n     * @memberof EventEmitter\n     */\n    once(event, listener) {\n        const remove = this.on(event, (...args) => {\n            remove();\n            listener.apply(this, args);\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./src/lib/helpers/extract_files_from_data_transfer.js\n// Takes: https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\n// Returns: https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nconst getFileEntryFromDataTransferItem = (file) => {\n  if (typeof file.getAsEntry === 'function') {\n    return file.getAsEntry();\n  } else if (typeof file.webkitGetAsEntry === 'function') {\n    return file.webkitGetAsEntry();\n  }\n  return undefined;\n};\n\nconst isWantedFile = (filename) => {\n  const unwantedFiles = [\n    // Stores thumbnails on OSX\n    '.DS_Store',\n  ];\n  return unwantedFiles.indexOf(filename) === -1;\n};\n\nconst getPath = (path, name) => {\n  return `${path}/${name}`;\n};\n\nconst extractFromItems = (items) => {\n  const files = [];\n\n  const traverseDirectoryTree = (fileEntry, path = '') => {\n    const promises = [];\n\n    return new Promise((resolve) => {\n      if (fileEntry.isDirectory) {\n        const reader = fileEntry.createReader();\n\n        const readFiles = () => {\n          reader.readEntries((dirContent) => {\n            dirContent.forEach((dirItem) => {\n              promises.push(traverseDirectoryTree(dirItem, getPath(path, fileEntry.name)));\n            });\n\n            if (dirContent.length) {\n              readFiles();\n            } else {\n              Promise.all(promises).then(resolve);\n            }\n          });\n        };\n\n        readFiles();\n      } else if (fileEntry.isFile) {\n        fileEntry.file((file) => {\n          if (isWantedFile(file.name)) {\n            file.path = getPath(path, file.name);\n            files.push(file);\n          }\n          resolve();\n        });\n      }\n    });\n  };\n\n  const extractUrl = (item) => {\n    return new Promise((resolve) => {\n      item.getAsString((url) => {\n        files.push({ url, source: 'dragged-from-web' });\n        resolve();\n      });\n    });\n  };\n\n  const promises = [];\n  for (let i = 0; i < items.length; i += 1) {\n    const item = items[i];\n    if (item.kind === 'file' && item.type && item.type !== 'application/x-moz-file') {\n      const file = item.getAsFile();\n      if (file) {\n        // It is a simple file\n        files.push(file);\n        promises.push(Promise.resolve());\n      }\n    } else if (item.kind === 'file') {\n      // It's not a simple file, possibly folder, try to scout its content.\n      const file = getFileEntryFromDataTransferItem(item);\n      if (file) {\n        promises.push(traverseDirectoryTree(file));\n      }\n    } else if (item.kind === 'string' && item.type === 'text/uri-list') {\n      promises.push(extractUrl(item));\n    }\n  }\n\n  return Promise.all(promises).then((a) => {\n    return files;\n  });\n};\n\nconst extractFromFiles = (fileList) => {\n  return new Promise((resolve) => {\n    const files = [];\n    for (let i = 0; i < fileList.length; i += 1) {\n      files.push(fileList[i]);\n    }\n    resolve(files);\n  });\n};\n\n// Takses: https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\n// Returns Array of possible file representations:\n// 1. File class instance - https://developer.mozilla.org/en-US/docs/Web/API/File\n// 2. Blob class instance - https://developer.mozilla.org/en-US/docs/Web/API/Blob\n// 3. Object with url to resource - { url: 'https://files.com/file.jpg' }\n/* harmony default export */ var extract_files_from_data_transfer = ((dataTransfer) => {\n  // if there is no dataTransfer object, just return empty promise\n  if (!dataTransfer) {\n    return Promise.resolve([]);\n  }\n\n  if (dataTransfer.items) {\n    return extractFromItems(dataTransfer.items);\n  }\n\n  if (dataTransfer.files) {\n    return extractFromFiles(dataTransfer.files);\n  }\n\n  // Safety fallback if this dataTransfer has nothing we can make sense of.\n  return Promise.resolve([]);\n});\n\n// CONCATENATED MODULE: ./src/lib/helpers/upload.ts\n\n\n\nclass upload_Uploads {\n    constructor(sdk, eventEmitter, appConfig) {\n        this.sdk = sdk;\n        this.eventEmitter = eventEmitter;\n        this.appConfig = appConfig;\n        this.uploadOptions = {};\n        this.storeUploadOptions = {};\n        this.canAcceptFileHelper = new canAcceptFile_CanAcceptFileHelper(eventEmitter, appConfig, sdk);\n        this.assainEvents();\n    }\n    setUploadOptions(uploadOptions) {\n        this.uploadOptions = uploadOptions;\n    }\n    setStoreUploadOptions(storeUploadOptions) {\n        this.storeUploadOptions = storeUploadOptions;\n    }\n    upload(eventData) {\n        const sdk = this.sdk;\n        const token = {};\n        this.assainUploadEvents(eventData, token);\n        extract_files_from_data_transfer(eventData.data.dataTransfer).then((files) => {\n            this.eventEmitter.emit(UploadStatusEnum.successReadFile, { elementId: eventData.elementId, data: files });\n            if (!this.checkMaxFiles(files) && !this.appConfig.uploadMaxFiles) {\n                this.eventEmitter.emit(UploadStatusEnum.error, { elementId: eventData.elementId, code: UploadCodeEnum.MAX_FILES });\n                return;\n            }\n            else if (!this.checkMaxFiles(files) && this.appConfig.uploadMaxFiles) {\n                this.eventEmitter.emit(UploadStatusEnum.error, { elementId: eventData.elementId, code: UploadCodeEnum.MAX_FILES });\n            }\n            let acceptFiles = [];\n            files.forEach(file => {\n                if (this.canAcceptFileHelper.canAcceptFile(file)) {\n                    acceptFiles.push(file);\n                }\n            });\n            if (acceptFiles.length > 0) {\n                if (!this.checkMaxFiles(acceptFiles)) {\n                    acceptFiles = acceptFiles.slice(0, this.appConfig.maxFiles);\n                }\n                const cloneUploadOptions = Object.assign({}, this.uploadOptions);\n                this.assainUploadCallbacks(cloneUploadOptions, eventData);\n                sdk\n                    .multiupload(acceptFiles, cloneUploadOptions, this.storeUploadOptions, token)\n                    .then(files => {\n                    this.eventEmitter.emit(UploadStatusEnum.finish, { elementId: eventData.elementId, data: files });\n                })\n                    .catch(err => {\n                    this.eventEmitter.emit(UploadStatusEnum.error, { elementId: eventData.elementId, data: files });\n                });\n            }\n        });\n    }\n    checkMaxFiles(files) {\n        return this.appConfig.maxFiles === 0 || files.length <= this.appConfig.maxFiles ? true : false;\n    }\n    assainUploadCallbacks(cloneUploadOptions, eventData) {\n        cloneUploadOptions.onProgress = event => {\n            if (this.uploadOptions.onProgress) {\n                this.uploadOptions.onProgress(event);\n            }\n            this.eventEmitter.emit(UploadStatusEnum.progress, { elementId: eventData.elementId, event });\n        };\n        cloneUploadOptions.onRetry = () => {\n            if (this.uploadOptions.onRetry) {\n                this.uploadOptions.onRetry();\n            }\n            this.eventEmitter.emit(UploadStatusEnum.retry, { elementId: eventData.elementId });\n        };\n    }\n    assainUploadEvents(eventData, token) {\n        this.eventEmitter.on('resume', id => {\n            if (eventData.elementId === id) {\n                token.resume();\n            }\n        });\n        this.eventEmitter.on('pause', id => {\n            if (eventData.elementId === id) {\n                token.pause();\n            }\n        });\n        this.eventEmitter.on('cancel', id => {\n            if (eventData.elementId === id) {\n                token.cancel();\n            }\n        });\n    }\n    assainEvents() {\n        this.eventEmitter.on('uploadFiles', (event) => {\n            this.upload(event);\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./src/lib/helpers/index.ts\n\n\n\n\n\n// CONCATENATED MODULE: ./src/index.ts\n//getMimetype\n\n\n\n\nconst SDK_PATH = 'https://static.filestackapi.com/filestack-js/3.x.x/filestack.min.js';\nclass src_FilestackDnD {\n    constructor(apikey, element, appConfigs, sdkConfig) {\n        if (!appConfigs) {\n            appConfigs = app_appConfig; // default config\n        }\n        else {\n            appConfigs = Object.assign(app_appConfig, appConfigs);\n        }\n        this.eventEmitter = new EventEmitter();\n        this.elements = new ElementsHelper(this.eventEmitter, element);\n        if (typeof apikey === 'string') {\n            this.sdk = Object(filestack_esm[\"a\" /* init */])(apikey, sdkConfig);\n            this.init(appConfigs);\n        }\n        else {\n            this.sdk = apikey;\n            this.init(appConfigs);\n        }\n    }\n    init(appConfigs) {\n        this.uploads = new upload_Uploads(this.sdk, this.eventEmitter, appConfigs);\n        this.initErrorEvents();\n    }\n    get elementsHelper() {\n        return this.elements;\n    }\n    get eventEmitterHelper() {\n        return this.eventEmitter;\n    }\n    get uploadsHelper() {\n        return this.uploads;\n    }\n    get fileStackSdk() {\n        return this.sdk;\n    }\n    setElements(elements) {\n        if (elements instanceof HTMLElement) {\n            this.elementsHelper.setElement(elements);\n        }\n        else {\n            this.elementsHelper.setElements(elements);\n        }\n    }\n    setUploadOptions(uploadOptions) {\n        this.uploadsHelper.setUploadOptions(uploadOptions);\n    }\n    on(event, listener) {\n        return this.eventEmitterHelper.on(event, listener);\n    }\n    emit(event, ...args) {\n        return this.eventEmitterHelper.emit(event, args);\n    }\n    initErrorEvents() {\n        this.sdk.on('upload.error', filestackError => {\n            this.eventEmitter.emit(UploadStatusEnum.error, { data: filestackError });\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n")}]);